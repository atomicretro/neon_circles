{"version":3,"file":"bundle.js","mappings":"+3BAAO,IAAMA,EAAU,WAIpB,OAAAC,GAHD,SAAAD,EAAYE,GAAMC,EAAA,KAAAH,GAChBI,KAAKF,KAAOA,EACZE,KAAKC,KAAO,EACd,GAAC,EAAAC,IAAA,MAAAC,MAED,SAAIC,GACGJ,KAAKC,KAAKD,KAAKF,KAAO,GAAGO,UAC5BL,KAAKC,KAAKD,KAAKF,KAAO,GAAGQ,MAAMF,GAC/BJ,KAAKC,KAAKM,QAAQP,KAAKC,KAAKO,OAEhC,GAAC,CAAAN,IAAA,OAAAC,MAED,SAAKM,GACH,IAAK,IAAIC,EAAI,EAAGA,EAAIV,KAAKF,MACnBE,KAAKC,KAAKS,GAAGL,QADYK,IAE3BV,KAAKC,KAAKS,GAAGC,KAAKX,KAAKY,YACnBZ,KAAKC,KAAKS,GAAGG,cACfb,KAAKC,KAAKS,GAAGI,iBAAiBL,GAC9BT,KAAKC,KAAKc,KAAMf,KAAKC,KAAKe,OAAON,EAAG,GAAI,IAMhD,IAAC,CAzBoB,GA4BVO,EAAM,WAUhB,OAAApB,GATD,SAAAoB,EAAYC,EAASC,EAAOC,EAAUC,EAAWC,EAAMC,GAAMxB,EAAA,KAAAkB,GAC3DjB,KAAKkB,QAAUA,EACflB,KAAKmB,MAAQA,EACbnB,KAAKoB,SAAWA,EAChBpB,KAAKqB,UAAYA,EACjBrB,KAAKsB,KAAOA,EACZtB,KAAKuB,KAAOA,EAEZvB,KAAKW,KAAOX,KAAKW,KAAKa,KAAKxB,KAC7B,GAAC,EAAAE,IAAA,OAAAC,MAED,SAAKsB,EAAYC,GACf1B,KAAKkB,QAAQS,UACX3B,KAAKmB,MACLnB,KAAKsB,KACLtB,KAAKuB,KACLvB,KAAKoB,SACLpB,KAAKqB,UACLI,EACAC,EACA1B,KAAKoB,SACLpB,KAAKqB,UAET,IAAC,CAxBgB,GA2BNO,EAAU,WAgEpB,OAAA/B,GA/DD,SAAA+B,EAAYC,GAAM,IAAAC,EAAA,KAAA/B,EAAA,KAAA6B,GAChB5B,KAAK6B,KAAOA,EAEZ7B,KAAK+B,gBAAkB,IAAIC,MAAM,sCACjChC,KAAK+B,gBAAgBE,MAAO,EAC5BjC,KAAK+B,gBAAgBG,OAAS,IAC9BlC,KAAK+B,gBAAgBI,OACrBnC,KAAKoC,gBAAkBpC,KAAKoC,gBAAgBZ,KAAKxB,MACjDA,KAAKqC,WAAaC,OAAOC,aAAY,WAAOT,EAAKM,iBAAiB,GAAG,KAErEpC,KAAKwC,WAAa,CAChBrB,MAAO,IAAIsB,MACXC,MAAO,GACPC,OAAQ,GACRrB,KAAM,EACNC,KAAM,GAERvB,KAAK4C,SAAW,CACdzB,MAAO,IAAIsB,MACXC,MAAO,GACPC,OAAQ,GACRrB,KAAM,EACNC,KAAM,GAERvB,KAAK6C,UAAY,CACf1B,MAAO,IAAIsB,MACXC,MAAO,GACPC,OAAQ,GACRrB,KAAM,EACNC,KAAM,GAERvB,KAAK8C,UAAY,CACf3B,MAAO,IAAIsB,MACXC,MAAO,GACPC,OAAQ,GACRrB,KAAM,EACNC,KAAM,GAERvB,KAAK+C,MAAQ,CAAE5B,MAAO,IAAIsB,OAC1BzC,KAAKgD,GAAK,CACR7B,MAAO,IAAIsB,MACXC,MAAO,GACPC,OAAQ,GACRrB,KAAM,EACNC,KAAM,GAGRvB,KAAKiD,UAAY,EACjBjD,KAAKkD,UAAY,EAEjBlD,KAAKwC,WAAWrB,MAAMgC,OAAS,WAAQrB,EAAKsB,aAAe,EAC3DpD,KAAK4C,SAASzB,MAAMgC,OAAS,WAAQrB,EAAKsB,aAAe,EACzDpD,KAAK6C,UAAU1B,MAAMgC,OAAS,WAAQrB,EAAKsB,aAAe,EAC1DpD,KAAK8C,UAAU3B,MAAMgC,OAAS,WAAQrB,EAAKsB,aAAe,EAC1DpD,KAAK+C,MAAM5B,MAAMgC,OAAS,WAAQrB,EAAKsB,aAAe,EACtDpD,KAAKgD,GAAG7B,MAAMgC,OAAS,WAAQrB,EAAKsB,aAAe,EAEnDpD,KAAKwC,WAAWrB,MAAMkC,IAAM,iCAC5BrD,KAAK4C,SAASzB,MAAMkC,IAAM,+BAC1BrD,KAAK6C,UAAU1B,MAAMkC,IAAM,gCAC3BrD,KAAK8C,UAAU3B,MAAMkC,IAAM,gCAC3BrD,KAAK+C,MAAM5B,MAAMkC,IAAM,2BACvBrD,KAAKgD,GAAG7B,MAAMkC,IAAM,uBACtB,GAAC,EAAAnD,IAAA,kBAAAC,MAED,WAC0C,IAApCH,KAAK+B,gBAAgBuB,aACvBhB,OAAOiB,cAAcvD,KAAKqC,YAC1BrC,KAAKoD,cAET,GAAC,CAAAlD,IAAA,cAAAC,MAED,WACEH,KAAKkD,YACDlD,KAAKkD,YAAclD,KAAKiD,WAC1BjD,KAAK6B,KAAK2B,WAEd,IAAC,CA9EoB,GAiFhB,SAASC,EAAMC,EAAUC,GAC9B,IAAIC,EAASC,EAAOC,EAAYH,EAEhC3D,KAAK+D,MAAQ,WACXzB,OAAO0B,aAAaJ,GACpBE,GAAa,IAAIG,KAASJ,CAC5B,EAEA7D,KAAKkE,OAAS,WACZL,EAAQ,IAAII,KACZ3B,OAAO0B,aAAaJ,GACpBA,EAAUtB,OAAO6B,WAAWT,EAAUI,EACxC,EAEA9D,KAAKoE,MAAQ,WACX9B,OAAO0B,aAAaJ,EACtB,EAEA5D,KAAKkE,QACP,CAEO,IAAMG,EAAa,SAACC,EAAKC,GAC9B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAOA,CACxD,E,+vCC/JyC,IAEpB1D,EAAU,SAAA+D,GAC7B,SAAA/D,EAAYd,EAAM8E,EAAUnE,GAAM,IAAAqB,E,MAAA/B,EAAA,KAAAa,G,EAChC,K,EAAA,CAAMd,G,MAANc,GAAAkB,E,uWAEA,IAAK,IAAIpB,EAAI,EAAGA,EAAIZ,EAAMY,IAAK,CAC7B,IAAImE,EAAS,IAAIC,EAAOF,EAAUnE,GAClCqB,EAAK7B,KAAKc,KAAK8D,EACjB,CAAC,OAAA/C,CACH,CAAC,O,qRAAAiD,CAAAnE,EAAA+D,GAAA9E,EAAAe,EAAA,CAR4B,CAAShB,GAWlCkF,EAAM,WAQT,OAAAjF,GAPD,SAAAiF,EAAYF,EAAUnE,GAAMV,EAAA,KAAA+E,GAC1B9E,KAAKgF,IAAMJ,EAASI,IACpBhF,KAAKiF,SAAWL,EAASlC,MACzB1C,KAAKkF,UAAYN,EAASjC,OAC1B3C,KAAKmF,OAASP,EAASlC,MAAQ,EAC/B1C,KAAKoF,OAASR,EAASjC,OAAS,EAChC3C,KAAKc,iBAAiBL,EACxB,GAAC,EAAAP,IAAA,QAAAC,MAED,SAAMkF,GACJrF,KAAKsF,UAAYD,EAAWE,MAC5BvF,KAAKwF,YAAcH,EAAWG,YAC9BxF,KAAKyF,UAAYJ,EAAWI,UAC5BzF,KAAK0F,MAAQL,EAAWK,MACxB1F,KAAK2F,WAAa3F,KAAK4F,aAAa5F,KAAKwF,aACzCxF,KAAK6F,SAAW7F,KAAK4F,aAAa5F,KAAKyF,WACvCzF,KAAKK,SAAU,CACjB,GAAC,CAAAH,IAAA,OAAAC,MAED,WACEH,KAAKwF,aAAexF,KAAK0F,MACzB1F,KAAKyF,WAAazF,KAAK0F,MACvB1F,KAAK2F,WAAa3F,KAAK4F,aAAa5F,KAAKwF,aACzCxF,KAAK6F,SAAW7F,KAAK4F,aAAa5F,KAAKyF,WAEvCzF,KAAKoE,OACP,GAAC,CAAAlE,IAAA,YAAAC,MAED,WACE,SACGH,KAAK2F,WAAWG,GAAK,GAAK9F,KAAK6F,SAASC,GAAK,KAC1C9F,KAAK2F,WAAWG,EAAI9F,KAAKoF,QAAUpF,KAAK6F,SAASC,EAAI9F,KAAKoF,UAC1DpF,KAAK2F,WAAWI,GAAK,GAAK/F,KAAK6F,SAASE,GAAK,KAC7C/F,KAAK2F,WAAWI,EAAI/F,KAAKmF,QAAUnF,KAAK6F,SAASE,EAAI/F,KAAKmF,QAMlE,GAAC,CAAAjF,IAAA,QAAAC,MAED,WACE,IAAI6F,EACAC,EAGFD,EADEhG,KAAK2F,WAAWI,EAAI/F,KAAK6F,SAASE,EAC3B/F,KAAK6F,SAASE,EAEd/F,KAAK2F,WAAWI,EAGzBE,EADEjG,KAAK2F,WAAWG,EAAI9F,KAAK6F,SAASC,EAC3B9F,KAAK6F,SAASC,EAEd9F,KAAK2F,WAAWG,EAG3B9F,KAAKgF,IAAIkB,UAAUF,EAAQC,EAAQ,GAAI,GACzC,GAAC,CAAA/F,IAAA,eAAAC,MAED,SAAagG,GAIX,MAAQ,CACNJ,EAAGvB,KAAK4B,IAAIpG,KAAKsF,YAAca,EAASnG,KAAKqG,QAAU,EACvDP,EAAGtB,KAAK8B,IAAItG,KAAKsF,YAAca,EAASnG,KAAKuG,QAAU,EAE3D,GAAC,CAAArG,IAAA,mBAAAC,MAED,SAAiBM,GACfT,KAAKqG,QAAUrG,KAAKiF,SAAW,EAC/BjF,KAAKuG,QAAUvG,KAAKkF,UAAY,EAChClF,KAAKsF,UAAY,EACjBtF,KAAK2F,WAAa,CAACI,EAAG,EAAGD,EAAG,GAC5B9F,KAAK6F,SAAW,CAACE,EAAG,EAAGD,EAAG,GAC1B9F,KAAK0F,MAAQ,EACb1F,KAAKK,SAAU,CACjB,IAAC,CA9ES,G,+vCCXZ,IAAMgE,EAAa,SAACC,EAAKC,GACvB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAOA,CACxD,EAEqBkC,EAAS,SAAA7B,GAC5B,SAAA6B,EAAYC,EAAQzB,EAAKpD,EAAYhB,GAAY,IAAAkB,E,MAAA/B,EAAA,KAAAyG,I,EAC/C,K,EAAAA,E,EAAA,CAAMC,EAAOC,OAAQ1B,G,OAArBlD,E,wWACKlB,WAAaA,EAElB,IAAK,IAAIF,EAAI,EAAGA,EAAI+F,EAAOC,OAAQhG,IAAK,CACtC,IAAMiG,EAAQ,IAAIC,EAAM5B,EAAKyB,EAAO/F,GAAIkB,GACxCE,EAAK7B,KAAKc,KAAK4F,EACjB,CAAC,OAAA7E,CACH,CAAC,O,qRAAAiD,CAAAyB,EAAA7B,GAAA9E,EAAA2G,EAAA,CAT2B,CAAS5G,GAYjCgH,EAAK,WAkBR,OAAA/G,GAjBD,SAAA+G,EAAY5B,EAAKvE,EAAMmB,GAAY7B,EAAA,KAAA6G,GACjC5G,KAAKgF,IAAMA,EACXhF,KAAKS,KAAOA,EAEZ,IAAMoG,EAAcjF,EAAWnB,GAC/BT,KAAKmB,MAAQ0F,EAAY1F,MACzBnB,KAAK0C,MAAQmE,EAAYnE,MACzB1C,KAAK2C,OAASkE,EAAYlE,OAC1B3C,KAAK8G,OAAS,IAAI7F,EAChB+D,EACA6B,EAAY1F,MACZnB,KAAK0C,MACL1C,KAAK2C,OACLkE,EAAYvF,KACZuF,EAAYtF,MAEdvB,KAAKc,kBACP,GAAC,EAAAZ,IAAA,QAAAC,MAED,WACEH,KAAK+G,UAAY/G,KAAKgH,mBACtBhH,KAAKK,SAAU,CACjB,GAAC,CAAAH,IAAA,OAAAC,MAED,SAAKS,GACe,cAAdZ,KAAKS,OACHT,KAAKmG,OAASnG,KAAKyF,UACrBzF,KAAKmG,QAAU3B,KAAKyC,IAAiB,IAAbjH,KAAK0F,OAE7B1F,KAAK0F,MAAQ1F,KAAKkH,UAIlBlH,KAAKmH,oBAAsB,GAC7BnH,KAAKmH,sBAEPnH,KAAKuF,OAASvF,KAAK0F,MACnB1F,KAAK+G,UAAY/G,KAAKgH,mBAGN,cAAdhH,KAAKS,MAAwBT,KAAKmH,oBAAsB,GACvC,cAAdnH,KAAKS,MAAwBT,KAAKmH,oBAAsB,EAE3DnH,KAAKoH,WAAWzG,KAAKX,KAAK+G,UAAUhB,EAAG/F,KAAK+G,UAAUjB,GAEtD9F,KAAK8G,OAAOnG,KAAKX,KAAK+G,UAAUhB,EAAG/F,KAAK+G,UAAUjB,GAGpD9F,KAAKqH,aAAe7C,KAAKC,MAAsB,IAAhBD,KAAKE,UAChC1E,KAAKqH,aAAe,IAAMrH,KAAKsH,eACjCtH,KAAKuH,KAAK3G,EAEd,GAAC,CAAAV,IAAA,YAAAC,MAED,WACE,OAAIH,KAAKwH,MAAQ,CAInB,GAAC,CAAAtH,IAAA,mBAAAC,MAED,WACE,MAAO,CACL4F,EAAGvB,KAAK4B,IAAIpG,KAAKuF,QAAUvF,KAAKmG,OAAU,IAC1CL,EAAGtB,KAAK8B,IAAItG,KAAKuF,QAAUvF,KAAKmG,OAAU,IAE9C,GAAC,CAAAjG,IAAA,QAAAC,MAED,WACEH,KAAKgF,IAAIkB,UACPlG,KAAK+G,UAAUhB,EAAI,EACnB/F,KAAK+G,UAAUjB,EAAI,EACnB9F,KAAK0C,MAAQ,GACb1C,KAAK2C,OAAS,GAElB,GAAC,CAAAzC,IAAA,OAAAC,MAED,SAAKS,GACH,IAAMyE,EAAa,CACjBE,MAAOvF,KAAKuF,MACZC,YAAaxF,KAAKmG,OAClBV,UAAWzF,KAAKmG,OAAS,GACzBT,MAAO,EACPC,WAAY,CACVI,EAAG/F,KAAK+G,UAAUhB,EAAI/F,KAAK0C,MAAQ,EACnCoD,EAAG9F,KAAK+G,UAAUjB,EAAI9F,KAAK2C,OAAS,IAGxC/B,EAAW6G,IAAIpC,EACjB,GAAC,CAAAnF,IAAA,QAAAC,MAED,WACEH,KAAKwH,MAAQ,EACK,cAAdxH,KAAKS,KACPT,KAAKmH,oBAAsB,IAE3BnH,KAAKmH,oBAAsB,EAE/B,GAAC,CAAAjH,IAAA,mBAAAC,MAED,WACE,IAAMuH,EAAkBlD,KAAKE,SAAW,IAAO,EAAI,EAC7CiD,EAAkBnD,KAAKE,SAAW,IAAO,EAAI,EAEjC,eAAd1E,KAAKS,MAAuC,aAAdT,KAAKS,MACrCT,KAAKuF,MAASf,KAAKoD,GAAK,EAAKF,EAC7B1H,KAAK0F,MAASrB,EAAW,EAAG,GAAK,IAAQsD,EACzC3H,KAAKmG,OAAS9B,EAAW,IAAK,KAC9BrE,KAAKwH,KAAO,EACZxH,KAAKsH,cAAgB,KACE,cAAdtH,KAAKS,MACdT,KAAKuF,MAASf,KAAKoD,GAAK,EAAKF,EAC7B1H,KAAK0F,MAASrB,EAAW,EAAG,GAAK,IAAQsD,EACzC3H,KAAKkH,SAAwB,EAAblH,KAAK0F,MACrB1F,KAAKmG,OAAS,IACdnG,KAAKyF,UAAYpB,EAAW,IAAK,KACjCrE,KAAKwH,KAAO,EACZxH,KAAKsH,cAAgB,IACrBtH,KAAKoH,WAAa,IAAInG,EACpBjB,KAAKgF,IACLhF,KAAKmB,MACLnB,KAAK0C,MACL1C,KAAK2C,OACL,GACA,IAEqB,cAAd3C,KAAKS,OACdT,KAAKuF,MAASf,KAAKoD,GAAK,EAAKF,EAC7B1H,KAAK0F,MAASrB,EAAW,EAAG,GAAK,IAAQsD,EACzC3H,KAAKmG,OAAS9B,EAAW,IAAK,KAC9BrE,KAAKwH,KAAQ,EACbxH,KAAKsH,cAAgB,IACrBtH,KAAKoH,WAAa,IAAInG,EACpBjB,KAAKgF,IACLhF,KAAKmB,MACLnB,KAAK0C,MACL1C,KAAK2C,OACL,GACA,IAGJ3C,KAAKmH,oBAAsB,EAC3BnH,KAAKqH,aAAe,EACpBrH,KAAKK,SAAU,EACfL,KAAK+G,UAAY,CAAEhB,EAAG,IAAKD,EAAG,IAChC,IAAC,CAlJQ,G,kqBClB0B,IAE/B+B,EAAK,WA+CR,O,EA9CD,SAAAA,EACEC,EACAC,EACAC,EACAC,EACArG,EACAsG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,I,4FACA9I,CAAA,KAAA8H,GACA7H,KAAK4E,SAAWkD,EAChB9H,KAAK8I,YAAcf,EACnB/H,KAAK+I,SAAWf,EAChBhI,KAAKgJ,WAAaf,EAClBjI,KAAKiJ,aAAeL,EAEpB5I,KAAK4B,WAAaA,EAClB5B,KAAKkI,gBAAkBA,EACvBlI,KAAKmI,eAAiBA,EACtBnI,KAAKoI,aAAeA,EACpBpI,KAAKqI,cAAgBA,EACrBrI,KAAKsI,cAAgBA,EACrBtI,KAAKuI,cAAgBA,EACrBvI,KAAKwI,YAAcA,EAEnBxI,KAAKyI,OAASA,EACdzI,KAAK0I,kBAAoBA,EACzB1I,KAAK6I,aAAeA,EACpB7I,KAAK2I,WAAaA,EAElB3I,KAAKkJ,SAAWjF,KAAKkF,IACrBnJ,KAAKoJ,YAAc,EACnBpJ,KAAK+C,MAAQ,IAAI9B,EACfjB,KAAK8I,YAAY9D,IACjBhF,KAAK4B,WAAWmB,MAAM5B,MACtB,GAAI,GAAI,EAAG,EAEf,G,EAAC,EAAAjB,IAAA,0BAAAC,MAED,SAAwBkJ,GACtBrJ,KAAK0I,kBAAoBW,CAC3B,GAAC,CAAAnJ,IAAA,qBAAAC,MAED,SAAmBmJ,GACjBtJ,KAAK6I,aAAeS,CACtB,GAAC,CAAApJ,IAAA,mBAAAC,MAED,SAAiBwI,GACf3I,KAAK2I,WAAaA,CACpB,GAAC,CAAAzI,IAAA,0BAAAC,MAED,WAGE,IAAIoJ,EACAC,EAHJxJ,KAAKyJ,mBAImB,SAApBzJ,KAAK2I,YACPY,EAAc,CACZG,KAAM,YAAa5J,KAAM,OAAQiG,EAAG,IAAKD,EAAG,IAE9C0D,EAAgB,CACdE,KAAM,sCAAuC5J,KAAM,OAAQiG,EAAG,IAAKD,EAAG,OAGxEyD,EAAc,CACZG,KAAM,oBAAqB5J,KAAM,OAAQiG,EAAG,IAAKD,EAAG,IAEtD0D,EAAgB,CACdE,KAAM,kCAAmC5J,KAAM,OAAQiG,EAAG,IAAKD,EAAG,MAGtE9F,KAAK2J,uBAAuBJ,EAAaC,GAEzCxJ,KAAK4J,cAWP,GAAC,CAAA1J,IAAA,wBAAAC,MAED,WAGE,IAAIoJ,EACAC,EAHJxJ,KAAKyJ,mBAImB,SAApBzJ,KAAK2I,YACPY,EAAc,CACZG,KAAM,YAAa5J,KAAM,OAAQiG,EAAG,IAAKD,EAAG,IAE9C0D,EAAgB,CACdE,KAAM,sCAAuC5J,KAAM,OAAQiG,EAAG,IAAKD,EAAG,OAGxEyD,EAAc,CACZG,KAAM,oBAAqB5J,KAAM,OAAQiG,EAAG,IAAKD,EAAG,IAEtD0D,EAAgB,CACdE,KAAM,kCAAmC5J,KAAM,OAAQiG,EAAG,IAAKD,EAAG,MAGtE9F,KAAK2J,uBAAuBJ,EAAaC,GAEzCxJ,KAAK6J,oBACP,GAAC,CAAA3J,IAAA,mBAAAC,MAED,WACEH,KAAKgJ,WAAWc,OAAOC,UAAUC,OAAO,UACxChK,KAAKiK,mBACLjK,KAAKgJ,WAAWhE,IAAIkF,UAAY,qBAChClK,KAAKgJ,WAAWhE,IAAImF,SAAS,EAAG,EAAG,IAAK,KAExCnK,KAAKgJ,WAAWhE,IAAIkF,UAAY,QAChClK,KAAKgJ,WAAWhE,IAAIoF,YAAc,QAClCpK,KAAKgJ,WAAWhE,IAAIqF,WAAW,IAAK,IAAK,IAAK,IAC9CrK,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,OAAQ,IAAK,IAC5C,GAAC,CAAArK,IAAA,yBAAAC,MAED,SAAuBoJ,EAAaC,GAClCxJ,KAAKgJ,WAAWhE,IAAIkF,UAAY,QAChClK,KAAKgJ,WAAWhE,IAAIsF,KAAO,GAAHE,OAAMjB,EAAYzJ,KAAI,8BAC9CE,KAAKgJ,WAAWhE,IAAIuF,SAClBhB,EAAYG,KAAMH,EAAYxD,EAAGwD,EAAYzD,GAE/C9F,KAAKgJ,WAAWhE,IAAIsF,KAAO,GAAHE,OAAMhB,EAAc1J,KAAI,8BAChDE,KAAKgJ,WAAWhE,IAAIuF,SAClBf,EAAcE,KAAMF,EAAczD,EAAGyD,EAAc1D,EAEvD,GAAC,CAAA5F,IAAA,eAAAC,MAED,WACE,IAAIsK,EACAC,EAC2B,aAA3B1K,KAAK0I,mBACPgC,EAAM,CACJC,OAAQ,GAAIC,OAAQ,IACpBC,OAAQ,GAAIC,OAAQ,IACpBC,QAAS,IAAKC,QAAS,KAEzBP,EAAK,CACHE,OAAQ,IAAKC,OAAQ,IACrBC,OAAQ,IAAKC,OAAQ,IACrBC,SAAU,IAAKC,QAAS,OAG1BN,EAAM,CACJC,OAAQ,IAAKC,OAAQ,IACrBC,OAAQ,GAAIC,OAAQ,IACpBC,QAAS,IAAKC,QAAS,KAEzBP,EAAK,CACHE,OAAQ,IAAKC,OAAQ,IACrBC,OAAQ,IAAKC,OAAQ,IACrBC,SAAU,IAAKC,QAAS,MAI5BhL,KAAKiL,yBAELjL,KAAKgJ,WAAWhE,IAAIkF,UAAY,QAChClK,KAAKgJ,WAAWhE,IAAIoF,YAAc,QAElCpK,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,mBAAoBG,EAAIC,OAAQD,EAAIE,QACjE5K,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,eAAgBG,EAAIG,OAAQH,EAAII,QAE7D9K,KAAKgJ,WAAWhE,IAAIkG,YACpBlL,KAAKgJ,WAAWhE,IAAImG,IAClBT,EAAIK,QACJL,EAAIM,QACJ,GACAxG,KAAKoD,GAAK,EACVpD,KAAKoD,IACL,GAEF5H,KAAKgJ,WAAWhE,IAAIoG,UAAY,EAChCpL,KAAKgJ,WAAWhE,IAAIqG,SACpBrL,KAAKgJ,WAAWhE,IAAIkG,YACpBlL,KAAKgJ,WAAWhE,IAAIsG,OAAO9G,KAAKyC,IAAIyD,EAAIK,QAAU,IAAKL,EAAIM,SAC3DhL,KAAKgJ,WAAWhE,IAAIuG,OAAO/G,KAAKyC,IAAIyD,EAAIK,QAAU,IAAML,EAAIM,QAAU,IACtEhL,KAAKgJ,WAAWhE,IAAIqG,SACpBrL,KAAKgJ,WAAWhE,IAAIsG,OAAO9G,KAAKyC,IAAIyD,EAAIK,QAAU,IAAKL,EAAIM,SAC3DhL,KAAKgJ,WAAWhE,IAAIuG,OAAO/G,KAAKyC,IAAIyD,EAAIK,QAAU,IAAML,EAAIM,QAAU,IACtEhL,KAAKgJ,WAAWhE,IAAIqG,SAEpBrL,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,YAAaE,EAAGE,OAAQF,EAAGG,QACxD5K,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,gBAAiBE,EAAGI,OAAQJ,EAAGK,QAE5D9K,KAAKgJ,WAAWhE,IAAIkG,YACpBlL,KAAKgJ,WAAWhE,IAAImG,IAClB3G,KAAKyC,IAAIwD,EAAGM,SAAUN,EAAGO,QAAS,GAAGxG,KAAKoD,GAAG,EAAG,GAAG,GAErD5H,KAAKgJ,WAAWhE,IAAIoG,UAAY,EAChCpL,KAAKgJ,WAAWhE,IAAIqG,SACpBrL,KAAKgJ,WAAWhE,IAAIkG,YACpBlL,KAAKgJ,WAAWhE,IAAIsG,OAAO9G,KAAKyC,IAAIwD,EAAGM,QAAU,IAAKN,EAAGO,SACzDhL,KAAKgJ,WAAWhE,IAAIuG,OAAO/G,KAAKyC,IAAIwD,EAAGM,QAAU,IAAMN,EAAGO,QAAU,IACpEhL,KAAKgJ,WAAWhE,IAAIqG,SACpBrL,KAAKgJ,WAAWhE,IAAIsG,OAAO9G,KAAKyC,IAAIwD,EAAGM,QAAU,IAAKN,EAAGO,SACzDhL,KAAKgJ,WAAWhE,IAAIuG,OAAO/G,KAAKyC,IAAIwD,EAAGM,QAAU,IAAMN,EAAGO,QAAU,IACpEhL,KAAKgJ,WAAWhE,IAAIqG,SAEpBrL,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAClB,qBAAsB,IAAK,KAE7BvK,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAClB,uBAAwB,IAAK,KAG/BvK,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAClB,mCAAoC,IAAK,KAE3CvK,KAAKgJ,WAAWhE,IAAIkG,YACpBlL,KAAKgJ,WAAWhE,IAAIsG,OAAO,IAAK,KAChCtL,KAAKgJ,WAAWhE,IAAIuG,OAAO,IAAK,KAChCvL,KAAKgJ,WAAWhE,IAAIqG,SAEpBrL,KAAKwL,0BAELxL,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,aAAc,IAAK,KAChDvK,KAAKgJ,WAAWhE,IAAIuF,SAAS,cAAe,IAAK,KACzB,YAApBvK,KAAK2I,YACP3I,KAAKgJ,WAAWhE,IAAIuF,SAAS,kBAAmB,IAAK,IAEzD,GAAC,CAAArK,IAAA,qBAAAC,MAED,WACE,IAAIsK,EACAC,EACAe,EAEyB,aAA3BzL,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,cAE9C6B,EAAM,CAAEgB,MAAO,EAAGC,MAAO,IAAKZ,QAAS,IAAKC,QAAS,KACrDP,EAAK,CAAEiB,MAAO,GAAIC,MAAO,IAAKZ,QAAS,IAAKC,QAAS,KACrDS,EAAU,CAAE1F,EAAG,IAAKD,EAAG,KACvB9F,KAAKgJ,WAAWhE,IAAIoF,YAAc,QAClCpK,KAAKgJ,WAAWhE,IAAIqF,WAAW,EAAE,EAAE,IAAI,KACvCrK,KAAKgJ,WAAWhE,IAAIqF,WAAW,EAAE,IAAI,IAAI,KACzCrK,KAAKgJ,WAAWhE,IAAIqF,WAAW,IAAI,EAAE,IAAI,MAEd,aAA3BrK,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,cAE9C6B,EAAM,CAAEgB,MAAO,EAAGC,MAAO,IAAKZ,QAAS,IAAKC,QAAS,KACrDP,EAAK,CAAEiB,MAAO,GAAIC,MAAO,IAAKZ,QAAS,IAAKC,QAAS,KACrDS,EAAU,CAAE1F,EAAG,IAAKD,EAAG,KACvB9F,KAAKgJ,WAAWhE,IAAIoF,YAAc,QAClCpK,KAAKgJ,WAAWhE,IAAIqF,WAAW,EAAE,EAAE,IAAI,KACvCrK,KAAKgJ,WAAWhE,IAAIqF,WAAW,EAAE,IAAI,IAAI,KACzCrK,KAAKgJ,WAAWhE,IAAIqF,WAAW,IAAI,EAAE,IAAI,MAEd,aAA3BrK,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,cAE9C6B,EAAM,CAAEgB,MAAO,IAAKC,MAAO,IAAKZ,QAAS,IAAKC,QAAS,KACvDP,EAAK,CAAEiB,MAAO,IAAKC,MAAO,IAAKZ,QAAS,IAAKC,QAAS,KACtDS,EAAU,CAAE1F,EAAG,GAAID,EAAG,KACtB9F,KAAKgJ,WAAWhE,IAAIoF,YAAc,QAClCpK,KAAKgJ,WAAWhE,IAAIqF,WAAW,IAAI,EAAE,IAAI,KACzCrK,KAAKgJ,WAAWhE,IAAIqF,WAAW,IAAI,IAAI,IAAI,KAC3CrK,KAAKgJ,WAAWhE,IAAIqF,WAAW,EAAE,EAAE,IAAI,MAEZ,aAA3BrK,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,eAE9C6B,EAAM,CAAEgB,MAAO,IAAKC,MAAO,IAAKZ,QAAS,IAAKC,QAAS,KACvDP,EAAK,CAAEiB,MAAO,IAAKC,MAAO,IAAKZ,QAAS,IAAKC,QAAS,KACtDS,EAAU,CAAE1F,EAAG,GAAID,EAAG,KACtB9F,KAAKgJ,WAAWhE,IAAIqF,WAAW,IAAI,EAAE,IAAI,KACzCrK,KAAKgJ,WAAWhE,IAAIqF,WAAW,IAAI,IAAI,IAAI,KAC3CrK,KAAKgJ,WAAWhE,IAAIqF,WAAW,EAAE,EAAE,IAAI,MAGzCrK,KAAKiL,yBACLjL,KAAK4L,qBAEL5L,KAAKgJ,WAAWhE,IAAIkF,UAAY,QAChClK,KAAKgJ,WAAWhE,IAAIoF,YAAc,QAGlCpK,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,mBAAoBG,EAAIgB,MAAOhB,EAAIiB,OAGhE3L,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,QAASkB,EAAQ1F,EAAG0F,EAAQ3F,GAGzD9F,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,YAAaE,EAAGiB,MAAOjB,EAAGkB,OAGvD3L,KAAKgJ,WAAWhE,IAAIkG,YACpBlL,KAAKgJ,WAAWhE,IAAImG,IAAIT,EAAIK,QAASL,EAAIM,QAAS,GAAIxG,KAAKoD,GAAK,EAAGpD,KAAKoD,IAAI,GAC5E5H,KAAKgJ,WAAWhE,IAAIoG,UAAY,EAChCpL,KAAKgJ,WAAWhE,IAAIqG,SACpBrL,KAAKgJ,WAAWhE,IAAIkG,YACpBlL,KAAKgJ,WAAWhE,IAAIsG,OAAQZ,EAAIK,QAAU,GAAKL,EAAIM,SACnDhL,KAAKgJ,WAAWhE,IAAIuG,OAAQb,EAAIK,QAAU,GAAML,EAAIM,QAAU,IAC9DhL,KAAKgJ,WAAWhE,IAAIqG,SACpBrL,KAAKgJ,WAAWhE,IAAIsG,OAAQZ,EAAIK,QAAU,GAAKL,EAAIM,SACnDhL,KAAKgJ,WAAWhE,IAAIuG,OAAQb,EAAIK,QAAU,GAAML,EAAIM,QAAU,IAC9DhL,KAAKgJ,WAAWhE,IAAIqG,SAGpBrL,KAAKgJ,WAAWhE,IAAIkG,YACpBlL,KAAKgJ,WAAWhE,IAAImG,IAAIV,EAAGM,QAASN,EAAGO,QAAS,GAAIxG,KAAKoD,GAAK,EAAG,GAAG,GACpE5H,KAAKgJ,WAAWhE,IAAIoG,UAAY,EAChCpL,KAAKgJ,WAAWhE,IAAIqG,SACpBrL,KAAKgJ,WAAWhE,IAAIkG,YACpBlL,KAAKgJ,WAAWhE,IAAIsG,OAAQb,EAAGM,QAAU,GAAKN,EAAGO,SACjDhL,KAAKgJ,WAAWhE,IAAIuG,OAAQd,EAAGM,QAAU,GAAMN,EAAGO,QAAU,IAC5DhL,KAAKgJ,WAAWhE,IAAIqG,SACpBrL,KAAKgJ,WAAWhE,IAAIsG,OAAQb,EAAGM,QAAU,GAAKN,EAAGO,SACjDhL,KAAKgJ,WAAWhE,IAAIuG,OAAQd,EAAGM,QAAU,GAAMN,EAAGO,QAAU,IAC5DhL,KAAKgJ,WAAWhE,IAAIqG,QACtB,GAAC,CAAAnL,IAAA,yBAAAC,MAED,WACEH,KAAKgJ,WAAWhE,IAAIoF,YAAc,QAClCpK,KAAKgJ,WAAWhE,IAAIqF,WAAW,IAAI,IAAI,IAAI,IAC3CrK,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,0BAA2B,IAAK,IAC/D,GAAC,CAAArK,IAAA,qBAAAC,MAED,WACEH,KAAKgJ,WAAWhE,IAAIoF,YAAc,QAClCpK,KAAKgJ,WAAWhE,IAAIqF,WAAW,IAAI,IAAI,IAAI,IAC3CrK,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,mBAAoB,IAAK,IACxD,GAAC,CAAArK,IAAA,0BAAAC,MAED,WACMH,KAAK6L,mBACP7L,KAAKgJ,WAAWhE,IAAIkB,UAAU,GAAG,IAAI,IAAI,IACzClG,KAAKgJ,WAAWhE,IAAIkF,UAAY,oBAChClK,KAAKgJ,WAAWhE,IAAImF,SAAS,GAAG,IAAI,IAAI,IACxCnK,KAAKgJ,WAAWhE,IAAIkF,UAAY,QAChClK,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCACvBtK,KAAK8L,cACP9L,KAAKgJ,WAAWhE,IAAIuF,SAAS,UAAW,GAAI,KAE5CvK,KAAKgJ,WAAWhE,IAAIuF,SAAS,WAAY,GAAI,KAE/CvK,KAAKgJ,WAAWhE,IAAIsF,KAAO,iCAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,uBAAwB,GAAI,KACzDvK,KAAKgJ,WAAWhE,IAAIuF,SAAS,iBAAkB,GAAI,KAEvD,GAAC,CAAArK,IAAA,SAAAC,MAED,WACEH,KAAK+L,kBACL/L,KAAKgM,iBACLhM,KAAKiM,qBACLjM,KAAKkM,gBAAgB,UACrBlM,KAAKyI,OAAO9H,OACZX,KAAKqI,cAAc1H,OACnBX,KAAKsI,cAAc3H,OACnBX,KAAKuI,cAAc5H,OACnBX,KAAKwI,YAAY7H,OACjBX,KAAKoI,aAAazH,KAAK,UACvBX,KAAKkI,gBAAgBvH,OACrBX,KAAKmI,eAAexH,MACtB,GAAC,CAAAT,IAAA,gBAAAC,MAED,WACEH,KAAK8I,YAAY9D,IAAIkF,UAAY,0BACjClK,KAAK8I,YAAY9D,IAAImF,SACnB,EACA,EACAnK,KAAK8I,YAAYpG,MACjB1C,KAAK8I,YAAYnG,QAInB3C,KAAK8I,YAAY9D,IAAIoF,YAAc,UACnCpK,KAAK8I,YAAY9D,IAAIqF,WAAW,IAAK,GAAI,GAAI,IAG7CrK,KAAKmM,mBAELnM,KAAK8I,YAAY9D,IAAIkF,UAAY,QACjClK,KAAK8I,YAAY9D,IAAIoF,YAAc,QAGnCpK,KAAK8I,YAAY9D,IAAIsF,KAAO,iCAC5BtK,KAAK8I,YAAY9D,IAAIuF,SAAS,QAAS,GAAI,IAC3CvK,KAAK8I,YAAY9D,IAAIsF,KAAO,iCAC5BtK,KAAK8I,YAAY9D,IAAIuF,SAAS,OAAQ,IAAK,IAC3CvK,KAAK8I,YAAY9D,IAAIsF,KAAO,iCAC5BtK,KAAK8I,YAAY9D,IAAIuF,SAAS,QAAS,IAAK,IAG5CvK,KAAK8I,YAAY9D,IAAIsF,KAAO,eAC5BtK,KAAK8I,YAAY9D,IAAIuF,SAAS,IAAK,GAAI,IAGvCvK,KAAK8I,YAAY9D,IAAIoG,UAAY,EACjCpL,KAAK8I,YAAY9D,IAAIqF,WAAW,IAAK,GAAI,IAAK,IAC9CrK,KAAK8I,YAAY9D,IAAIsF,KAAO,iCAC5BtK,KAAK8I,YAAY9D,IAAIuF,SAAS,OAAQ,IAAK,IAG3CvK,KAAK8I,YAAY9D,IAAIoG,UAAY,EACjCpL,KAAK8I,YAAY9D,IAAIqF,WAAW,IAAK,GAAI,IAAK,IAC9CrK,KAAK8I,YAAY9D,IAAIsF,KAAO,iCAC5BtK,KAAK8I,YAAY9D,IAAIuF,SAAS,QAAS,IAAK,GAC9C,GAAC,CAAArK,IAAA,mBAAAC,MAED,WACEH,KAAK8I,YAAY9D,IAAIkB,UAAU,IAAK,GAAI,IAAK,IAC7ClG,KAAK8I,YAAY9D,IAAIkF,UAAY,0BACjClK,KAAK8I,YAAY9D,IAAImF,SAAS,IAAK,GAAI,IAAK,IAC5C,IAAK,IAAIzJ,EAAI,EAAGA,EAAIV,KAAKyI,OAAOjB,KAAM9G,IACpCV,KAAK+C,MAAMpC,KAAK,IAAW,GAAJD,EAAS,GAEpC,GAAC,CAAAR,IAAA,oBAAAC,MAED,SAAkBiM,GAChBpM,KAAKoJ,aAAegD,EAEpBpM,KAAK8I,YAAY9D,IAAIkB,UAAU,GAAI,GAAI,IAAK,IAC5ClG,KAAK8I,YAAY9D,IAAIkF,UAAY,0BACjClK,KAAK8I,YAAY9D,IAAImF,SAAS,GAAI,GAAI,IAAK,IAC3CnK,KAAK8I,YAAY9D,IAAIkF,UAAY,QACjClK,KAAK8I,YAAY9D,IAAIsF,KAAO,eAC5BtK,KAAK8I,YAAY9D,IAAIuF,SAAS,GAADC,OAAIxK,KAAKoJ,aAAe,GAAI,GAC3D,GAAC,CAAAlJ,IAAA,qBAAAC,MAED,WACiC,IAA3BH,KAAKyI,OAAO4D,YACdrM,KAAK8I,YAAY9D,IAAIkB,UAAU,IAAK,GAAI,GAAI,IAC5ClG,KAAK8I,YAAY9D,IAAIkF,UAAY,0BACjClK,KAAK8I,YAAY9D,IAAImF,SAAS,IAAK,GAAI,GAAI,KAClCnK,KAAKyI,OAAO4D,WAAa,KAClCrM,KAAK8I,YAAY9D,IAAIkF,UAAY,UACjClK,KAAK8I,YAAY9D,IAAImF,SAAS,IAAK,GAA6B,EAAzBnK,KAAKyI,OAAO4D,WAAgB,IAEvE,GAAC,CAAAnM,IAAA,mBAAAC,MAED,SAAiBmM,GACftM,KAAK8I,YAAY9D,IAAIkB,UAAU,IAAK,GAAI,GAAI,IAC5ClG,KAAK8I,YAAY9D,IAAIkF,UAAY,0BACjClK,KAAK8I,YAAY9D,IAAImF,SAAS,IAAK,GAAI,GAAI,KAC7B,IAAVmC,GACFtM,KAAK8I,YAAY9D,IAAIkF,UAAY,QACjClK,KAAK8I,YAAY9D,IAAIsF,KAAO,iCAC5BtK,KAAK8I,YAAY9D,IAAIuF,SAAS,SAAU,IAAK,MAE7CvK,KAAK8I,YAAY9D,IAAIkF,UAAY,QACjClK,KAAK8I,YAAY9D,IAAIsF,KAAO,iCAC5BtK,KAAK8I,YAAY9D,IAAIuF,SAAS,OAAQ,IAAK,IAE/C,GAAC,CAAArK,IAAA,kBAAAC,MAED,SAAgBoM,GACd,IAAMC,EAAUxM,KAAK+I,SAASrG,MAAQ,EAChC+J,EAAUzM,KAAK+I,SAASpG,OAAS,EACnC3C,KAAKyI,OAAO4D,WAAa,GAC3BrM,KAAK+I,SAAS/D,IAAIoF,YAAc,QAEhCpK,KAAK+I,SAAS/D,IAAIoF,YAAc,UAMhCpK,KAAK+I,SAAS/D,IAAIkG,YAClBlL,KAAK+I,SAAS/D,IAAImG,IAAIqB,EAASC,EAAS,GAAI,EAAG,EAAIjI,KAAKoD,IAAI,GAC5D5H,KAAK+I,SAAS/D,IAAIoG,UAAY,EAC9BpL,KAAK+I,SAAS/D,IAAIqG,QAEtB,GAAC,CAAAnL,IAAA,kBAAAC,MAED,WACEH,KAAK4E,SAASI,IAAIkF,UAAY,oBAC9BlK,KAAK4E,SAASI,IAAImF,SAAS,EAAG,EAAG,IAAK,IACxC,GAAC,CAAAjK,IAAA,iBAAAC,MAED,WACEH,KAAK4E,SAASI,IAAIkB,UAAU,EAAE,EAAElG,KAAK4E,SAASlC,MAAM1C,KAAK4E,SAASjC,OACpE,GAAC,CAAAzC,IAAA,oBAAAC,MAED,WACEH,KAAK8I,YAAY9D,IAAIkB,UACnB,EACA,EACAlG,KAAK8I,YAAYpG,MACjB1C,KAAK8I,YAAYnG,OAErB,GAAC,CAAAzC,IAAA,iBAAAC,MAED,WACEH,KAAK+I,SAAS/D,IAAIkB,UAAU,EAAE,EAAElG,KAAK+I,SAASrG,MAAM1C,KAAK+I,SAASpG,OACpE,GAAC,CAAAzC,IAAA,mBAAAC,MAED,WACEH,KAAKgJ,WAAWhE,IAAIkB,UAClB,EACA,EACAlG,KAAKgJ,WAAWtG,MAChB1C,KAAKgJ,WAAWrG,OAEpB,GAAC,CAAAzC,IAAA,mBAAAC,MAED,WACEH,KAAK0M,iBACL1M,KAAK2M,oBACL3M,KAAKgM,gBACP,M,6EAAC,CAlhBQ,GAqhBX,U,+vCCrhBA,IAAMY,EAAU,CAAC,MAEIC,EAAW,SAAAlI,GAC9B,SAAAkI,EAAY7H,EAAKpD,GAAY,IAAAE,E,MAAA/B,EAAA,KAAA8M,G,EAC3B,K,EAAA,CAAMD,EAAQlG,OAAQ1B,G,MAAtB6H,GAAA/K,E,uWAEA,IAAK,IAAIpB,EAAI,EAAGA,EAAIkM,EAAQlG,OAAQhG,IAAK,CACvC,IAAIoM,EAIAA,EAAS,IAAIC,EAAO/H,EAAK,KAAMpD,GAGnCE,EAAK7B,KAAKc,KAAK+L,EACjB,CAAC,OAAAhL,CACH,CAAC,O,qRAAAiD,CAAA8H,EAAAlI,GAAA9E,EAAAgN,EAAA,CAd6B,CAASjN,GAiBnCmN,EAAM,WAkBT,OAAAlN,GAjBD,SAAAkN,EAAY/H,EAAKvE,EAAMmB,GAAY7B,EAAA,KAAAgN,GACjC/M,KAAKgF,IAAMA,EACXhF,KAAKS,KAAOA,EAEZ,IAAMoG,EAAcjF,EAAWnB,GAC/BT,KAAKmB,MAAQ0F,EAAY1F,MACzBnB,KAAK0C,MAAQmE,EAAYnE,MACzB1C,KAAK2C,OAASkE,EAAYlE,OAC1B3C,KAAK8G,OAAS,IAAI7F,EAChB+D,EACA6B,EAAY1F,MACZnB,KAAK0C,MACL1C,KAAK2C,OACLkE,EAAYvF,KACZuF,EAAYtF,MAEdvB,KAAKc,kBACP,GAAC,EAAAZ,IAAA,QAAAC,MAED,WACEH,KAAK+G,UAAY/G,KAAKgH,mBACtBhH,KAAKK,SAAU,CACjB,GAAC,CAAAH,IAAA,OAAAC,MAED,WACMH,KAAKmH,oBAAsB,GAC7BnH,KAAKmH,sBAEPnH,KAAKuF,OAASvF,KAAK0F,MACnB1F,KAAK+G,UAAY/G,KAAKgH,mBACtBhH,KAAK8G,OAAOnG,KAAKX,KAAK+G,UAAUhB,EAAG/F,KAAK+G,UAAUjB,EACpD,GAAC,CAAA5F,IAAA,YAAAC,MAED,WACE,OAAIH,KAAKwH,MAAQ,CAInB,GAAC,CAAAtH,IAAA,mBAAAC,MAED,WACE,MAAO,CACL4F,EAAGvB,KAAK4B,IAAIpG,KAAKuF,QAAUvF,KAAKmG,OAAU,IAC1CL,EAAGtB,KAAK8B,IAAItG,KAAKuF,QAAUvF,KAAKmG,OAAU,IAE9C,GAAC,CAAAjG,IAAA,QAAAC,MAED,WACEH,KAAKgF,IAAIkB,UACPlG,KAAK+G,UAAUhB,EAAI,EACnB/F,KAAK+G,UAAUjB,EAAI,EACnB9F,KAAK0C,MAAQ,GACb1C,KAAK2C,OAAS,GAElB,GAAC,CAAAzC,IAAA,QAAAC,MAED,WACEH,KAAKwH,MAAQ,EACbxH,KAAKmH,oBAAsB,EAC7B,GAAC,CAAAjH,IAAA,mBAAAC,MAED,WACE,IAAIuH,EAAkBlD,KAAKE,SAAW,IAAO,EAAI,EAC7CiD,EAAkBnD,KAAKE,SAAW,IAAO,EAAI,EAEjD1E,KAAKuF,MAASf,KAAKoD,GAAK,EAAKF,EAC7B1H,KAAK0F,MAASrB,EAAW,EAAG,GAAK,IAAQsD,EACzC3H,KAAKmG,OAAS9B,EAAW,IAAK,KAC9BrE,KAAKwH,KAAO,EACZxH,KAAKmH,oBAAsB,EAC3BnH,KAAKK,SAAU,EACfL,KAAK+G,UAAY,CAAEhB,EAAG,IAAKD,EAAG,IAChC,IAAC,CAzES,G,sqBCrBNkH,EAAM,WAwBT,O,EAvBD,SAAAA,EAAYjE,EAAUnI,I,4FAAYb,CAAA,KAAAiN,GAChChN,KAAKgF,IAAM+D,EAAS/D,IACpBhF,KAAKiN,aAAelE,EAASrG,MAC7B1C,KAAKkN,cAAgBnE,EAASpG,OAC9B3C,KAAKY,WAAaA,EAElBZ,KAAKmN,SAAW,EAChBnN,KAAKoN,aAAe,KACpBpN,KAAKqN,SAAW,GAChBrN,KAAKmG,OAAS,GACdnG,KAAKqM,WAAa,EAClBrM,KAAKsN,aAAe,GACpBtN,KAAKmH,oBAAsB,EAC3BnH,KAAKuN,mBAAqB,QAC1BvN,KAAKwH,KAAO,EAEZxH,KAAKwN,WAAa,KAClBxN,KAAKyN,eAAiB,OACtBzN,KAAK0N,SAAWlJ,KAAKoD,GAAK,EAC1B5H,KAAK2N,sBAEL3N,KAAKW,KAAOX,KAAKW,KAAKa,KAAKxB,MAC3BA,KAAKuH,KAAOvH,KAAKuH,KAAK/F,KAAKxB,KAC7B,G,EAAC,EAAAE,IAAA,sBAAAC,MAED,WACEH,KAAK4N,WAAa5N,KAAK6N,oBACvB7N,KAAK8N,gBAAkB9N,KAAK+N,yBAC5B/N,KAAKgO,UAAYhO,KAAKiO,qBAAqB,IAC3CjO,KAAKkO,aAAelO,KAAKiO,qBAAqB,GAChD,GAAC,CAAA/N,IAAA,yBAAAC,MAED,WACE,MAAQ,CACN4F,EAAGvB,KAAK4B,IAAIpG,KAAKyN,gBAAkBzN,KAAKmG,OAASnG,KAAKiN,aAAe,EACrEnH,GAAItB,KAAK8B,IAAItG,KAAKyN,gBAAkBzN,KAAKmG,OAASnG,KAAKkN,cAAgB,EAE3E,GAAC,CAAAhN,IAAA,oBAAAC,MAED,WACE,MAAQ,CACN4F,EAAGvB,KAAK4B,IAAIpG,KAAKwN,WAAaxN,KAAKmG,OAAUnG,KAAKiN,aAAe,EACjEnH,EAAGtB,KAAK8B,IAAItG,KAAKwN,WAAaxN,KAAKmG,OAAUnG,KAAKkN,cAAgB,EAEtE,GAAC,CAAAhN,IAAA,sBAAAC,MAED,SAAoBgG,GAClB,MAAQ,CACNJ,EAAGvB,KAAK4B,IAAIpG,KAAK0N,UAAYvH,EAAUnG,KAAKiN,aAAe,EAC3DnH,EAAGtB,KAAK8B,IAAItG,KAAK0N,UAAYvH,EAAUnG,KAAKkN,cAAgB,EAEhE,GAAC,CAAAhN,IAAA,OAAAC,MAED,SAAKgO,GACCnO,KAAKqM,WAAarM,KAAKsN,cACzBtN,KAAKqM,aAEHrM,KAAKmH,oBAAsB,GAC7BnH,KAAKmH,sBAEHgH,EAAUC,MACRpO,KAAKmN,UAAYnN,KAAKqN,WACxBrN,KAAKmN,UAAYnN,KAAKoN,cAExBpN,KAAKyN,gBAAkBzN,KAAKmN,SAC5BnN,KAAKwN,WAAaxN,KAAKmN,SACvBnN,KAAK0N,UAAY1N,KAAKmN,UACbgB,EAAUE,OACfrO,KAAKmN,UAAYnN,KAAKqN,WACxBrN,KAAKmN,UAAYnN,KAAKoN,cAExBpN,KAAKyN,gBAAkBzN,KAAKmN,SAC5BnN,KAAKwN,WAAaxN,KAAKmN,SACvBnN,KAAK0N,UAAY1N,KAAKmN,UAEtBnN,KAAKmN,SAAW,EAGdgB,EAAU5G,MAAQvH,KAAKqM,YAAcrM,KAAKsN,cAC5CtN,KAAKuH,MAET,GAAC,CAAArH,IAAA,OAAAC,MAED,WACEH,KAAKqM,WAAa,EAClB,IAAMhH,EAAa,CACjBE,MAAOvF,KAAK0N,SACZlI,YAAa,GACbC,WAAY,EACZC,MAAO,GAET1F,KAAKY,WAAW6G,IAAIpC,EACtB,GAAC,CAAAnF,IAAA,OAAAC,MAED,WACEH,KAAK2N,sBACL3N,KAAKgF,IAAIkG,YAELlL,KAAKmH,oBAAsB,EAC7BnH,KAAKgF,IAAIkF,UAAYlK,KAAKuN,mBAEvBvN,KAAKgF,IAAIkF,UAAY,QAE1BlK,KAAKgF,IAAIsG,OAAOtL,KAAK8N,gBAAgB/H,EAAG/F,KAAK8N,gBAAgBhI,GAC7D9F,KAAKgF,IAAIuG,OAAOvL,KAAK4N,WAAW7H,EAAG/F,KAAK4N,WAAW9H,GACnD9F,KAAKgF,IAAIuG,OAAOvL,KAAKgO,UAAUjI,EAAG/F,KAAKgO,UAAUlI,GACjD9F,KAAKgF,IAAIsJ,MACX,GAAC,CAAApO,IAAA,QAAAC,MAED,WACEH,KAAKwH,MAAQ,EACbxH,KAAKmH,oBAAsB,GAC3BnH,KAAKuN,mBAAqB,KAC5B,GAAC,CAAArN,IAAA,WAAAC,MAED,WACMH,KAAKwH,KAAO,IACdxH,KAAKwH,MAAQ,EACbxH,KAAKmH,oBAAsB,GAC3BnH,KAAKuN,mBAAqB,YAE9B,M,6EAAC,CA1HS,GA6HZ,U,oqBCtHA,IAAMgB,GAAU,CACd,GAAI,OACJ,GAAI,QACJ,GAAI,QACJ,GAAI,OACJ,GAAI,QACJ,GAAI,OACJ,GAAI,OACJ,GAAI,QACJC,UAAW,OACXC,WAAY,QACZC,UAAW,QAGPC,GAAa,CAAC,EACpB,IAAK,IAAIC,MAAQL,GACfI,GAAWJ,GAAQK,MAAS,EAC7B,IAEKC,GAAI,WAsDP,O,EArDD,SAAAA,EAAYjK,EAAUkE,EAAaC,EAAUC,EAAYC,I,4FAAclJ,CAAA,KAAA8O,GACrE7O,KAAK4E,SAAW,CACdI,IAAKJ,EAASkK,WAAW,MACzBpM,MAAO,IACPC,OAAQ,KAEV3C,KAAK8I,YAAc,CACjB9D,IAAK8D,EAAYgG,WAAW,MAC5BpM,MAAO,IACPC,OAAQ,IAEV3C,KAAK+I,SAAW,CACd/D,IAAK+D,EAAS+F,WAAW,MACzBpM,MAAO,IACPC,OAAQ,KAEV3C,KAAKgJ,WAAa,CAChBc,OAAQd,EACRhE,IAAKgE,EAAW8F,WAAW,MAC3BpM,MAAO,IACPC,OAAQ,KAEW,OAAjBsG,GACFjJ,KAAK+O,UAAW,EAChB/O,KAAK6I,aAAe,KACpB7I,KAAKiJ,aAAe,CAAE,IAEtBjJ,KAAK+O,UAAW,EAChB/O,KAAK6I,aAAe,WACpB7I,KAAKiJ,aAAe,CAClBa,OAAQb,EACRjE,IAAKiE,EAAa6F,WAAW,MAC7BpM,MAAO,IACPC,OAAQ,MAIZ3C,KAAKgP,KAAOhP,KAAKgP,KAAKxN,KAAKxB,MAC3BA,KAAKiP,WAAajP,KAAKiP,WAAWzN,KAAKxB,MACvCA,KAAKkP,qBAAuBlP,KAAKkP,qBAAqB1N,KAAKxB,MAC3DA,KAAKmP,sBAAwBnP,KAAKmP,sBAAsB3N,KAAKxB,MAE7DA,KAAK4B,WAAa,IAAIA,EAAW5B,MAEjCA,KAAK6L,kBAAmB,EACxB7L,KAAK8L,eAAgB,EACrB9L,KAAKoP,iBAAmB,IACxBpP,KAAKqP,mBAAqB,KAE1BrP,KAAKsP,oBACLtP,KAAKuP,mBAAmB3K,EAAUkE,EAAaE,GAC/ChJ,KAAKwP,eACLxP,KAAKyP,eACP,E,EAAC,EAAAvP,IAAA,oBAAAC,MAED,WACEH,KAAKgJ,WAAWhE,IAAIkF,UAAY,QAChClK,KAAKgJ,WAAWhE,IAAIsF,KAAO,eAC3BtK,KAAKgJ,WAAWhE,IAAIuF,SAAS,aAAc,GAAG,GAChD,GAAC,CAAArK,IAAA,qBAAAC,MAED,SAAmByE,EAAUkE,EAAaE,GAAY,IAAAlH,EAAA,KACpD4N,SAASC,iBAAiB,UAAW3P,KAAK4P,QAAQpO,KAAKxB,OACvD0P,SAASC,iBAAiB,QAAS3P,KAAK6P,MAAMrO,KAAKxB,OACnDgJ,EAAW2G,iBAAiB,SAAS,SAACG,GACpChO,EAAKoN,qBAAqBY,EAAG9G,EAAW+G,wBAC1C,IACAjH,EAAY6G,iBAAiB,SAAS,SAACG,GACrChO,EAAKqN,sBAAsBW,EAAGhH,EAAYiH,wBAC5C,IAEAnL,EAAS+K,iBAAiB,cAAc,SAACG,GACvChO,EAAKkO,YAAYF,EAAGlL,EAASmL,wBAC/B,IAAG,GACHnL,EAAS+K,iBAAiB,YAAY,SAACG,GACrChO,EAAKmO,UAAUH,EAAGlL,EAASmL,wBAC7B,IAAG,GACHnL,EAAS+K,iBAAiB,cAAe3P,KAAKkQ,cAAc,GAC5DlQ,KAAKmQ,eAAiB,GAEtB7N,OAAOqN,iBAAiB,oBAAoB,SAACG,GAC3ChO,EAAKsO,kBAAkBN,GACvBhO,EAAK+J,kBAAmB,CAC1B,IACAvJ,OAAOqN,iBAAiB,uBAAuB,SAACG,GAC9ChO,EAAK+J,kBAAmB,EACxB/J,EAAKgK,eAAgB,CACvB,GACF,GAAC,CAAA5L,IAAA,eAAAC,MAED,WACEH,KAAKkI,gBAAkB,IAAItH,EAAW,EAAGZ,KAAK4E,SAAU,eACxD5E,KAAKmI,eAAiB,IAAIvH,EAAW,EAAGZ,KAAK4E,SAAU,eACvD5E,KAAKoI,aAAe,IAAIxH,EAAW,EAAGZ,KAAK4E,SAAU,UACrD5E,KAAKqQ,kBACLrQ,KAAKwI,YAAc,IAAIqE,EAAY7M,KAAK4E,SAASI,IAAKhF,KAAK4B,YAC3D5B,KAAKyI,OAAS,IAAIuE,EAAOhN,KAAK+I,SAAU/I,KAAKoI,cAC7CpI,KAAK0I,kBAAoB,WACzB1I,KAAKsM,OAAQ,EACbtM,KAAKsQ,QAAS,EACdtQ,KAAK2I,WAAa,SACpB,GAAC,CAAAzI,IAAA,kBAAAC,MAED,WAKEH,KAAKqI,cAAgB,IAAI7B,EAJN,CACjB,aAAc,aAAc,aAC5B,WAAY,WAAY,YAGZxG,KAAK4E,SAASI,IAAKhF,KAAK4B,WAAY5B,KAAKkI,iBAIvDlI,KAAKsI,cAAgB,IAAI9B,EADN,CAAC,YAAa,aAEnBxG,KAAK4E,SAASI,IAAKhF,KAAK4B,WAAY5B,KAAKkI,iBAIvDlI,KAAKuI,cAAgB,IAAI/B,EADN,CAAC,aAENxG,KAAK4E,SAASI,IAAKhF,KAAK4B,WAAY5B,KAAKmI,eAEzD,GAAC,CAAAjI,IAAA,gBAAAC,MAED,WACEH,KAAKuQ,MAAQ,IAAI1I,EACf7H,KAAK4E,SACL5E,KAAK8I,YACL9I,KAAK+I,SACL/I,KAAKgJ,WACLhJ,KAAK4B,WACL5B,KAAKkI,gBACLlI,KAAKmI,eACLnI,KAAKoI,aACLpI,KAAKqI,cACLrI,KAAKsI,cACLtI,KAAKuI,cACLvI,KAAKwI,YACLxI,KAAKyI,OACLzI,KAAK0I,kBACL1I,KAAK2I,WACL3I,KAAKiJ,aACLjJ,KAAK6I,aAET,GAAC,CAAA3I,IAAA,YAAAC,MAED,WACEH,KAAKuQ,MAAMC,gBACXxQ,KAAKyQ,iBACP,GAAC,CAAAvQ,IAAA,kBAAAC,MAED,WACMH,KAAK+O,SACP/O,KAAKuQ,MAAMG,wBAEX1Q,KAAKuQ,MAAMI,yBAEf,GAAC,CAAAzQ,IAAA,aAAAC,MAED,WAAa,IAAAyQ,EAAA,KACX5Q,KAAK4B,WAAWG,gBAAgBiN,OAEhChP,KAAK6Q,UAAY,IAAIpN,GAAM,WAAQmN,EAAKE,iBAAkB,GAAG,KAC7D9Q,KAAK+Q,UAAY,IAAItN,GAAM,WAAQmN,EAAKI,iBAAkB,GAAG,MAE7DhR,KAAKuQ,MAAMtG,mBACXjK,KAAKgJ,WAAWc,OAAOC,UAAUkH,IAAI,UACrCjR,KAAK2I,WAAa,UAClB3I,KAAKuQ,MAAMW,iBAAiBlR,KAAK2I,YACjC3I,KAAKmR,UAAYlN,KAAKkF,MACtBnJ,KAAKkJ,SAAWjF,KAAKkF,MACrBnJ,KAAKgP,MACP,GAAC,CAAA9O,IAAA,mBAAAC,MAED,WACEH,KAAK6Q,UAAU9M,QACf/D,KAAK+Q,UAAUhN,OACjB,GAAC,CAAA7D,IAAA,oBAAAC,MAED,WACEH,KAAK6Q,UAAU3M,SACflE,KAAK+Q,UAAU7M,QACjB,GAAC,CAAAhE,IAAA,oBAAAC,MAED,WACEH,KAAK6Q,UAAUzM,QACfpE,KAAK+Q,UAAU3M,OACjB,GAAC,CAAAlE,IAAA,OAAAC,MAED,WAAO,IAAAiR,EAAA,KACLpR,KAAKqR,gBACLrR,KAAKsR,kBACDtR,KAAK8L,eACP9L,KAAKuR,aAEPvR,KAAKyI,OAAO+I,KAAK7C,IACb3O,KAAK8L,eACP9L,KAAKyR,WAGP,IAAMtI,EAAMlF,KAAKkF,MAEjBnJ,KAAK0R,oBACL1R,KAAK2R,kBACL3R,KAAK4R,UACL5R,KAAKuQ,MAAMsB,SAEN7R,KAAKsQ,QACRnM,YAAW,WACTiN,EAAKlI,SAAWC,EAChB2I,sBAAsBV,EAAKpC,KAC7B,GAAG,GAEP,GAAC,CAAA9O,IAAA,oBAAAC,MAED,WAEE,IADA,IAAI4R,EAAc,EACTrR,EAAI,EAAGA,EAAIV,KAAKqI,cAAcpI,KAAKyG,OAAQhG,IAAK,CACvD,IAAMiG,EAAQ3G,KAAKqI,cAAcpI,KAAKS,IACnB,eAAfiG,EAAMlG,MAAyBkG,EAAMtG,SAEf,aAAfsG,EAAMlG,MAAuBkG,EAAMtG,UAD5C0R,GAIJ,CAOA,OALIA,EAAc,IAChB/R,KAAKqI,cAAcZ,IAAI,cACvBzH,KAAKqI,cAAcZ,IAAI,aAGlBsK,CACT,GAAC,CAAA7R,IAAA,kBAAAC,MAED,WAAkB,IAAA6R,EAAA,KACVC,EAAYjS,KAAKkS,aAAa,QACpC,GAAIlS,KAAK0R,oBAAsBO,EAAW,CACxC,IAAME,EAAQ3N,KAAKE,SAAW,GAAM,aAAe,WACnD1E,KAAKqI,cAAcZ,IAAI0K,EACzB,CAEAnS,KAAK6Q,UAAY,IAAIpN,GAAM,WAAQuO,EAAKlB,iBAAkB,GAAG,IAC/D,GAAC,CAAA5Q,IAAA,kBAAAC,MAED,WAEE,IAFgB,IAAAiS,EAAA,KACZC,EAAc,EACT3R,EAAI,EAAGA,EAAIV,KAAKsI,cAAcrI,KAAKyG,OAAQhG,IAAK,CACvD,IAAMiG,EAAQ3G,KAAKsI,cAAcrI,KAAKS,GACnB,cAAfiG,EAAMlG,MAAwBkG,EAAMtG,SACtCgS,GAEJ,CAGIA,EADcrS,KAAKkS,aAAa,SAElClS,KAAKsI,cAAcb,IAAI,aAGzBzH,KAAK+Q,UAAY,IAAItN,GAAM,WAAQ2O,EAAKpB,iBAAkB,GAAG,KAC/D,GAAC,CAAA9Q,IAAA,kBAAAC,MAED,WAEE,IADA,IAAImS,EAAc,EACT5R,EAAI,EAAGA,EAAIV,KAAKuI,cAActI,KAAKyG,OAAQhG,IAAK,CACvD,IAAMiG,EAAQ3G,KAAKuI,cAActI,KAAKS,GACnB,cAAfiG,EAAMlG,MAAwBkG,EAAMtG,SACtCiS,GAEJ,CAEItS,KAAKuQ,MAAMnH,YAAcpJ,KAAKqP,oBAAsBiD,EAAc,IACpEtS,KAAKuI,cAAcd,IAAI,aACvBzH,KAAKqP,oBAAsB,IAE/B,GAAC,CAAAnP,IAAA,UAAAC,MAED,WAEE,IADA,IAAIoS,EAAY,EACP7R,EAAI,EAAGA,EAAIV,KAAKwI,YAAYvI,KAAKyG,OAAQhG,IAAK,CACrD,IAAMoM,EAAS9M,KAAKwI,YAAYvI,KAAKS,GACjB,OAAhBoM,EAAOrM,MAAiBqM,EAAOzM,SACjCkS,GAEJ,CAEIvS,KAAKuQ,MAAMnH,YAAcpJ,KAAKoP,kBAAoBmD,EAAY,IAChEvS,KAAKwI,YAAYf,IAAI,MACrBzH,KAAKoP,kBAAoB,IAE7B,GAAC,CAAAlP,IAAA,eAAAC,MAED,SAAaqS,GACX,GAAIxS,KAAKkJ,SAAWlJ,KAAKmR,UAAY,IAAO,CAC1C,GAAc,SAAVqB,EAAoB,OAAO,EAC/B,GAAc,SAAVA,EAAoB,OAAO,CACjC,KAAO,CACL,GAAc,SAAVA,EAAoB,OAAO,EAC/B,GAAc,SAAVA,EAAoB,OAAO,CACjC,CACF,GAAC,CAAAtS,IAAA,kBAAAC,MAED,WACE,IAAMsS,EAAmBzS,KAAKoI,aAAanI,KAAKyS,QAAO,SAAC7N,GAAM,OAAKA,EAAOxE,OAAO,IACjFL,KAAK2S,qBAAqBF,GAC1BzS,KAAK4S,oBAAoBH,GACzBzS,KAAK6S,iBAAiBJ,EACxB,GAAC,CAAAvS,IAAA,uBAAAC,MAED,SAAqBsS,GAOnB,IANA,IAAMK,EAAS,CACb/M,EAAG/F,KAAKyI,OAAOyF,aAAanI,EAC5BD,EAAG9F,KAAKyI,OAAOyF,aAAapI,EAC5BK,OAAQ,IAGD4M,EAAU,EAAGA,EAAUN,EAAiB/L,OAAQqM,IAAW,CAClE,IAAMlO,EAAS4N,EAAiBM,IAG5B/S,KAAKgT,aAAahT,KAAKyI,OAAQqK,EAAQjO,EAAOc,aAC3C3F,KAAKgT,aAAahT,KAAKyI,OAAQqK,EAAQjO,EAAOgB,YAC9C7F,KAAKyI,OAAOtB,qBAAuB,IAExCnH,KAAKyI,OAAOwK,QACZjT,KAAKuQ,MAAMpE,mBAEf,CAKA,IAHA,IAAM+G,EAAsBlT,KAAKkI,gBAAgBjI,KAAKyS,QAAO,SAAC7N,GAAM,OAAKA,EAAOxE,OAAO,IACjF8S,EAAqBnT,KAAKmI,eAAelI,KAAKyS,QAAO,SAAC7N,GAAM,OAAKA,EAAOxE,OAAO,IAC/E+S,EAAiBF,EAAoB1I,OAAO2I,GACzCJ,EAAU,EAAGA,EAAUK,EAAe1M,OAAQqM,IAAW,CAChE,IAAMlO,EAASuO,EAAeL,IAG1B/S,KAAKgT,aAAahT,KAAKyI,OAAQqK,EAAQjO,EAAOc,aAC3C3F,KAAKgT,aAAahT,KAAKyI,OAAQqK,EAAQjO,EAAOgB,YAC9C7F,KAAKyI,OAAOtB,qBAAuB,IAExCnH,KAAKyI,OAAOwK,QACZjT,KAAKuQ,MAAMpE,mBAEf,CACF,GAAC,CAAAjM,IAAA,eAAAC,MAED,SAAasI,EAAQqK,EAAQjO,GAC3B,IAAMwO,EAAOP,EAAO/M,EAAI0C,EAAOwE,aAAe,EAAIjN,KAAK4E,SAASlC,MAAQ,EAClE4Q,EAAOR,EAAOhN,EAAI2C,EAAOyE,cAAgB,EAAIlN,KAAK4E,SAASjC,OAAS,EAK1E,OAJmC6B,KAAK+O,KACtC/O,KAAKgP,IAAIH,EAAOxO,EAAOkB,EAAG,GAAKvB,KAAKgP,IAAIF,EAAOzO,EAAOiB,EAAG,KAGtBgN,EAAO3M,MAC9C,GAAC,CAAAjG,IAAA,sBAAAC,MAED,SAAoBsS,GAMlB,IALA,IAAMgB,EAAoBzT,KAAKqI,cAAcpI,KAAKyS,QAAO,SAAC/L,GAAK,OAAKA,EAAMtG,OAAO,IAC3EqT,EAAoB1T,KAAKsI,cAAcrI,KAAKyS,QAAO,SAAC/L,GAAK,OAAKA,EAAMtG,OAAO,IAC3EsT,EAAoB3T,KAAKuI,cAActI,KAAKyS,QAAO,SAAC/L,GAAK,OAAKA,EAAMtG,OAAO,IAC3EuT,EAAgBH,EAAkBjJ,OAAOkJ,GAAmBlJ,OAAOmJ,GAEhEE,EAAW,EAAGA,EAAWD,EAAclN,OAAQmN,IAEtD,IADA,IAAMlN,EAAQiN,EAAcC,GACnBd,EAAU,EAAGA,EAAUN,EAAiB/L,OAAQqM,IAAW,CAClE,IAAMlO,EAAS4N,EAAiBM,GAC1BhM,EAAYJ,EAAMI,UACxB,IAEI/G,KAAK8T,mBAAmBnN,EAAOI,EAAWlC,EAAOc,aAC9C3F,KAAK8T,mBAAmBnN,EAAOI,EAAWlC,EAAOgB,YACjDc,EAAMQ,qBAAuB,EAClC,CACAR,EAAMsM,QACN,IAAI7G,EAAS,EACb,OAAQzF,EAAMlG,MACZ,IAAK,YACH2L,EAASzF,EAAMa,KAAO,EAAI,GAAK,IAC/B,MACF,IAAK,YACH4E,EAAS,IACT,MACF,QACEA,EAAS,IAGbpM,KAAKuQ,MAAMwD,kBAAkB3H,EAC/B,CACF,CAEJ,GAAC,CAAAlM,IAAA,mBAAAC,MAED,SAAiBsS,GAKf,IAJA,IAAMF,EAAYvS,KAAKwI,YAAYvI,KAAKyS,QAAO,SAAC5F,GAAM,MACpC,OAAhBA,EAAOrM,MAAiBqM,EAAOzM,OAAO,IAG/B2T,EAAQ,EAAGA,EAAQzB,EAAU7L,OAAQsN,IAE5C,IADA,IAAMhR,EAAKuP,EAAUyB,GACZjB,EAAU,EAAGA,EAAUN,EAAiB/L,OAAQqM,IAAW,CAClE,IAAMlO,EAAS4N,EAAiBM,GAC1BhM,EAAY/D,EAAG+D,WAGjB/G,KAAK8T,mBAAmB9Q,EAAI+D,EAAWlC,EAAOc,aAC3C3F,KAAK8T,mBAAmB9Q,EAAI+D,EAAWlC,EAAOgB,YAC9C7C,EAAGmE,qBAAuB,GAE3BnH,KAAKyI,OAAOjB,KAAO,IACrBxH,KAAKyI,OAAOwL,WACZjR,EAAGiQ,QACHjT,KAAKuQ,MAAMpE,mBAGjB,CAEJ,GAAC,CAAAjM,IAAA,qBAAAC,MAED,SAAmB+T,EAAQnN,EAAWlC,GACpC,OACGkC,EAAUhB,GAAKlB,EAAOkB,GAAKlB,EAAOkB,GAAKgB,EAAUhB,EAAImO,EAAOxR,OACzDqE,EAAUjB,GAAKjB,EAAOiB,GAAKjB,EAAOiB,GAAKiB,EAAUjB,EAAIoO,EAAOvR,MAEpE,GAAC,CAAAzC,IAAA,gBAAAC,MAED,WACMH,KAAKyI,OAAOjB,MAAQ,IACtBxH,KAAKsQ,QAAS,EACdtQ,KAAKmU,oBACLnU,KAAK2I,WAAa,OAClB3I,KAAKuQ,MAAMW,iBAAiBlR,KAAK2I,YACjC3I,KAAKyQ,kBAET,GAAC,CAAAvQ,IAAA,aAAAC,MAED,YAKIiU,UAAUC,cAAc,GAAGC,QAAQ,IAAIC,SACpCH,UAAUC,cAAc,GAAGG,KAAK,IAAM,MAEzC7F,GAAWJ,GAAwB,iBAAK,IAGxC6F,UAAUC,cAAc,GAAGC,QAAQ,IAAIC,SACpCH,UAAUC,cAAc,GAAGG,KAAK,GAAK,MAExC7F,GAAWJ,GAAyB,kBAAK,IAGzC6F,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACnCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACtCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACtCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACtCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACtCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,WAEzC5F,GAAWJ,GAAwB,iBAAK,EAE5C,GAAC,CAAArO,IAAA,WAAAC,MAED,WAIOiU,UAAUC,cAAc,GAAGC,QAAQ,IAAIC,UAC1C5F,GAAWJ,GAAwB,iBAAK,GAErC6F,UAAUC,cAAc,GAAGC,QAAQ,IAAIC,UAC1C5F,GAAWJ,GAAyB,kBAAK,GAGxC6F,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACnCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACtCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACtCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACtCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,SACtCH,UAAUC,cAAc,GAAGC,QAAQ,GAAGC,UAE1C5F,GAAWJ,GAAwB,iBAAK,EAE5C,GAAC,CAAArO,IAAA,UAAAC,MAED,SAAQ2P,GACN,IAAM2E,EAAU3E,EAAE4E,OAAS5E,EAAE2E,SAAW,EACxB,KAAZA,GAAsC,YAApBzU,KAAK2I,YACzB3I,KAAK2U,UAES,KAAZF,GACFzU,KAAK4U,YAES,KAAZH,GACFzU,KAAK6U,aAEHtG,GAAQkG,KACV3E,EAAEgF,iBACFnG,GAAWJ,GAAQkG,KAAY,EAEnC,GAAC,CAAAvU,IAAA,QAAAC,MAED,SAAM2P,GACJ,IAAM2E,EAAU3E,EAAE4E,OAAS5E,EAAE2E,SAAW,EACpClG,GAAQkG,KACV3E,EAAEgF,iBACFnG,GAAWJ,GAAQkG,KAAY,EAEnC,GAAC,CAAAvU,IAAA,cAAAC,MAED,SAAY2P,EAAGiF,GACbjF,EAAEgF,iBAEF,IADA,IAAME,EAAUlF,EAAEmF,eACTvU,EAAI,EAAGA,EAAIsU,EAAQtO,OAAQhG,IAAK,CACvC,IAAMwU,EAAQF,EAAQtU,GAChByU,EAAOD,EAAME,MAAQL,EAAa3G,KAClCiH,EAAOH,EAAMI,MAAQP,EAAaQ,IAGX,aAA3BvV,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,aAEzC,GAAKsM,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,IACtD1G,GAAWJ,GAAmB,YAAK,EACzB,GAAK4G,GAAQA,GAAQ,KAAS,KAAOE,GAAQA,GAAQ,IAC/D1G,GAAWJ,GAAoB,aAAK,EAC1B,KAAO4G,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,MAC/D1G,GAAWJ,GAAmB,YAAK,GAGV,aAA3BvO,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,aAEzC,GAAKsM,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,IACtD1G,GAAWJ,GAAoB,aAAK,EAC1B,GAAK4G,GAAQA,GAAQ,KAAS,KAAOE,GAAQA,GAAQ,IAC/D1G,GAAWJ,GAAmB,YAAK,EACzB,KAAO4G,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,MAC/D1G,GAAWJ,GAAmB,YAAK,IAGV,aAA3BvO,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,cAUnB,aAA3B7I,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,gBARzC,KAAOsM,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,IACxD1G,GAAWJ,GAAmB,YAAK,EACzB,KAAO4G,GAAQA,GAAQ,KAAS,KAAOE,GAAQA,GAAQ,IACjE1G,GAAWJ,GAAoB,aAAK,EAC1B,GAAK4G,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,MAC7D1G,GAAWJ,GAAmB,YAAK,IAcvCvO,KAAKmQ,eAAepP,KAAKf,KAAKwV,UAAUR,EAAQtU,GAAIyU,EAAME,GAC5D,CACF,GAAC,CAAAnV,IAAA,YAAAC,MAED,SAAU2P,EAAGiF,GACXjF,EAAEgF,iBAEF,IADA,IAAME,EAAUlF,EAAEmF,eACTvU,EAAI,EAAGA,EAAIsU,EAAQtO,OAAQhG,IAAK,CACvC,IAAMwU,EAAQF,EAAQtU,GAChByU,EAAOD,EAAME,MAAQL,EAAa3G,KAClCiH,EAAOH,EAAMI,MAAQP,EAAaQ,IAGX,aAA3BvV,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,aAEzC,GAAKsM,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,IACtD1G,GAAWJ,GAAmB,YAAK,EACzB,GAAK4G,GAAQA,GAAQ,KAAS,KAAOE,GAAQA,GAAQ,IAC/D1G,GAAWJ,GAAoB,aAAK,EAC1B,KAAO4G,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,MAC/D1G,GAAWJ,GAAmB,YAAK,GAGV,aAA3BvO,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,aAEzC,GAAKsM,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,IACtD1G,GAAWJ,GAAoB,aAAK,EAC1B,GAAK4G,GAAQA,GAAQ,KAAS,KAAOE,GAAQA,GAAQ,IAC/D1G,GAAWJ,GAAmB,YAAK,EACzB,KAAO4G,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,MAC/D1G,GAAWJ,GAAmB,YAAK,IAGV,aAA3BvO,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,cAUnB,aAA3B7I,KAAK0I,mBAA0D,aAAtB1I,KAAK6I,gBARzC,KAAOsM,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,IACxD1G,GAAWJ,GAAmB,YAAK,EACzB,KAAO4G,GAAQA,GAAQ,KAAS,KAAOE,GAAQA,GAAQ,IACjE1G,GAAWJ,GAAoB,aAAK,EAC1B,GAAK4G,GAAQA,GAAQ,KAAS,GAAKE,GAAQA,GAAQ,MAC7D1G,GAAWJ,GAAmB,YAAK,IAcvC,IAAMkH,EAAWzV,KAAK0V,sBAAsBR,EAAMS,YAClD3V,KAAKmQ,eAAenP,OAAOyU,EAAU,EACvC,CACF,GAAC,CAAAvV,IAAA,YAAAC,MAED,SAAU+U,EAAOC,EAAME,GACrB,MAAO,CACLM,WAAYT,EAAMS,WAClBR,KAAAA,EACAE,KAAAA,EAEJ,GAAC,CAAAnV,IAAA,wBAAAC,MAED,SAAsByV,GACpB,IAAK,IAAIlV,EAAI,EAAGA,EAAIV,KAAKmQ,eAAezJ,OAAQhG,IAE9C,GADWV,KAAKmQ,eAAezP,GAAGiV,YACxBC,EACR,OAAOlV,EAGX,OAAQ,CACV,GAAC,CAAAR,IAAA,wBAAAC,MAED,SAAsB2P,EAAGiF,GACvBjF,EAAEgF,iBACF,IAAMe,EAAY/F,EAAEgG,QAAUf,EAAa3G,KACrC2H,EAAYjG,EAAEkG,QAAUjB,EAAaQ,IAGxC,KAAOM,GAAaA,GAAa,KAC9B,IAAME,GAAaA,GAAa,GAEpC/V,KAAK4U,YAEJ,KAAOiB,GAAaA,GAAa,KAC9B,IAAME,GAAaA,GAAa,IAEpC/V,KAAK6U,YAET,GAAC,CAAA3U,IAAA,uBAAAC,MAED,SAAqB2P,EAAGiF,GACtBjF,EAAEgF,iBACF,IAAMe,EAAY/F,EAAEgG,QAAUf,EAAa3G,KACrC2H,EAAYjG,EAAEkG,QAAUjB,EAAaQ,IAGxC,KAAOM,GAAaA,GAAa,KAC9B,KAAOE,GAAaA,GAAa,IAErC/V,KAAKiW,wBAEJ,KAAOJ,GAAaA,GAAa,KAC9B,KAAOE,GAAaA,GAAa,IAEb,YAApB/V,KAAK2I,WACP3I,KAAKiP,aACwB,YAApBjP,KAAK2I,WACd3I,KAAK6U,aACwB,SAApB7U,KAAK2I,YACd3I,KAAK2U,UAGN,IAAMkB,GAAaA,GAAa,KAC7B,KAAOE,GAAaA,GAAa,KAErC/V,KAAK8L,eAAgB9L,KAAK8L,cAC1B9L,KAAKuQ,MAAM/E,2BAEV,KAAOqK,GAAaA,GAAa,KAC9B,KAAOE,GAAaA,GAAa,MAChB,IAAlB/V,KAAK+O,UAER/O,KAAKkW,gBAET,GAAC,CAAAhW,IAAA,YAAAC,MAED,YACqB,IAAfH,KAAKsM,OACPtM,KAAKsM,OAAQ,EACbtM,KAAK4B,WAAWG,gBAAgBG,OAAS,MAEzClC,KAAKsM,OAAQ,EACbtM,KAAK4B,WAAWG,gBAAgBG,OAAS,GAG3ClC,KAAKuQ,MAAM4F,iBAAiBnW,KAAKsM,MACnC,GAAC,CAAApM,IAAA,aAAAC,MAED,WACMH,KAAKsQ,QAA8B,YAApBtQ,KAAK2I,YACtB3I,KAAKsQ,QAAS,EACdtQ,KAAKoW,oBACLpW,KAAKuQ,MAAMtG,mBACXjK,KAAKgJ,WAAWc,OAAOC,UAAUkH,IAAI,UACrCjR,KAAKgP,QACKhP,KAAKsQ,QAA8B,YAApBtQ,KAAK2I,aAC9B3I,KAAKsQ,QAAS,EACdtQ,KAAKqW,mBACLrW,KAAKyQ,kBAET,GAAC,CAAAvQ,IAAA,UAAAC,MAED,WACEH,KAAKuQ,MAAM+F,mBACXtW,KAAKwP,eACLxP,KAAKyP,gBACLzP,KAAKuQ,MAAMC,gBACXxQ,KAAKiP,YACP,GAAC,CAAA/O,IAAA,wBAAAC,MAED,WACiC,aAA3BH,KAAK0I,mBACP1I,KAAK0I,kBAAoB,WACzB6F,GAAQ,IAAM,QACdA,GAAQ,IAAM,OACdA,GAAQ,IAAM,OACdA,GAAQ,IAAM,QACdA,GAAQ,IAAM,OACdA,GAAQ,IAAM,UAEdvO,KAAK0I,kBAAoB,WACzB6F,GAAQ,IAAM,OACdA,GAAQ,IAAM,QACdA,GAAQ,IAAM,QACdA,GAAQ,IAAM,OACdA,GAAQ,IAAM,QACdA,GAAQ,IAAM,QAGhBvO,KAAKuQ,MAAMgG,wBAAwBvW,KAAK0I,mBACxC1I,KAAKyQ,iBACP,GAAC,CAAAvQ,IAAA,iBAAAC,MAED,WAC4B,aAAtBH,KAAK6I,aACP7I,KAAK6I,aAAe,WAEpB7I,KAAK6I,aAAe,WAEtB7I,KAAKuQ,MAAMiG,mBAAmBxW,KAAK6I,cACnC7I,KAAKyQ,iBACP,GAAC,CAAAvQ,IAAA,oBAAAC,MAED,SAAkB2P,GAChBvB,GAAwB,eAAI,OAC5BA,GAAwB,eAAI,OAC5BA,GAAyB,gBAAI,QAC7BI,GAA2B,gBAAI,EAC/BA,GAA2B,gBAAI,EAC/BA,GAA4B,iBAAI,CAClC,I,gFAAC,CA5vBO,GA+vBVe,SAASC,iBAAiB,oBAAoB,WAC5C,IAAM8G,EAAmB/G,SAASgH,eAAe,qBAC3CC,EAAejH,SAASgH,eAAe,iBACvC5N,EAAc4G,SAASgH,eAAe,gBACtCE,EAAgBlH,SAASgH,eAAe,kBACxCzN,EAAe,UAGY,IAAvB3G,OAAOuU,cACkC,IAA7CzC,UAAU0C,UAAUC,QAAQ,cAEjBrH,SAASsH,cAAc,U,8DAASC,GAC/ChO,EAAaiO,GAAK,gBAClBjO,EAAavG,MAAQ,MACrBuG,EAAatG,OAAS,MACtB+M,SAASyH,uBAAuB,aAAa,GAAGC,YAAYnO,IAG9D,IAAI4F,GACF4H,EACA3N,EACA6N,EACAC,EACA3N,EAEJ,G","sources":["webpack://neon_circles/./scripts/utilities.js","webpack://neon_circles/./scripts/bullet.js","webpack://neon_circles/./scripts/demon.js","webpack://neon_circles/./scripts/field.js","webpack://neon_circles/./scripts/pickups.js","webpack://neon_circles/./scripts/player.js","webpack://neon_circles/./scripts/game.js"],"sourcesContent":["export class ObjectPool {\n  constructor(size) {\n    this.size = size;\n    this.pool = [];\n  }\n\n  get(objectData) {\n    if (!this.pool[this.size - 1].spawned) {\n      this.pool[this.size - 1].spawn(objectData);\n      this.pool.unshift(this.pool.pop());\n    }\n  }\n\n  draw(type) {\n    for (let i = 0; i < this.size; i++) {\n      if (this.pool[i].spawned) {\n        this.pool[i].draw(this.BulletPool);\n        if (this.pool[i].resetable()) {\n          this.pool[i].setDefaultValues(type);\n          this.pool.push((this.pool.splice(i, 1))[0]);\n        }\n      } else {\n        break;\n      }\n    }\n  }\n};\n\nexport class Sprite {\n  constructor(context, image, srcWidth, srcHeight, srcX, srcY) {\n    this.context = context;\n    this.image = image;\n    this.srcWidth = srcWidth;\n    this.srcHeight = srcHeight;\n    this.srcX = srcX;\n    this.srcY = srcY;\n\n    this.draw = this.draw.bind(this);\n  }\n\n  draw(drawPointX, drawPointY) {\n    this.context.drawImage(\n      this.image,\n      this.srcX,\n      this.srcY,\n      this.srcWidth,\n      this.srcHeight,\n      drawPointX,\n      drawPointY,\n      this.srcWidth,  // drawn image width, same as src\n      this.srcHeight,  // drawn image height, same as src\n    );\n  }\n};\n\nexport class AssetStore {\n  constructor(game) {\n    this.game = game;\n\n    this.backgroundMusic = new Audio('assets/sounds/background_music.mp3');\n    this.backgroundMusic.loop = true;\n    this.backgroundMusic.volume = 0.25;\n    this.backgroundMusic.load();\n    this.checkReadyState = this.checkReadyState.bind(this);\n    this.checkAudio = window.setInterval(() => {this.checkReadyState()}, 1000);\n\n    this.mouthDemon = {\n      image: new Image(),\n      width: 30,\n      height: 30,\n      srcX: 0,\n      srcY: 0\n    };\n    this.eyeDemon = {\n      image: new Image(),\n      width: 30,\n      height: 30,\n      srcX: 0,\n      srcY: 0\n    };\n    this.faceDemon = {\n      image: new Image(),\n      width: 30,\n      height: 40,\n      srcX: 0,\n      srcY: 0\n    };\n    this.bossDemon = {\n      image: new Image(),\n      width: 50,\n      height: 54,\n      srcX: 0,\n      srcY: 0\n    };\n    this.heart = { image: new Image() };\n    this.hp = {\n      image: new Image(),\n      width: 25,\n      height: 25,\n      srcX: 0,\n      srcY: 0\n    };\n\n    this.numAssets = 7;\n    this.numLoaded = 0;\n\n    this.mouthDemon.image.onload = () => { this.assetLoaded(); }\n    this.eyeDemon.image.onload = () => { this.assetLoaded(); }\n    this.faceDemon.image.onload = () => { this.assetLoaded(); }\n    this.bossDemon.image.onload = () => { this.assetLoaded(); }\n    this.heart.image.onload = () => { this.assetLoaded(); }\n    this.hp.image.onload = () => { this.assetLoaded(); }\n\n    this.mouthDemon.image.src = 'assets/sprites/mouth_demon.png';\n    this.eyeDemon.image.src = 'assets/sprites/eye_demon.png';\n    this.faceDemon.image.src = 'assets/sprites/face_demon.png';\n    this.bossDemon.image.src = 'assets/sprites/boss_demon.png';\n    this.heart.image.src = 'assets/sprites/heart.png';\n    this.hp.image.src = 'assets/sprites/hp.png';\n  }\n\n  checkReadyState() {\n    if (this.backgroundMusic.readyState === 4) {\n      window.clearInterval(this.checkAudio);\n      this.assetLoaded();\n    }\n  }\n\n  assetLoaded() {\n    this.numLoaded++;\n    if (this.numLoaded === this.numAssets) {\n      this.game.startGame();\n    };\n  }\n};\n\nexport function Timer(callback, delay) {\n  var timerId, start, remaining = delay;\n\n  this.pause = () => {\n    window.clearTimeout(timerId);\n    remaining -= new Date() - start;\n  };\n\n  this.resume = () => {\n    start = new Date();\n    window.clearTimeout(timerId);\n    timerId = window.setTimeout(callback, remaining);\n  };\n\n  this.clear = () => {\n    window.clearTimeout(timerId);\n  };\n\n  this.resume();\n}\n\nexport const getRandNum = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) ) + min;\n};\n","import { ObjectPool } from './utilities';\n\nexport default class BulletPool extends ObjectPool {\n  constructor(size, fgCanvas, type) {\n    super(size);\n\n    for (let i = 0; i < size; i++) {\n      let bullet = new Bullet(fgCanvas, type);\n      this.pool.push(bullet);\n    }\n  }\n};\n\nclass Bullet {\n  constructor(fgCanvas, type) {\n    this.ctx = fgCanvas.ctx;\n    this.ctxWidth = fgCanvas.width;\n    this.ctxHeight = fgCanvas.height;\n    this.resetX = fgCanvas.width + 5;\n    this.resetY = fgCanvas.height + 5;\n    this.setDefaultValues(type);\n  }\n\n  spawn(bulletData) {\n    this.pathAngle = bulletData.theta;\n    this.startRadius = bulletData.startRadius;\n    this.endRadius = bulletData.endRadius;\n    this.speed = bulletData.speed;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n    this.spawned = true;\n  }\n\n  draw() {\n    this.startRadius -= this.speed;\n    this.endRadius -= this.speed;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n\n    this.clear();\n  }\n\n  resetable() {\n    if (\n      (this.startPoint.y > -5 || this.endPoint.y > -5)\n      && (this.startPoint.y < this.resetY || this.endPoint.y < this.resetY)\n      && (this.startPoint.x > -5 || this.endPoint.x > -5)\n      && (this.startPoint.x < this.resetX || this.endPoint.x < this.resetX)\n    ) {\n      return false;\n    } else {\n      return true;\n    };\n  }\n\n  clear() {\n    let startX;\n    let startY;\n\n    if (this.startPoint.x > this.endPoint.x) {\n      startX = this.endPoint.x;\n    } else {\n      startX = this.startPoint.x;\n    }\n    if (this.startPoint.y > this.endPoint.y) {\n      startY = this.endPoint.y;\n    } else {\n      startY = this.startPoint.y;\n    }\n\n    this.ctx.clearRect(startX, startY, 16, 16);\n  }\n\n  computePoint(radius) {\n    // create a computeOffset funciton that works on a half circle tilted 45degrees\n    // when pc is on top left of circle drawpoint needs to be in topleft;\n    // when pc is on bottom right of circle drawpoint needs to be in *topleft*\n    return ({\n      x: Math.cos(this.pathAngle) * -radius + this.xOffset - 5,\n      y: Math.sin(this.pathAngle) * -radius + this.yOffset - 5,\n    });\n  }\n\n  setDefaultValues(type) {\n    this.xOffset = this.ctxWidth / 2;\n    this.yOffset = this.ctxHeight / 2;\n    this.pathAngle = 0;\n    this.startPoint = {x: 0, y: 0}\n    this.endPoint = {x: 0, y: 0}\n    this.speed = 0;\n    this.spawned = false;\n  }\n};\n","import { Sprite, ObjectPool } from './utilities';\n\nconst getRandNum = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) ) + min;\n};\n\nexport default class DemonPool extends ObjectPool {\n  constructor(demons, ctx, AssetStore, BulletPool) {\n    super(demons.length, ctx);\n    this.BulletPool = BulletPool;\n\n    for (let i = 0; i < demons.length; i++) {\n      const demon = new Demon(ctx, demons[i], AssetStore);\n      this.pool.push(demon);\n    }\n  }\n};\n\nclass Demon {\n  constructor(ctx, type, AssetStore) {\n    this.ctx = ctx;\n    this.type = type;\n\n    const storedAsset = AssetStore[type];\n    this.image = storedAsset.image;\n    this.width = storedAsset.width;\n    this.height = storedAsset.height;\n    this.sprite = new Sprite(\n      ctx,\n      storedAsset.image,\n      this.width,\n      this.height,\n      storedAsset.srcX,\n      storedAsset.srcY,\n    );\n    this.setDefaultValues();\n  }\n\n  spawn() {\n    this.drawPoint = this.computeDrawPoint();\n    this.spawned = true;\n  }\n\n  draw(BulletPool) {\n    if (this.type === 'faceDemon') {\n      if (this.radius > this.endRadius) {\n        this.radius -= Math.abs(this.speed * 100);\n      } else {\n        this.speed = this.endSpeed;\n      }\n    }\n\n    if (this.invincibilityFrames > 0) {\n      this.invincibilityFrames--;\n    }\n    this.theta -= this.speed;\n    this.drawPoint = this.computeDrawPoint();\n\n    if (\n      this.type === 'faceDemon' && this.invincibilityFrames > 0\n      || this.type === 'bossDemon' && this.invincibilityFrames > 0\n    ) {\n      this.hurtSprite.draw(this.drawPoint.x, this.drawPoint.y);\n    } else {\n      this.sprite.draw(this.drawPoint.x, this.drawPoint.y);\n    }\n\n    this.chanceToFire = Math.floor(Math.random() * 101)\n    if (this.chanceToFire / 100 < this.fireThreshold) {\n      this.fire(BulletPool);\n    }\n  }\n\n  resetable() {\n    if (this.life <= 0) {\n      return true;\n    }\n    return false;\n  }\n\n  computeDrawPoint() {\n    return({\n      x: Math.cos(this.theta) * -this.radius  + 390,\n      y: Math.sin(this.theta) * -this.radius  + 232,\n    });\n  }\n\n  clear() {\n    this.ctx.clearRect(\n      this.drawPoint.x - 5,\n      this.drawPoint.y - 5,\n      this.width + 10,\n      this.height + 10,\n    );\n  }\n\n  fire(BulletPool) {\n    const bulletData = {\n      theta: this.theta,\n      startRadius: this.radius,\n      endRadius: this.radius - 20,\n      speed: 4,\n      startPoint: {\n        x: this.drawPoint.x + this.width / 2,\n        y: this.drawPoint.y + this.height / 2,\n      },\n    };\n    BulletPool.get(bulletData);\n  }\n\n  isHit() {\n    this.life -= 1;\n    if (this.type === 'bossDemon') {\n      this.invincibilityFrames = 100;\n    } else {\n      this.invincibilityFrames = 50;\n    }\n  }\n\n  setDefaultValues() {\n    const thetaMultiplier = Math.random() < 0.5 ? -1 : 1;\n    const speedMultiplier = Math.random() < 0.5 ? -1 : 1;\n\n    if (this.type === 'mouthDemon' || this.type === 'eyeDemon') {\n      this.theta = (Math.PI / 2) * thetaMultiplier;\n      this.speed = (getRandNum(4, 7) / 1000) * speedMultiplier;\n      this.radius = getRandNum(265, 380); // The 'track' the demon moves along\n      this.life = 1;\n      this.fireThreshold = 0.01;\n    } else if (this.type === 'faceDemon') {\n      this.theta = (Math.PI / 2) * thetaMultiplier;\n      this.speed = (getRandNum(6, 9) / 1000) * speedMultiplier;\n      this.endSpeed = this.speed * 2;\n      this.radius = 400;\n      this.endRadius = getRandNum(125, 225);\n      this.life = 2;\n      this.fireThreshold = 0.02;\n      this.hurtSprite = new Sprite(\n        this.ctx,\n        this.image,\n        this.width,\n        this.height,\n        31,\n        0,\n      );\n    } else if (this.type === 'bossDemon') {\n      this.theta = (Math.PI / 2) * thetaMultiplier;\n      this.speed = (getRandNum(4, 6) / 1000) * speedMultiplier;\n      this.radius = getRandNum(200, 300);\n      this.life =  5 ;\n      this.fireThreshold = 0.05;\n      this.hurtSprite = new Sprite(\n        this.ctx,\n        this.image,\n        this.width,\n        this.height,\n        51,\n        0,\n      );\n    }\n    this.invincibilityFrames = 0;\n    this.chanceToFire = 0;\n    this.spawned = false;\n    this.drawPoint = { x: 400, y: 250 };\n  }\n};\n","import { Sprite } from './utilities';\n\nclass Field {\n  constructor(\n    fgCanvasObj,\n    statsCanvasObj,\n    pcCanvasObj,\n    optsCanvasObj,\n    AssetStore,\n    demonBulletPool,\n    bossBulletPool,\n    pcBulletPool,\n    lvl1DemonPool,\n    lvl2DemonPool,\n    lvl3DemonPool,\n    pickupsPool,\n    player,\n    movementDirection,\n    gameStatus,\n    mobileCanvasObj,\n    firePosition,\n  ) {\n    this.fgCanvas = fgCanvasObj;\n    this.statsCanvas = statsCanvasObj;\n    this.pcCanvas = pcCanvasObj;\n    this.optsCanvas = optsCanvasObj;\n    this.mobileCanvas = mobileCanvasObj;\n\n    this.AssetStore = AssetStore;\n    this.demonBulletPool = demonBulletPool;\n    this.bossBulletPool = bossBulletPool;\n    this.pcBulletPool = pcBulletPool;\n    this.lvl1DemonPool = lvl1DemonPool;\n    this.lvl2DemonPool = lvl2DemonPool;\n    this.lvl3DemonPool = lvl3DemonPool;\n    this.pickupsPool = pickupsPool;\n\n    this.player = player;\n    this.movementDirection = movementDirection;\n    this.firePosition = firePosition;\n    this.gameStatus = gameStatus;\n\n    this.lastTime = Date.now;\n    this.playerScore = 0;\n    this.heart = new Sprite(\n      this.statsCanvas.ctx,\n      this.AssetStore.heart.image,\n      13, 13, 0, 0,\n    );\n  }\n\n  updateMovementDirection(newDirection) {\n    this.movementDirection = newDirection;\n  }\n\n  updateFirePosition(newPosition) {\n    this.firePosition = newPosition;\n  }\n\n  updateGameStatus(gameStatus) {\n    this.gameStatus = gameStatus;\n  }\n\n  drawStandardStartScreen() {\n    this.setupStartScreen();\n\n    let primaryText;      // clockwise\n    let secondaryText;    // counterclockwise\n    if (this.gameStatus === 'over') {\n      primaryText = {\n        text: \"GAME OVER\", size: \"36px\", x: 285, y: 70,\n      };\n      secondaryText = {\n        text: \"fight! fight! don't let demons win!\", size: \"22px\", x: 176, y: 105,\n      };\n    } else {\n      primaryText = {\n        text: \"SHOOT ALL DEMONS!\", size: \"36px\", x: 207, y: 70,\n      };\n      secondaryText = {\n        text: \"careful! demon power is strong!\", size: \"22px\", x: 182, y: 105,\n      };\n    };\n    this.drawStartScreenMessage(primaryText, secondaryText);\n\n    this.drawControls();\n\n    // for checking centeredness of start screen items\n    // this.optsCanvas.ctx.beginPath();\n    // this.optsCanvas.ctx.moveTo(20,410);\n    // this.optsCanvas.ctx.lineTo(20,490);\n    // this.optsCanvas.ctx.stroke();\n    // this.optsCanvas.ctx.beginPath();\n    // this.optsCanvas.ctx.moveTo(170,410);\n    // this.optsCanvas.ctx.lineTo(170,490);\n    // this.optsCanvas.ctx.stroke();\n  }\n\n  drawMobileStartScreen() {\n    this.setupStartScreen();\n\n    let primaryText;\n    let secondaryText;\n    if (this.gameStatus === 'over') {\n      primaryText = {\n        text: \"GAME OVER\", size: \"36px\", x: 285, y: 70,\n      };\n      secondaryText = {\n        text: \"fight! fight! don't let demons win!\", size: \"19px\", x: 204, y: 105,\n      };\n    } else {\n      primaryText = {\n        text: \"SHOOT ALL DEMONS!\", size: \"34px\", x: 212, y: 70,\n      };\n      secondaryText = {\n        text: \"careful! demon power is strong!\", size: \"20px\", x: 202, y: 105,\n      };\n    };\n    this.drawStartScreenMessage(primaryText, secondaryText);\n\n    this.drawMobileControls();\n  }\n\n  setupStartScreen() {\n    this.optsCanvas.canvas.classList.remove('hidden');\n    this.clearOptsContext();\n    this.optsCanvas.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n    this.optsCanvas.ctx.fillRect(0, 0, 800, 500);\n\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n    this.optsCanvas.ctx.strokeRect(300, 385, 205, 87);\n    this.optsCanvas.ctx.font = \"60px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"PLAY\", 320, 450);\n  }\n\n  drawStartScreenMessage(primaryText, secondaryText) {\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.font = `${primaryText.size} sf_alien_encountersitalic`;\n    this.optsCanvas.ctx.fillText(\n      primaryText.text, primaryText.x, primaryText.y,\n    );\n    this.optsCanvas.ctx.font = `${secondaryText.size} sf_alien_encountersitalic`;\n    this.optsCanvas.ctx.fillText(\n      secondaryText.text, secondaryText.x, secondaryText.y,\n    );\n  }\n\n  drawControls() {\n    let cw;     // clockwise\n    let ccw;    // counterclockwise\n    if (this.movementDirection === 'standard') {\n      ccw = {\n        desc1X: 70, desc1Y: 250,\n        desc2X: 90, desc2Y: 280,\n        circleX: 160, circleY: 190,\n      };\n      cw = {\n        desc1X: 590, desc1Y: 250,\n        desc2X: 566, desc2Y: 280,\n        circleX: -640, circleY: 190,\n      };\n    } else {\n      ccw = {\n        desc1X: 545, desc1Y: 250,\n        desc2X: 90, desc2Y: 280,\n        circleX: 640, circleY: 190,\n      };\n      cw = {\n        desc1X: 109, desc1Y: 250,\n        desc2X: 566, desc2Y: 280,\n        circleX: -160, circleY: 190,\n      };\n    };\n\n    this.drawSwapMovementButton();\n\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"counterclockwise\", ccw.desc1X, ccw.desc1Y);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"a   j   left\", ccw.desc2X, ccw.desc2Y);\n\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(\n      ccw.circleX,\n      ccw.circleY,\n      30,\n      Math.PI / 2,\n      Math.PI,\n      true,\n    );\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo(Math.abs(ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(ccw.circleX - 20), (ccw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo(Math.abs(ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(ccw.circleX - 35), (ccw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"clockwise\", cw.desc1X, cw.desc1Y);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"d   l   right\", cw.desc2X, cw.desc2Y);\n\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(\n      Math.abs(cw.circleX), cw.circleY, 30,Math.PI/2, 0, false\n    );\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo(Math.abs(cw.circleX - 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(cw.circleX - 20), (cw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo(Math.abs(cw.circleX - 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(cw.circleX - 35), (cw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n\n    this.optsCanvas.ctx.font = \"16px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\n      \"HP EVERY 1000 PTS!\", 310, 250,\n    );\n    this.optsCanvas.ctx.font = \"16px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\n      \"BOSS EVERY 2500 PTS!\", 294, 280,\n    );\n\n    this.optsCanvas.ctx.font = \"24px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\n      \"SPACE TO FIRE WHEN POWER IS FULL\", 148, 340,\n    );\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo(145, 347);\n    this.optsCanvas.ctx.lineTo(635, 347);\n    this.optsCanvas.ctx.stroke();\n\n    this.drawGamePadToggleButton();\n\n    this.optsCanvas.ctx.font = \"12px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"m to mute!\", 705, 440);\n    this.optsCanvas.ctx.fillText(\"p to pause!\", 700, 460);\n    if (this.gameStatus !== 'playing') {\n      this.optsCanvas.ctx.fillText(\"enter to start!\", 670, 480);\n    }\n  }\n\n  drawMobileControls() {\n    let cw;     // clockwise\n    let ccw;    // counterclockwise\n    let firePos;\n    if (\n      this.movementDirection === 'standard' && this.firePosition === 'standard'\n    ) {\n      ccw = { descX: 5, descY: 185, circleX: 100, circleY: 125 };\n      cw = { descX: 45, descY: 405, circleX: 100, circleY: 345 };\n      firePos = { x: 650, y: 265 };\n      this.optsCanvas.ctx.strokeStyle = \"white\";\n      this.optsCanvas.ctx.strokeRect(2,2,196,246);\n      this.optsCanvas.ctx.strokeRect(2,252,196,246);\n      this.optsCanvas.ctx.strokeRect(602,2,196,496);\n    } else if (\n      this.movementDirection === 'inverted' && this.firePosition === 'standard'\n    ) {\n      ccw = { descX: 5, descY: 405, circleX: 100, circleY: 345 };\n      cw = { descX: 45, descY: 185, circleX: 100, circleY: 125 };\n      firePos = { x: 650, y: 265 };\n      this.optsCanvas.ctx.strokeStyle = \"white\";\n      this.optsCanvas.ctx.strokeRect(2,2,196,246);\n      this.optsCanvas.ctx.strokeRect(2,252,196,246);\n      this.optsCanvas.ctx.strokeRect(602,2,196,496);\n    } else if (\n      this.movementDirection === 'standard' && this.firePosition === 'inverted'\n    ) {\n      ccw = { descX: 605, descY: 185, circleX: 700, circleY: 125 };\n      cw = { descX: 645, descY: 405, circleX: 700, circleY: 345 };\n      firePos = { x: 43, y: 265 };\n      this.optsCanvas.ctx.strokeStyle = \"white\";\n      this.optsCanvas.ctx.strokeRect(602,2,196,246);\n      this.optsCanvas.ctx.strokeRect(602,252,196,246);\n      this.optsCanvas.ctx.strokeRect(2,2,196,496);\n    } else if (\n      this.movementDirection === 'inverted' && this.firePosition === 'inverted'\n    ) {\n      ccw = { descX: 605, descY: 405, circleX: 700, circleY: 345 };\n      cw = { descX: 645, descY: 185, circleX: 700, circleY: 125 };\n      firePos = { x: 43, y: 265 };\n      this.optsCanvas.ctx.strokeRect(602,2,196,246);\n      this.optsCanvas.ctx.strokeRect(602,252,196,246);\n      this.optsCanvas.ctx.strokeRect(2,2,196,496);\n    };\n\n    this.drawSwapMovementButton();\n    this.drawSwapFireButton();\n\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n\n    // counterclockwise description titles\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"counterclockwise\", ccw.descX, ccw.descY);\n\n    // fire description titles\n    this.optsCanvas.ctx.font = \"42px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"FIRE!\", firePos.x, firePos.y);\n\n    // clockwise description titles\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"clockwise\", cw.descX, cw.descY);\n\n    // counterclockwise circles\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(ccw.circleX, ccw.circleY, 30, Math.PI / 2, Math.PI, true);\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo((ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo((ccw.circleX - 20), (ccw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo((ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo((ccw.circleX - 35), (ccw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n\n    // clockwise circles\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(cw.circleX, cw.circleY, 30, Math.PI / 2, 0, false);\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo((cw.circleX + 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo((cw.circleX + 20), (cw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo((cw.circleX + 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo((cw.circleX + 35), (cw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n  }\n\n  drawSwapMovementButton() {\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n    this.optsCanvas.ctx.strokeRect(240,165,320,35);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"swap movement direction\", 250, 190);\n  }\n\n  drawSwapFireButton() {\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n    this.optsCanvas.ctx.strokeRect(290,255,225,35);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"move fire button\", 300, 280);\n  }\n\n  drawGamePadToggleButton() {\n    if (this.gamePadConnected) {\n      this.optsCanvas.ctx.clearRect(20,410,150,80);\n      this.optsCanvas.ctx.fillStyle = \"rgba(0, 0, 0, 0.8\";\n      this.optsCanvas.ctx.fillRect(20,410,150,80);\n      this.optsCanvas.ctx.fillStyle = \"white\";\n      this.optsCanvas.ctx.font = \"24px sf_alien_encountersitalic\";\n      if (this.gamePadToggle) {\n        this.optsCanvas.ctx.fillText(\"gamepad\", 33, 435);\n      } else {\n        this.optsCanvas.ctx.fillText(\"keyboard\", 27, 435);\n      }\n      this.optsCanvas.ctx.font = \"12px sf_alien_encountersitalic\";\n      this.optsCanvas.ctx.fillText(\"click here to toggle\", 20, 460);\n      this.optsCanvas.ctx.fillText(\"gamepad input!\", 20, 480);\n    };\n  }\n\n  render()  {\n    this.undrawFGContext();\n    this.clearPCContext();\n    this.updatePlayerCharge()\n    this.drawPlayerRails('circle');\n    this.player.draw();\n    this.lvl1DemonPool.draw();\n    this.lvl2DemonPool.draw();\n    this.lvl3DemonPool.draw();\n    this.pickupsPool.draw();\n    this.pcBulletPool.draw('player');\n    this.demonBulletPool.draw();\n    this.bossBulletPool.draw();\n  }\n\n  drawStatusBar() {\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(\n      0,\n      0,\n      this.statsCanvas.width,\n      this.statsCanvas.height,\n    );\n\n    // Charge container\n    this.statsCanvas.ctx.strokeStyle = '#6816e0';\n    this.statsCanvas.ctx.strokeRect(352, 30, 97, 13);\n\n    // Player life\n    this.drawPlayerHearts();\n\n    this.statsCanvas.ctx.fillStyle = 'black';\n    this.statsCanvas.ctx.strokeStyle = 'black';\n\n    // Titles\n    this.statsCanvas.ctx.font = \"22px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"SCORE\", 49, 21);\n    this.statsCanvas.ctx.font = \"22px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"LIFE\", 204, 21);\n    this.statsCanvas.ctx.font = \"22px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"POWER\", 351, 21);\n\n    // Player score\n    this.statsCanvas.ctx.font = \"20px Courier\";\n    this.statsCanvas.ctx.fillText(\"0\", 50, 43);\n\n    // Mute / unmute button\n    this.statsCanvas.ctx.lineWidth = 2;\n    this.statsCanvas.ctx.strokeRect(530, 10, 100, 30);\n    this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"MUTE\", 550, 32);\n\n    // Pause button\n    this.statsCanvas.ctx.lineWidth = 2;\n    this.statsCanvas.ctx.strokeRect(650, 10, 100, 30);\n    this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"PAUSE\", 665, 32);\n  }\n\n  drawPlayerHearts() {\n    this.statsCanvas.ctx.clearRect(200, 20, 140, 40);\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(200, 20, 140, 40);\n    for (let i = 0; i < this.player.life; i++) {\n      this.heart.draw(205 + (i * 20), 30)\n    }\n  }\n\n  updatePlayerScore(points) {\n    this.playerScore += points;\n\n    this.statsCanvas.ctx.clearRect(45, 20, 150, 40);\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(45, 20, 150, 40);\n    this.statsCanvas.ctx.fillStyle = 'black';\n    this.statsCanvas.ctx.font = \"20px Courier\";\n    this.statsCanvas.ctx.fillText(`${this.playerScore}`, 50, 43);\n  }\n\n  updatePlayerCharge() {\n    if (this.player.fireCharge === 0) {\n      this.statsCanvas.ctx.clearRect(353, 31, 95, 11);\n      this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n      this.statsCanvas.ctx.fillRect(353, 31, 95, 11);\n    } else if (this.player.fireCharge < 20) {\n      this.statsCanvas.ctx.fillStyle = '#6816e0';\n      this.statsCanvas.ctx.fillRect(353, 31, this.player.fireCharge * 5, 11);\n    }\n  }\n\n  updateMuteButton(muted) {\n    this.statsCanvas.ctx.clearRect(532, 12, 96, 26);\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(532, 12, 96, 26);\n    if (muted === true) {\n      this.statsCanvas.ctx.fillStyle = 'black';\n      this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n      this.statsCanvas.ctx.fillText(\"UNMUTE\", 537, 32);\n    } else {\n      this.statsCanvas.ctx.fillStyle = 'black';\n      this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n      this.statsCanvas.ctx.fillText(\"MUTE\", 550, 32);\n    }\n  }\n\n  drawPlayerRails(shape) {\n    const xCenter = this.pcCanvas.width / 2;\n    const yCenter = this.pcCanvas.height / 2;\n    if (this.player.fireCharge < 20) {\n      this.pcCanvas.ctx.strokeStyle = \"white\";\n    } else {\n      this.pcCanvas.ctx.strokeStyle = \"#6816e0\";\n    }\n\n    switch (shape) {\n      case 'circle':\n      default:\n      this.pcCanvas.ctx.beginPath();\n      this.pcCanvas.ctx.arc(xCenter, yCenter, 60, 0, 2 * Math.PI, true);\n      this.pcCanvas.ctx.lineWidth = 2;\n      this.pcCanvas.ctx.stroke();\n    }\n  }\n\n  undrawFGContext() {\n    this.fgCanvas.ctx.fillStyle = \"rgba(0, 0, 0, 0.1\";\n    this.fgCanvas.ctx.fillRect(0, 0, 800, 500);\n  }\n\n  clearFGContext() {\n    this.fgCanvas.ctx.clearRect(0,0,this.fgCanvas.width,this.fgCanvas.height);\n  }\n\n  clearStatsContext() {\n    this.statsCanvas.ctx.clearRect(\n      0,\n      0,\n      this.statsCanvas.width,\n      this.statsCanvas.height,\n    );\n  }\n\n  clearPCContext() {\n    this.pcCanvas.ctx.clearRect(0,0,this.pcCanvas.width,this.pcCanvas.height);\n  }\n\n  clearOptsContext() {\n    this.optsCanvas.ctx.clearRect(\n      0,\n      0,\n      this.optsCanvas.width,\n      this.optsCanvas.height,\n    );\n  }\n\n  clearAllContexts() {\n    this.clearFGContext();\n    this.clearStatsContext();\n    this.clearPCContext();\n  }\n}\n\nexport default Field;\n","import { getRandNum, ObjectPool, Sprite } from './utilities';\n\nconst pickups = ['hp'];\n\nexport default class PickupsPool extends ObjectPool {\n  constructor(ctx, AssetStore) {\n    super(pickups.length, ctx);\n\n    for (let i = 0; i < pickups.length; i++) {\n      let pickup = null;\n      switch (pickups[i]) {\n        case 'hp':\n        default:\n          pickup = new Pickup(ctx, 'hp', AssetStore);\n          break;\n      }\n      this.pool.push(pickup);\n    }\n  }\n};\n\nclass Pickup {\n  constructor(ctx, type, AssetStore) {\n    this.ctx = ctx;\n    this.type = type;\n\n    const storedAsset = AssetStore[type];\n    this.image = storedAsset.image;\n    this.width = storedAsset.width;\n    this.height = storedAsset.height;\n    this.sprite = new Sprite(\n      ctx,\n      storedAsset.image,\n      this.width,\n      this.height,\n      storedAsset.srcX,\n      storedAsset.srcY,\n    );\n    this.setDefaultValues();\n  }\n\n  spawn() {\n    this.drawPoint = this.computeDrawPoint();\n    this.spawned = true;\n  }\n\n  draw() {\n    if (this.invincibilityFrames > 0) {\n      this.invincibilityFrames--;\n    }\n    this.theta -= this.speed;\n    this.drawPoint = this.computeDrawPoint();\n    this.sprite.draw(this.drawPoint.x, this.drawPoint.y);\n  }\n\n  resetable() {\n    if (this.life <= 0) {\n      return true\n    };\n    return false;\n  }\n\n  computeDrawPoint() {\n    return({\n      x: Math.cos(this.theta) * -this.radius  + 390,\n      y: Math.sin(this.theta) * -this.radius  + 232,\n    });\n  }\n\n  clear() {\n    this.ctx.clearRect(\n      this.drawPoint.x - 5,\n      this.drawPoint.y - 5,\n      this.width + 10,\n      this.height + 10,\n    );\n  }\n\n  isHit() {\n    this.life -= 1;\n    this.invincibilityFrames = 50;\n  }\n\n  setDefaultValues() {\n    let thetaMultiplier = Math.random() < 0.5 ? -1 : 1;\n    let speedMultiplier = Math.random() < 0.5 ? -1 : 1;\n\n    this.theta = (Math.PI / 2) * thetaMultiplier;\n    this.speed = (getRandNum(4, 7) / 1000) * speedMultiplier;\n    this.radius = getRandNum(200, 400); // The 'track' the pickup moves along\n    this.life = 1;\n    this.invincibilityFrames = 0;\n    this.spawned = false;\n    this.drawPoint = { x: 400, y: 250 };\n  }\n};\n","class Player {\n  constructor(pcCanvas, BulletPool) {\n    this.ctx = pcCanvas.ctx;\n    this.pcFieldWidth = pcCanvas.width;\n    this.pcFieldHeight = pcCanvas.height;\n    this.BulletPool = BulletPool;\n\n    this.velocity = 0;\n    this.acceleration = 0.015;\n    this.maxSpeed = 0.2;\n    this.radius = 50; // The 'track' the player moves along\n    this.fireCharge = 0;\n    this.fireCooldown = 25;\n    this.invincibilityFrames = 0;\n    this.invincibilityColor = 'white';\n    this.life = 3;\n\n    this.portTheta = -1.23;\n    this.starboardTheta = 1.9106;\n    this.bowTheta = Math.PI / 2;\n    this.computeAllVerticies();\n\n    this.draw = this.draw.bind(this);\n    this.fire = this.fire.bind(this);\n  }\n\n  computeAllVerticies() {\n    this.portVertex = this.computePortVertex();\n    this.starboardVertex = this.computeStarboardVertex();\n    this.bowVertex = this.computeCenterPoints(-15);\n    this.hitboxCenter = this.computeCenterPoints(-35);\n  }\n\n  computeStarboardVertex() {\n    return ({\n      x: Math.cos(this.starboardTheta) * this.radius + this.pcFieldWidth / 2,\n      y: -Math.sin(this.starboardTheta) * this.radius + this.pcFieldHeight / 2,\n    });\n  }\n\n  computePortVertex() {\n    return ({\n      x: Math.cos(this.portTheta) * this.radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.portTheta) * this.radius  + this.pcFieldHeight / 2,\n    });\n  }\n\n  computeCenterPoints(radius) {\n    return ({\n      x: Math.cos(this.bowTheta) * radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.bowTheta) * radius  + this.pcFieldHeight / 2,\n    });\n  }\n\n  move(keyStatus) {\n    if (this.fireCharge < this.fireCooldown) {\n      this.fireCharge++; // increments once every frame\n    }\n    if (this.invincibilityFrames > 0) {\n      this.invincibilityFrames--; // decrements once every frame\n    }\n    if (keyStatus.left) {\n      if (this.velocity <= this.maxSpeed) {\n        this.velocity += this.acceleration;\n      }\n      this.starboardTheta += this.velocity;\n      this.portTheta -= this.velocity;\n      this.bowTheta -= this.velocity;\n    } else if (keyStatus.right) {\n      if (this.velocity <= this.maxSpeed) {\n        this.velocity += this.acceleration;\n      }\n      this.starboardTheta -= this.velocity;\n      this.portTheta += this.velocity;\n      this.bowTheta += this.velocity;\n    } else {\n      this.velocity = 0;\n    }\n\n    if (keyStatus.fire && this.fireCharge >= this.fireCooldown) {\n      this.fire();\n    }\n  }\n\n  fire() {\n    this.fireCharge = 0;\n    const bulletData = {\n      theta: this.bowTheta,\n      startRadius: 12,\n      endRadius: -8,\n      speed: 6,\n    };\n    this.BulletPool.get(bulletData);\n  }\n\n  draw() {\n    this.computeAllVerticies();\n    this.ctx.beginPath();\n\n    if (this.invincibilityFrames > 0) {\n      this.ctx.fillStyle = this.invincibilityColor;\n    }\n    else this.ctx.fillStyle = 'white';\n\n    this.ctx.moveTo(this.starboardVertex.x, this.starboardVertex.y);\n    this.ctx.lineTo(this.portVertex.x, this.portVertex.y);\n    this.ctx.lineTo(this.bowVertex.x, this.bowVertex.y);\n    this.ctx.fill();\n  }\n\n  isHit() {\n    this.life -= 1;\n    this.invincibilityFrames = 50;\n    this.invincibilityColor = 'red';\n  }\n\n  isHealed() {\n    if (this.life < 3) {\n      this.life += 1;\n      this.invincibilityFrames = 50;\n      this.invincibilityColor = 'lawngreen';\n    }\n  }\n}\n\nexport default Player;\n","import BulletPool from './bullet';\nimport DemonPool from './demon';\nimport Field from './field';\nimport PickupsPool from './pickups';\nimport Player from './player';\nimport { AssetStore, Timer } from './utilities';\n\nconst KEY_MAP = {\n  74: 'left',     // j\n  76: 'right',    // l\n  68: 'right',    // d\n  65: 'left',     // a\n  39: 'right',    // left arrow\n  37: 'left',     // right arrow\n  32: 'fire',     // space bar\n  13: 'start',    // enter\n  touchLeft: 'left',\n  touchRight: 'right',\n  touchFire: 'fire',\n};\n\nconst KEY_STATUS = {};\nfor (let code in KEY_MAP) {\n  KEY_STATUS[KEY_MAP[code]] = false;\n}\n\nclass Game {\n  constructor(fgCanvas, statsCanvas, pcCanvas, optsCanvas, mobileCanvas) {\n    this.fgCanvas = {\n      ctx: fgCanvas.getContext('2d'),\n      width: 800,\n      height: 500\n    };\n    this.statsCanvas = {\n      ctx: statsCanvas.getContext('2d'),\n      width: 800,\n      height: 50\n    };\n    this.pcCanvas = {\n      ctx: pcCanvas.getContext('2d'),\n      width: 150,\n      height: 150\n    };\n    this.optsCanvas = {\n      canvas: optsCanvas,\n      ctx: optsCanvas.getContext('2d'),\n      width: 800,\n      height: 500\n    };\n    if (mobileCanvas === null) {\n      this.isMobile = false;\n      this.firePosition = null;\n      this.mobileCanvas = { };\n    } else {\n      this.isMobile = true;\n      this.firePosition = 'standard';\n      this.mobileCanvas = {\n        canvas: mobileCanvas,\n        ctx: mobileCanvas.getContext(\"2d\"),\n        width: 800,\n        height: 500,\n      };\n    };\n\n    this.play = this.play.bind(this);\n    this.startRound = this.startRound.bind(this);\n    this.optsCanvasCheckClick = this.optsCanvasCheckClick.bind(this);\n    this.statsCanvasCheckClick = this.statsCanvasCheckClick.bind(this);\n\n    this.AssetStore = new AssetStore(this);\n\n    this.gamePadConnected = false;\n    this.gamePadToggle = false;\n    this.nextHpSpawnScore = 1000;\n    this.nextBossSpawnScore = 2500;\n\n    this.drawLoadingScreen();\n    this.setupEventListners(fgCanvas, statsCanvas, optsCanvas);\n    this.setupNewGame();\n    this.setupNewField();\n  }\n\n  drawLoadingScreen() {\n    this.optsCanvas.ctx.fillStyle = 'black';\n    this.optsCanvas.ctx.font = \"16px Courier\";\n    this.optsCanvas.ctx.fillText(\"Loading...\", 50,50);\n  }\n\n  setupEventListners(fgCanvas, statsCanvas, optsCanvas) {\n    document.addEventListener('keydown', this.keydown.bind(this));\n    document.addEventListener('keyup', this.keyup.bind(this));\n    optsCanvas.addEventListener('click', (e) => {\n      this.optsCanvasCheckClick(e, optsCanvas.getBoundingClientRect());\n    });\n    statsCanvas.addEventListener('click', (e) => {\n      this.statsCanvasCheckClick(e, statsCanvas.getBoundingClientRect());\n    });\n\n    fgCanvas.addEventListener(\"touchstart\", (e) => {\n      this.handleStart(e, fgCanvas.getBoundingClientRect());\n    }, false);\n    fgCanvas.addEventListener(\"touchend\", (e) => {\n      this.handleEnd(e, fgCanvas.getBoundingClientRect());\n    }, false);\n    fgCanvas.addEventListener(\"touchcancel\", this.handleCancel, false);\n    this.ongoingTouches = [];\n\n    window.addEventListener(\"gamepadconnected\", (e) => {\n      this.mapGamePadButtons(e);\n      this.gamePadConnected = true;\n    });\n    window.addEventListener(\"gamepaddisconnected\", (e) => {\n      this.gamePadConnected = false;\n      this.gamePadToggle = false;\n    });\n  }\n\n  setupNewGame() {\n    this.demonBulletPool = new BulletPool(3, this.fgCanvas, 'demonBullet');\n    this.bossBulletPool = new BulletPool(3, this.fgCanvas, 'demonBullet');\n    this.pcBulletPool = new BulletPool(4, this.fgCanvas, 'player');\n    this.setupDemonPools();\n    this.pickupsPool = new PickupsPool(this.fgCanvas.ctx, this.AssetStore);\n    this.player = new Player(this.pcCanvas, this.pcBulletPool);\n    this.movementDirection = 'standard';\n    this.muted = false;\n    this.paused = false;\n    this.gameStatus = 'unbegun';\n  }\n\n  setupDemonPools() {\n    const lvl1Demons = [\n      'mouthDemon', 'mouthDemon', 'mouthDemon',\n      'eyeDemon', 'eyeDemon', 'eyeDemon',\n    ];\n    this.lvl1DemonPool = new DemonPool(\n      lvl1Demons, this.fgCanvas.ctx, this.AssetStore, this.demonBulletPool,\n    );\n\n    const lvl2Demons = ['faceDemon', 'faceDemon'];\n    this.lvl2DemonPool = new DemonPool(\n      lvl2Demons, this.fgCanvas.ctx, this.AssetStore, this.demonBulletPool,\n    );\n\n    const lvl3Demons = ['bossDemon'];\n    this.lvl3DemonPool = new DemonPool(\n      lvl3Demons, this.fgCanvas.ctx, this.AssetStore, this.bossBulletPool,\n    );\n  }\n\n  setupNewField() {\n    this.field = new Field(\n      this.fgCanvas,\n      this.statsCanvas,\n      this.pcCanvas,\n      this.optsCanvas,\n      this.AssetStore,\n      this.demonBulletPool,\n      this.bossBulletPool,\n      this.pcBulletPool,\n      this.lvl1DemonPool,\n      this.lvl2DemonPool,\n      this.lvl3DemonPool,\n      this.pickupsPool,\n      this.player,\n      this.movementDirection,\n      this.gameStatus,\n      this.mobileCanvas,\n      this.firePosition,\n    );\n  }\n\n  startGame() {\n    this.field.drawStatusBar();\n    this.drawStartScreen();\n  }\n\n  drawStartScreen() {\n    if (this.isMobile) {\n      this.field.drawMobileStartScreen();\n    } else {\n      this.field.drawStandardStartScreen();\n    }\n  }\n\n  startRound() {\n    this.AssetStore.backgroundMusic.play();\n\n    this.lvl1Timer = new Timer(() => { this.spawnLvl1Demons() }, 5000);\n    this.lvl2Timer = new Timer(() => { this.spawnLvl2Demons() }, 15000);\n\n    this.field.clearOptsContext();\n    this.optsCanvas.canvas.classList.add('hidden');\n    this.gameStatus = 'playing';\n    this.field.updateGameStatus(this.gameStatus);\n    this.startTime = Date.now();\n    this.lastTime = Date.now();\n    this.play();\n  }\n\n  pauseSpawnTimers() {\n    this.lvl1Timer.pause();\n    this.lvl2Timer.pause();\n  }\n\n  resumeSpawnTimers() {\n    this.lvl1Timer.resume();\n    this.lvl2Timer.resume();\n  }\n\n  removeSpawnTimers() {\n    this.lvl1Timer.clear();\n    this.lvl2Timer.clear();\n  }\n\n  play() {\n    this.checkGameOver();\n    this.checkCollisions();\n    if (this.gamePadToggle) {\n      this.buttonDown();\n    }\n    this.player.move(KEY_STATUS);\n    if (this.gamePadToggle) {\n      this.buttonUp();\n    }\n\n    const now = Date.now();\n\n    this.checkLevel1Demons();\n    this.spawnLvl3Demons();\n    this.spawnHp();\n    this.field.render();\n\n    if (!this.paused) {\n      setTimeout(() => {\n        this.lastTime = now;\n        requestAnimationFrame(this.play);\n      }, 15); // caps fps at ~60\n    }\n  }\n\n  checkLevel1Demons() {\n    let spawnedLvl1 = 0;\n    for (let i = 0; i < this.lvl1DemonPool.pool.length; i++) {\n      const demon = this.lvl1DemonPool.pool[i];\n      if (demon.type === 'mouthDemon' && demon.spawned) {\n        spawnedLvl1++;\n      } else if (demon.type === 'eyeDemon' && demon.spawned) {\n        spawnedLvl1++;\n      }\n    }\n\n    if (spawnedLvl1 < 1) {\n      this.lvl1DemonPool.get('mouthDemon');\n      this.lvl1DemonPool.get('eyeDemon');\n    }\n\n    return spawnedLvl1;\n  }\n\n  spawnLvl1Demons() {\n    const maxDemons = this.getMaxDemons('lvl1');\n    if (this.checkLevel1Demons() < maxDemons) {\n      const toGet = Math.random() < 0.5 ? 'mouthDemon' : 'eyeDemon';\n      this.lvl1DemonPool.get(toGet);\n    };\n\n    this.lvl1Timer = new Timer(() => { this.spawnLvl1Demons() }, 5000);\n  }\n\n  spawnLvl2Demons() {\n    let spawnedLvl2 = 0;\n    for (let i = 0; i < this.lvl2DemonPool.pool.length; i++) {\n      const demon = this.lvl2DemonPool.pool[i];\n      if (demon.type === 'faceDemon' && demon.spawned) {\n        spawnedLvl2++\n      };\n    };\n\n    const maxDemons = this.getMaxDemons('lvl2');\n    if (spawnedLvl2 < maxDemons) {\n      this.lvl2DemonPool.get('faceDemon');\n    }\n\n    this.lvl2Timer = new Timer(() => { this.spawnLvl2Demons() }, 15000);\n  }\n\n  spawnLvl3Demons() {\n    let spawnedLvl3 = 0;\n    for (let i = 0; i < this.lvl3DemonPool.pool.length; i++) {\n      const demon = this.lvl3DemonPool.pool[i];\n      if (demon.type === 'bossDemon' && demon.spawned) {\n        spawnedLvl3++;\n      };\n    }\n    \n    if (this.field.playerScore > this.nextBossSpawnScore && spawnedLvl3 < 1) {\n      this.lvl3DemonPool.get('bossDemon');\n      this.nextBossSpawnScore += 3000;\n    }\n  }\n\n  spawnHp() {\n    let spawnedHp = 0;\n    for (let i = 0; i < this.pickupsPool.pool.length; i++) {\n      const pickup = this.pickupsPool.pool[i];\n      if (pickup.type === 'hp' && pickup.spawned) {\n        spawnedHp++;\n      };\n    }\n\n    if (this.field.playerScore > this.nextHpSpawnScore && spawnedHp < 1) {\n      this.pickupsPool.get('hp');\n      this.nextHpSpawnScore += 1000;\n    }\n  }\n\n  getMaxDemons(level) {\n    if (this.lastTime - this.startTime < 40000) {\n      if (level === 'lvl1') { return 4 };\n      if (level === 'lvl2') { return 1 };\n    } else {\n      if (level === 'lvl1') { return 6 };\n      if (level === 'lvl2') { return 2 };\n    };\n  }\n\n  checkCollisions() {\n    const spawnedPCBullets = this.pcBulletPool.pool.filter((bullet) => bullet.spawned);\n    this.checkPlayerCollision(spawnedPCBullets);\n    this.checkDemonCollision(spawnedPCBullets);\n    this.checkHpCollision(spawnedPCBullets);\n  }\n\n  checkPlayerCollision(spawnedPCBullets) {\n    const hitbox = {\n      x: this.player.hitboxCenter.x,\n      y: this.player.hitboxCenter.y,\n      radius: 12,\n    };\n\n    for (let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n      const bullet = spawnedPCBullets[bullIdx];\n      if (\n        (\n          this.bulletHitsPC(this.player, hitbox, bullet.startPoint)\n          || this.bulletHitsPC(this.player, hitbox, bullet.endPoint)\n        ) && this.player.invincibilityFrames <= 0\n      ) {\n        this.player.isHit();\n        this.field.drawPlayerHearts();\n      };\n    }\n\n    const spawnedDemonBullets = this.demonBulletPool.pool.filter((bullet) => bullet.spawned);\n    const spawnedBossBullets = this.bossBulletPool.pool.filter((bullet) => bullet.spawned);\n    const spawnedBullets = spawnedDemonBullets.concat(spawnedBossBullets);\n    for (let bullIdx = 0; bullIdx < spawnedBullets.length; bullIdx++) {\n      const bullet = spawnedBullets[bullIdx];\n      if (\n        (\n          this.bulletHitsPC(this.player, hitbox, bullet.startPoint)\n          || this.bulletHitsPC(this.player, hitbox, bullet.endPoint)\n        ) && this.player.invincibilityFrames <= 0\n      ) {\n        this.player.isHit();\n        this.field.drawPlayerHearts();\n      };\n    }\n  }\n\n  bulletHitsPC(player, hitbox, bullet) {\n    const newX = hitbox.x - player.pcFieldWidth / 2 + this.fgCanvas.width / 2;\n    const newY = hitbox.y - player.pcFieldHeight / 2 + this.fgCanvas.height / 2;\n    const distanceFromHitboxToBullet = Math.sqrt(\n      Math.pow(newX - bullet.x, 2) + Math.pow(newY - bullet.y, 2)\n    );\n\n    return distanceFromHitboxToBullet <= hitbox.radius;\n  }\n\n  checkDemonCollision(spawnedPCBullets) {\n    const spawnedlvl1Demons = this.lvl1DemonPool.pool.filter((demon) => demon.spawned);\n    const spawnedlvl2Demons = this.lvl2DemonPool.pool.filter((demon) => demon.spawned);\n    const spawnedlvl3Demons = this.lvl3DemonPool.pool.filter((demon) => demon.spawned);\n    const spawnedDemons = spawnedlvl1Demons.concat(spawnedlvl2Demons).concat(spawnedlvl3Demons);\n\n    for (let demonIdx = 0; demonIdx < spawnedDemons.length; demonIdx++) {\n      const demon = spawnedDemons[demonIdx];\n      for (let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n        const bullet = spawnedPCBullets[bullIdx];\n        const drawPoint = demon.drawPoint;\n        if (\n          (\n            this.pcBulletHitsObject(demon, drawPoint, bullet.startPoint)\n            || this.pcBulletHitsObject(demon, drawPoint, bullet.endPoint)\n          ) && demon.invincibilityFrames <= 0\n        ) {\n          demon.isHit();\n          let points = 0;\n          switch (demon.type) {\n            case 'bossDemon':\n              points = demon.life > 0 ? 50 : 500;\n              break;\n            case 'faceDemon':\n              points = 150;\n              break;\n            default:\n              points = 100;\n              break;\n          }\n          this.field.updatePlayerScore(points);\n        };\n      }\n    }\n  }\n\n  checkHpCollision(spawnedPCBullets) {\n    const spawnedHp = this.pickupsPool.pool.filter((pickup) => (\n      pickup.type === 'hp' && pickup.spawned\n    ));\n\n    for (let hpIdx = 0; hpIdx < spawnedHp.length; hpIdx++) {\n      const hp = spawnedHp[hpIdx];\n      for (let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n        const bullet = spawnedPCBullets[bullIdx];\n        const drawPoint = hp.drawPoint;\n        if (\n          (\n            this.pcBulletHitsObject(hp, drawPoint, bullet.startPoint)\n            || this.pcBulletHitsObject(hp, drawPoint, bullet.endPoint)\n          ) && hp.invincibilityFrames <= 0\n        ) {\n          if (this.player.life < 3) {\n            this.player.isHealed();\n            hp.isHit();\n            this.field.drawPlayerHearts();\n          }\n        };\n      }\n    }\n  }\n\n  pcBulletHitsObject(object, drawPoint, bullet) {\n    return (\n      (drawPoint.x <= bullet.x && bullet.x <= drawPoint.x + object.width)\n      && (drawPoint.y <= bullet.y && bullet.y <= drawPoint.y + object.height)\n    )\n  }\n\n  checkGameOver() {\n    if (this.player.life <= 0) {\n      this.paused = true;\n      this.removeSpawnTimers();\n      this.gameStatus = 'over';\n      this.field.updateGameStatus(this.gameStatus);\n      this.drawStartScreen();\n    };\n  }\n\n  buttonDown() {\n    // let gamepads = navigator.getGamepads ? navigator.getGamepads() :\n    //   (navigator.webkitGetGamepads ? navigator.webkitGetGamepads : []);\n\n    if (\n      navigator.getGamepads()[0].buttons[14].pressed\n      || navigator.getGamepads()[0].axes[0] < -0.1\n    ) {\n      KEY_STATUS[KEY_MAP['controllerLeft']] = true;\n    }\n    if (\n      navigator.getGamepads()[0].buttons[15].pressed\n      || navigator.getGamepads()[0].axes[0] > 0.1\n    ) {\n      KEY_STATUS[KEY_MAP['controllerRight']] = true;\n    };\n    if (\n      navigator.getGamepads()[0].buttons[0].pressed\n      || navigator.getGamepads()[0].buttons[1].pressed\n      || navigator.getGamepads()[0].buttons[2].pressed\n      || navigator.getGamepads()[0].buttons[3].pressed\n      || navigator.getGamepads()[0].buttons[4].pressed\n      || navigator.getGamepads()[0].buttons[5].pressed\n    ) {\n      KEY_STATUS[KEY_MAP['controllerFire']] = true;\n    };\n  }\n\n  buttonUp() {\n    // let gamepads = navigator.getGamepads ? navigator.getGamepads() :\n    //   (navigator.webkitGetGamepads ? navigator.webkitGetGamepads : []);\n\n    if (!navigator.getGamepads()[0].buttons[14].pressed) {\n      KEY_STATUS[KEY_MAP['controllerLeft']] = false;\n    }\n    if (!navigator.getGamepads()[0].buttons[15].pressed) {\n      KEY_STATUS[KEY_MAP['controllerRight']] = false;\n    };\n    if (\n      !navigator.getGamepads()[0].buttons[0].pressed\n      && !navigator.getGamepads()[0].buttons[1].pressed\n      && !navigator.getGamepads()[0].buttons[2].pressed\n      && !navigator.getGamepads()[0].buttons[3].pressed\n      && !navigator.getGamepads()[0].buttons[4].pressed\n      && !navigator.getGamepads()[0].buttons[5].pressed\n    ) {\n      KEY_STATUS[KEY_MAP['controllerFire']] = false;\n    };\n  }\n\n  keydown(e) {\n    const keyCode = e.which || e.keyCode || 0;\n    if (keyCode === 13 && this.gameStatus !== 'playing') {\n      this.newGame();\n    }\n    if (keyCode === 77) {\n      this.clickMute();\n    }\n    if (keyCode === 80) {\n      this.clickPause();\n    }\n    if (KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = true;\n    }\n  }\n\n  keyup(e) {\n    const keyCode = e.which || e.keyCode || 0;\n    if (KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = false;\n    }\n  }\n\n  handleStart(e, boundingRect) {\n    e.preventDefault();\n    const touches = e.changedTouches;\n    for (let i = 0; i < touches.length; i++) {\n      const touch = touches[i];\n      const posX = touch.pageX - boundingRect.left;\n      const posY = touch.pageY - boundingRect.top;\n\n      if (\n        this.movementDirection === 'standard' && this.firePosition === 'standard'\n      ) {\n        if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if ((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      } else if (\n        this.movementDirection === 'inverted' && this.firePosition === 'standard'\n      ) {\n        if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if ((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      } else if (\n        this.movementDirection === 'standard' && this.firePosition === 'inverted'\n      ) {\n        if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if ((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      } else if (\n        this.movementDirection === 'inverted' && this.firePosition === 'inverted'\n      ) {\n        if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if ((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      };\n\n      this.ongoingTouches.push(this.copyTouch(touches[i], posX, posY));\n    };\n  }\n\n  handleEnd(e, boundingRect) {\n    e.preventDefault();\n    const touches = e.changedTouches;\n    for (let i = 0; i < touches.length; i++) {\n      const touch = touches[i];\n      const posX = touch.pageX - boundingRect.left;\n      const posY = touch.pageY - boundingRect.top;\n\n      if (\n        this.movementDirection === 'standard' && this.firePosition === 'standard'\n      ) {\n        if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if ((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      } else if (\n        this.movementDirection === 'inverted' && this.firePosition === 'standard'\n      ) {\n        if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if ((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      } else if (\n        this.movementDirection === 'standard' && this.firePosition === 'inverted'\n      ) {\n        if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if ((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      } else if (\n        this.movementDirection === 'inverted' && this.firePosition === 'inverted'\n      ) {\n        if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if ((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      };\n\n      const touchIdx = this.ongoingTouchIndexById(touch.identifier);\n      this.ongoingTouches.splice(touchIdx, 1);\n    };\n  }\n\n  copyTouch(touch, posX, posY) {\n    return {\n      identifier: touch.identifier,\n      posX,\n      posY,\n    };\n  }\n\n  ongoingTouchIndexById(idToFind) {\n    for (let i = 0; i < this.ongoingTouches.length; i++) {\n      const id = this.ongoingTouches[i].identifier;\n      if (id == idToFind) {\n        return i\n      };\n    }\n    return -1; // not found\n  }\n\n  statsCanvasCheckClick(e, boundingRect) {\n    e.preventDefault();\n    const clickPosX = e.clientX - boundingRect.left;\n    const clickPosY = e.clientY - boundingRect.top;\n\n    if (\n      (530 <= clickPosX && clickPosX <= 630)\n      && (10 <= clickPosY && clickPosY <= 40)\n    ) {\n      this.clickMute();\n    } else if (\n      (650 <= clickPosX && clickPosX <= 750)\n      && (10 <= clickPosY && clickPosY <= 40)\n    ) {\n      this.clickPause();\n    }\n  }\n\n  optsCanvasCheckClick(e, boundingRect) {\n    e.preventDefault();\n    const clickPosX = e.clientX - boundingRect.left;\n    const clickPosY = e.clientY - boundingRect.top;\n\n    if (\n      (240 <= clickPosX && clickPosX <= 560)\n      && (165 <= clickPosY && clickPosY <= 200)\n    ) {\n      this.swapMovementDirection();\n    } else if (\n      (300 <= clickPosX && clickPosX <= 505)\n      && (385 <= clickPosY && clickPosY <= 472)\n    ) {\n      if (this.gameStatus === 'unbegun') {\n        this.startRound();\n      } else if (this.gameStatus === 'playing') {\n        this.clickPause();\n      } else if (this.gameStatus === 'over') {\n        this.newGame();\n      }\n    } else if (\n      (20 <= clickPosX && clickPosX <= 170)\n      && (410 <= clickPosY && clickPosY <= 490)\n    ) {\n      this.gamePadToggle = this.gamePadToggle ? false : true;\n      this.field.drawGamePadToggleButton();\n    } else if (\n      (290 <= clickPosX && clickPosX <= 515)\n      && (255 <= clickPosY && clickPosY <= 290)\n      && this.isMobile === true\n    ) {\n      this.moveFireButton();\n    }\n  }\n\n  clickMute() {\n    if (this.muted === true) {\n      this.muted = false;\n      this.AssetStore.backgroundMusic.volume = 0.25;\n    } else {\n      this.muted = true;\n      this.AssetStore.backgroundMusic.volume = 0;\n    }\n\n    this.field.updateMuteButton(this.muted);\n  }\n\n  clickPause() {\n    if (this.paused && this.gameStatus === 'playing') {\n      this.paused = false;\n      this.resumeSpawnTimers();\n      this.field.clearOptsContext();\n      this.optsCanvas.canvas.classList.add('hidden');\n      this.play();\n    } else if (!this.paused && this.gameStatus === 'playing') {\n      this.paused = true;\n      this.pauseSpawnTimers();\n      this.drawStartScreen();\n    };\n  }\n\n  newGame() {\n    this.field.clearAllContexts();\n    this.setupNewGame();\n    this.setupNewField();\n    this.field.drawStatusBar();\n    this.startRound();\n  }\n\n  swapMovementDirection() {\n    if (this.movementDirection === 'standard') {\n      this.movementDirection = 'inverted';\n      KEY_MAP[74] = 'right';\n      KEY_MAP[76] = 'left';\n      KEY_MAP[68] = 'left';\n      KEY_MAP[65] = 'right';\n      KEY_MAP[39] = 'left';\n      KEY_MAP[37] = 'right';\n    } else {\n      this.movementDirection = 'standard';\n      KEY_MAP[74] = 'left';\n      KEY_MAP[76] = 'right';\n      KEY_MAP[68] = 'right';\n      KEY_MAP[65] = 'left';\n      KEY_MAP[39] = 'right';\n      KEY_MAP[37] = 'left';\n    }\n\n    this.field.updateMovementDirection(this.movementDirection);\n    this.drawStartScreen();\n  }\n\n  moveFireButton() {\n    if (this.firePosition === 'standard') {\n      this.firePosition = 'inverted';\n    } else {\n      this.firePosition = 'standard';\n    }\n    this.field.updateFirePosition(this.firePosition);\n    this.drawStartScreen();\n  }\n\n  mapGamePadButtons(e) {\n    KEY_MAP['controllerFire'] = 'fire';\n    KEY_MAP['controllerLeft'] = 'left';\n    KEY_MAP['controllerRight'] = 'right';\n    KEY_STATUS['controllerFire'] = false;\n    KEY_STATUS['controllerLeft'] = false;\n    KEY_STATUS['controllerRight'] = false;\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const foregroundCanvas = document.getElementById(\"foreground-canvas\");\n  const playerCanvas = document.getElementById(\"player-canvas\");\n  const statsCanvas = document.getElementById(\"stats-canvas\");\n  const optionsCanvas = document.getElementById(\"options-canvas\");\n  const mobileCanvas = null;\n\n  if (\n    (typeof window.orientation !== \"undefined\")\n    || (navigator.userAgent.indexOf('IEMobile') !== -1)\n  ) {\n    mobileCanvas = document.createElement(\"canvas\");\n    mobileCanvas.id = \"mobile-canvas\";\n    mobileCanvas.width = \"800\";\n    mobileCanvas.height = \"500\";\n    document.getElementsByClassName(\"game-area\")[0].appendChild(mobileCanvas);\n  };\n\n  new Game(\n    foregroundCanvas,\n    statsCanvas,\n    playerCanvas,\n    optionsCanvas,\n    mobileCanvas,\n  );\n});\n"],"names":["ObjectPool","_createClass","size","_classCallCheck","this","pool","key","value","objectData","spawned","spawn","unshift","pop","type","i","draw","BulletPool","resetable","setDefaultValues","push","splice","Sprite","context","image","srcWidth","srcHeight","srcX","srcY","bind","drawPointX","drawPointY","drawImage","AssetStore","game","_this","backgroundMusic","Audio","loop","volume","load","checkReadyState","checkAudio","window","setInterval","mouthDemon","Image","width","height","eyeDemon","faceDemon","bossDemon","heart","hp","numAssets","numLoaded","onload","assetLoaded","src","readyState","clearInterval","startGame","Timer","callback","delay","timerId","start","remaining","pause","clearTimeout","Date","resume","setTimeout","clear","getRandNum","min","max","Math","floor","random","_ObjectPool","fgCanvas","bullet","Bullet","_inherits","ctx","ctxWidth","ctxHeight","resetX","resetY","bulletData","pathAngle","theta","startRadius","endRadius","speed","startPoint","computePoint","endPoint","y","x","startX","startY","clearRect","radius","cos","xOffset","sin","yOffset","DemonPool","demons","length","demon","Demon","storedAsset","sprite","drawPoint","computeDrawPoint","abs","endSpeed","invincibilityFrames","hurtSprite","chanceToFire","fireThreshold","fire","life","get","thetaMultiplier","speedMultiplier","PI","Field","fgCanvasObj","statsCanvasObj","pcCanvasObj","optsCanvasObj","demonBulletPool","bossBulletPool","pcBulletPool","lvl1DemonPool","lvl2DemonPool","lvl3DemonPool","pickupsPool","player","movementDirection","gameStatus","mobileCanvasObj","firePosition","statsCanvas","pcCanvas","optsCanvas","mobileCanvas","lastTime","now","playerScore","newDirection","newPosition","primaryText","secondaryText","setupStartScreen","text","drawStartScreenMessage","drawControls","drawMobileControls","canvas","classList","remove","clearOptsContext","fillStyle","fillRect","strokeStyle","strokeRect","font","fillText","concat","cw","ccw","desc1X","desc1Y","desc2X","desc2Y","circleX","circleY","drawSwapMovementButton","beginPath","arc","lineWidth","stroke","moveTo","lineTo","drawGamePadToggleButton","firePos","descX","descY","drawSwapFireButton","gamePadConnected","gamePadToggle","undrawFGContext","clearPCContext","updatePlayerCharge","drawPlayerRails","drawPlayerHearts","points","fireCharge","muted","shape","xCenter","yCenter","clearFGContext","clearStatsContext","pickups","PickupsPool","pickup","Pickup","Player","pcFieldWidth","pcFieldHeight","velocity","acceleration","maxSpeed","fireCooldown","invincibilityColor","portTheta","starboardTheta","bowTheta","computeAllVerticies","portVertex","computePortVertex","starboardVertex","computeStarboardVertex","bowVertex","computeCenterPoints","hitboxCenter","keyStatus","left","right","fill","KEY_MAP","touchLeft","touchRight","touchFire","KEY_STATUS","code","Game","getContext","isMobile","play","startRound","optsCanvasCheckClick","statsCanvasCheckClick","nextHpSpawnScore","nextBossSpawnScore","drawLoadingScreen","setupEventListners","setupNewGame","setupNewField","document","addEventListener","keydown","keyup","e","getBoundingClientRect","handleStart","handleEnd","handleCancel","ongoingTouches","mapGamePadButtons","setupDemonPools","paused","field","drawStatusBar","drawStartScreen","drawMobileStartScreen","drawStandardStartScreen","_this2","lvl1Timer","spawnLvl1Demons","lvl2Timer","spawnLvl2Demons","add","updateGameStatus","startTime","_this3","checkGameOver","checkCollisions","buttonDown","move","buttonUp","checkLevel1Demons","spawnLvl3Demons","spawnHp","render","requestAnimationFrame","spawnedLvl1","_this4","maxDemons","getMaxDemons","toGet","_this5","spawnedLvl2","spawnedLvl3","spawnedHp","level","spawnedPCBullets","filter","checkPlayerCollision","checkDemonCollision","checkHpCollision","hitbox","bullIdx","bulletHitsPC","isHit","spawnedDemonBullets","spawnedBossBullets","spawnedBullets","newX","newY","sqrt","pow","spawnedlvl1Demons","spawnedlvl2Demons","spawnedlvl3Demons","spawnedDemons","demonIdx","pcBulletHitsObject","updatePlayerScore","hpIdx","isHealed","object","removeSpawnTimers","navigator","getGamepads","buttons","pressed","axes","keyCode","which","newGame","clickMute","clickPause","preventDefault","boundingRect","touches","changedTouches","touch","posX","pageX","posY","pageY","top","copyTouch","touchIdx","ongoingTouchIndexById","identifier","idToFind","clickPosX","clientX","clickPosY","clientY","swapMovementDirection","moveFireButton","updateMuteButton","resumeSpawnTimers","pauseSpawnTimers","clearAllContexts","updateMovementDirection","updateFirePosition","foregroundCanvas","getElementById","playerCanvas","optionsCanvas","orientation","userAgent","indexOf","createElement","_readOnlyError","id","getElementsByClassName","appendChild"],"sourceRoot":""}