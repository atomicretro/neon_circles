{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://neon_circles/./scripts/utilities.js","webpack://neon_circles/./scripts/field.js","webpack://neon_circles/./scripts/player.js","webpack://neon_circles/./scripts/demon.js","webpack://neon_circles/./scripts/bullet.js","webpack://neon_circles/./scripts/game.js"],"sourcesContent":["export class ObjectPool {\n  constructor(size) {\n    this.size = size;\n    this.pool = [];\n  }\n\n  get(objectData) {\n    if(!this.pool[this.size - 1].spawned) {\n      this.pool[this.size - 1].spawn(objectData);\n      this.pool.unshift(this.pool.pop());\n    }\n  }\n\n  draw(type) {\n    for(let i = 0; i < this.size; i++) {\n      if(this.pool[i].spawned) {\n        this.pool[i].draw(this.BulletPool);\n        if(this.pool[i].resetable()) {\n          this.pool[i].setDefaultValues(type);\n          this.pool.push((this.pool.splice(i, 1))[0]);\n        }\n      } else {\n          break;\n      }\n    }\n  }\n};\n\nexport class Sprite {\n  constructor(context, image, srcWidth, srcHeight, srcX, srcY) {\n    this.context = context;\n    this.image = image;\n    this.srcWidth = srcWidth;\n    this.srcHeight = srcHeight;\n    this.srcX = srcX;\n    this.srcY = srcY;\n\n    this.draw = this.draw.bind(this);\n  }\n\n  draw(drawPointX, drawPointY) {\n    this.context.drawImage(\n      this.image,\n      this.srcX,\n      this.srcY,\n      this.srcWidth,\n      this.srcHeight,\n      drawPointX,\n      drawPointY,\n      this.srcWidth,  // drawn image width, same as src\n      this.srcHeight  // drawn image height, same as src\n    )\n  }\n};\n\nexport class AssetStore {\n  constructor(game) {\n    this.game = game;\n\n    this.backgroundMusic = new Audio(\"assets/sounds/background_music.mp3\");\n    this.backgroundMusic.loop = true;\n    this.backgroundMusic.volume = 0.25;\n    this.backgroundMusic.load();\n    this.checkReadyState = this.checkReadyState.bind(this);\n    this.checkAudio = window.setInterval(() => {this.checkReadyState()}, 1000);\n\n    this.mouthDemon = {\n      image: new Image(),\n      width: 30,\n      height: 30,\n      srcX: 0,\n      srcY: 0\n    }\n    this.eyeDemon = {\n      image: new Image(),\n      width: 30,\n      height: 30,\n      srcX: 0,\n      srcY: 0\n    }\n    this.faceDemon = {\n      image: new Image(),\n      width: 30,\n      height: 40,\n      srcX: 0,\n      srcY: 0\n    }\n    this.faceDemonHurt = {\n      image: new Image(),\n      width: 30,\n      height: 40,\n      srcX: 0,\n      srcY: 0\n    }\n    this.bossDemon = {\n      image: new Image(),\n      width: 50,\n      height: 54,\n      srcX: 0,\n      srcY: 0\n    }\n    this.heart = { image: new Image() }\n\n    this.numAssets = 7;\n    this.numLoaded = 0;\n\n    this.mouthDemon.image.onload = () => { this.assetLoaded(); }\n    this.eyeDemon.image.onload = () => { this.assetLoaded(); }\n    this.faceDemon.image.onload = () => { this.assetLoaded(); }\n    this.faceDemonHurt.image.onload = () => { this.assetLoaded(); }\n    this.bossDemon.image.onload = () => { this.assetLoaded(); }\n    this.heart.image.onload = () => { this.assetLoaded(); }\n\n    this.mouthDemon.image.src = 'assets/sprites/mouth_demon.png';\n    this.eyeDemon.image.src = 'assets/sprites/eye_demon.png';\n    this.faceDemon.image.src = 'assets/sprites/face_demon.png';\n    this.faceDemonHurt.image.src = 'assets/sprites/face_demon_hurt.png';\n    this.bossDemon.image.src = 'assets/sprites/boss_demon.png';\n    this.heart.image.src = 'assets/sprites/heart.png';\n  }\n\n  checkReadyState() {\n    if(this.backgroundMusic.readyState === 4) {\n      window.clearInterval(this.checkAudio);\n      this.assetLoaded();\n    }\n  }\n\n  assetLoaded() {\n    this.numLoaded++;\n    if(this.numLoaded === this.numAssets) this.game.startGame();\n  }\n};\n\nexport function Timer(callback, delay) {\n    var timerId, start, remaining = delay;\n\n    this.pause = () => {\n      window.clearTimeout(timerId);\n      remaining -= new Date() - start;\n    };\n\n    this.resume = () => {\n      start = new Date();\n      window.clearTimeout(timerId);\n      timerId = window.setTimeout(callback, remaining);\n    };\n\n    this.clear = () => {\n      window.clearTimeout(timerId);\n    };\n\n    this.resume();\n}\n","import { AssetStore, Sprite } from './utilities';\n\nclass Field {\n  constructor(\n    fgCanvasObj,\n    statsCanvasObj,\n    pcCanvasObj,\n    optsCanvasObj,\n    AssetStore,\n    demonBulletPool,\n    pcBulletPool,\n    lvl1DemonPool,\n    lvl2DemonPool,\n    player,\n    movementDirection,\n    gameStatus,\n    mobileCanvasObj,\n    firePosition\n  ) {\n    this.fgCanvas = fgCanvasObj;\n    this.statsCanvas = statsCanvasObj;\n    this.pcCanvas = pcCanvasObj;\n    this.optsCanvas = optsCanvasObj;\n    this.mobileCanvas = mobileCanvasObj;\n\n    this.AssetStore = AssetStore;\n    this.demonBulletPool = demonBulletPool;\n    this.pcBulletPool = pcBulletPool;\n    this.lvl1DemonPool = lvl1DemonPool;\n    this.lvl2DemonPool = lvl2DemonPool;\n\n    this.player = player;\n    this.movementDirection = movementDirection;\n    this.firePosition = firePosition;\n    this.gameStatus = gameStatus;\n\n    this.lastTime = Date.now;\n    this.playerScore = 0;\n    this.heart = new Sprite(\n      this.statsCanvas.ctx,\n      this.AssetStore.heart.image,\n      13, 13, 0, 0\n    );\n  }\n\n  updateMovementDirection(newDirection) {\n    this.movementDirection = newDirection;\n  }\n\n  updateFirePosition(newPosition) {\n    this.firePosition = newPosition;\n  }\n\n  updateGameStatus(gameStatus) {\n    this.gameStatus = gameStatus;\n  }\n\n  drawStandardStartScreen() {\n    this.setupStartScreen();\n\n    let primaryText;     // clockwise\n    let secondaryText;    // counterclockwise\n    if(this.gameStatus === 'over') {\n      primaryText = {\n        text: \"GAME OVER\", size: \"36px\", x: 285, y: 70\n      };\n      secondaryText = {\n        text: \"fight! fight! don't let demons win!\", size: \"22px\", x: 176, y: 105\n      };\n    } else {\n      primaryText = {\n        text: \"SHOOT ALL DEMONS!\", size: \"36px\", x: 207, y: 70\n      };\n      secondaryText = {\n        text: \"careful! demon power is strong!\", size: \"22px\", x: 182, y: 105\n      };\n    };\n    this.drawStartScreenMessage(primaryText, secondaryText);\n\n    let cw;     // clockwise\n    let ccw;    // counterclockwise\n    if(this.movementDirection === 'standard') {\n      ccw = { descX: 70,\n            circleX: 160 };\n      cw = { descX: 590, circleX: -640 };\n    } else {\n      ccw = { descX: 545, circleX: 640 };\n      cw = { descX: 109, circleX: -160 };\n    };\n    this.drawControls();\n\n    // for checking centeredness of start screen items\n    // this.optsCanvas.ctx.beginPath();\n    // this.optsCanvas.ctx.moveTo(20,410);\n    // this.optsCanvas.ctx.lineTo(20,490);\n    // this.optsCanvas.ctx.stroke();\n    // this.optsCanvas.ctx.beginPath();\n    // this.optsCanvas.ctx.moveTo(170,410);\n    // this.optsCanvas.ctx.lineTo(170,490);\n    // this.optsCanvas.ctx.stroke();\n  }\n\n  drawMobileStartScreen() {\n    this.setupStartScreen();\n\n    let primaryText;\n    let secondaryText;\n    if(this.gameStatus === 'over') {\n      primaryText = {\n        text: \"GAME OVER\", size: \"36px\", x: 285, y: 70\n      };\n      secondaryText = {\n        text: \"fight! fight! don't let demons win!\", size: \"19px\", x: 204, y: 105\n      };\n    } else {\n      primaryText = {\n        text: \"SHOOT ALL DEMONS!\", size: \"34px\", x: 212, y: 70\n      };\n      secondaryText = {\n        text: \"careful! demon power is strong!\", size: \"20px\", x: 202, y: 105\n      };\n    };\n    this.drawStartScreenMessage(primaryText, secondaryText);\n\n    this.drawMobileControls();\n  }\n\n  setupStartScreen() {\n    this.optsCanvas.canvas.classList.remove('hidden');\n    this.clearOptsContext();\n    this.optsCanvas.ctx.fillStyle = \"rgba(0, 0, 0, 0.8\";\n    this.optsCanvas.ctx.fillRect(0,0,800,500);\n\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n    this.optsCanvas.ctx.strokeRect(300,385,205,87);\n    this.optsCanvas.ctx.font = \"60px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"PLAY\", 320, 450);\n  }\n\n  drawStartScreenMessage(primaryText, secondaryText) {\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.font = `${primaryText.size} sf_alien_encountersitalic`;\n    this.optsCanvas.ctx.fillText(\n      primaryText.text, primaryText.x, primaryText.y);\n    this.optsCanvas.ctx.font = `${secondaryText.size} sf_alien_encountersitalic`;\n    this.optsCanvas.ctx.fillText(\n      secondaryText.text, secondaryText.x, secondaryText.y\n    );\n  }\n\n  drawControls() {\n    let cw;     // clockwise\n    let ccw;    // counterclockwise\n    if(this.movementDirection === 'standard') {\n      ccw = {\n        desc1X: 70, desc1Y: 250,\n        desc2X: 90, desc2Y: 280,\n        circleX: 160, circleY: 190\n      };\n      cw = {\n        desc1X: 590, desc1Y: 250,\n        desc2X: 566, desc2Y: 280,\n        circleX: -640, circleY: 190\n      };\n    } else {\n      ccw = {\n        desc1X: 545, desc1Y: 250,\n        desc2X: 90, desc2Y: 280,\n        circleX: 640, circleY: 190\n      };\n      cw = {\n        desc1X: 109, desc1Y: 250,\n        desc2X: 566, desc2Y: 280,\n        circleX: -160, circleY: 190\n      };\n    };\n\n    this.drawSwapMovementButton();\n\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"counterclockwise\", ccw.desc1X, ccw.desc1Y);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"a   j   left\", ccw.desc2X, ccw.desc2Y);\n\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(\n      ccw.circleX, ccw.circleY, 30, Math.PI / 2, Math.PI, true\n    );\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo(Math.abs(ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(ccw.circleX - 20), (ccw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo(Math.abs(ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(ccw.circleX - 35), (ccw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"clockwise\", cw.desc1X, cw.desc1Y);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"d   l   right\", cw.desc2X, cw.desc2Y);\n\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(\n      Math.abs(cw.circleX), cw.circleY, 30,Math.PI/2, 0, false\n    );\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo(Math.abs(cw.circleX - 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(cw.circleX - 20), (cw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo(Math.abs(cw.circleX - 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(cw.circleX - 35), (cw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n\n    this.optsCanvas.ctx.font = \"24px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\n      \"SPACE TO FIRE WHEN POWER IS FULL!\", 148, 340\n    );\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo(148,347);\n    this.optsCanvas.ctx.lineTo(650,347);\n    this.optsCanvas.ctx.stroke();\n\n    this.drawGamePadToggleButton();\n\n    this.optsCanvas.ctx.font = \"12px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"m to mute!\", 705, 440);\n    this.optsCanvas.ctx.fillText(\"p to pause!\", 700, 460);\n    if(this.gameStatus !== 'playing') {\n      this.optsCanvas.ctx.fillText(\"enter to start!\", 670, 480);\n    }\n  }\n\n  drawMobileControls() {\n    let cw;     // clockwise\n    let ccw;    // counterclockwise\n    let firePos;\n    if(\n      this.movementDirection === 'standard' && this.firePosition === 'standard'\n    ) {\n      ccw = { descX: 5, descY: 185, circleX: 100, circleY: 125 };\n      cw = { descX: 45, descY: 405, circleX: 100, circleY: 345 };\n      firePos = { x: 650, y: 265 };\n      this.optsCanvas.ctx.strokeStyle = \"white\";\n      this.optsCanvas.ctx.strokeRect(2,2,196,246);\n      this.optsCanvas.ctx.strokeRect(2,252,196,246);\n      this.optsCanvas.ctx.strokeRect(602,2,196,496);\n    } else if(\n      this.movementDirection === 'inverted' && this.firePosition === 'standard'\n    ) {\n      ccw = { descX: 5, descY: 405, circleX: 100, circleY: 345 };\n      cw = { descX: 45, descY: 185, circleX: 100, circleY: 125 };\n      firePos = { x: 650, y: 265 };\n      this.optsCanvas.ctx.strokeStyle = \"white\";\n      this.optsCanvas.ctx.strokeRect(2,2,196,246);\n      this.optsCanvas.ctx.strokeRect(2,252,196,246);\n      this.optsCanvas.ctx.strokeRect(602,2,196,496);\n    } else if(\n      this.movementDirection === 'standard' && this.firePosition === 'inverted'\n    ) {\n      ccw = { descX: 605, descY: 185, circleX: 700, circleY: 125 };\n      cw = { descX: 645, descY: 405, circleX: 700, circleY: 345 };\n      firePos = { x: 43, y: 265 };\n      this.optsCanvas.ctx.strokeStyle = \"white\";\n      this.optsCanvas.ctx.strokeRect(602,2,196,246);\n      this.optsCanvas.ctx.strokeRect(602,252,196,246);\n      this.optsCanvas.ctx.strokeRect(2,2,196,496);\n    } else if(\n      this.movementDirection === 'inverted' && this.firePosition === 'inverted'\n    ) {\n      ccw = { descX: 605, descY: 405, circleX: 700, circleY: 345 };\n      cw = { descX: 645, descY: 185, circleX: 700, circleY: 125 };\n      firePos = { x: 43, y: 265 };\n      this.optsCanvas.ctx.strokeRect(602,2,196,246);\n      this.optsCanvas.ctx.strokeRect(602,252,196,246);\n      this.optsCanvas.ctx.strokeRect(2,2,196,496);\n    };\n\n    this.drawSwapMovementButton();\n    this.drawSwapFireButton();\n\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n\n    // counterclockwise description titles\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"counterclockwise\", ccw.descX, ccw.descY);\n\n    // fire description titles\n    this.optsCanvas.ctx.font = \"42px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"FIRE!\", firePos.x, firePos.y);\n\n    // clockwise description titles\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"clockwise\", cw.descX, cw.descY);\n\n    // counterclockwise circles\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(ccw.circleX, ccw.circleY, 30, Math.PI / 2, Math.PI, true);\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo((ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo((ccw.circleX - 20), (ccw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo((ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo((ccw.circleX - 35), (ccw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n\n    // clockwise circles\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(cw.circleX, cw.circleY, 30, Math.PI / 2, 0, false);\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo((cw.circleX + 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo((cw.circleX + 20), (cw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo((cw.circleX + 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo((cw.circleX + 35), (cw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n  }\n\n  drawSwapMovementButton() {\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n    this.optsCanvas.ctx.strokeRect(240,165,320,35);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"swap movement direction\", 250, 190);\n  }\n\n  drawSwapFireButton() {\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n    this.optsCanvas.ctx.strokeRect(290,255,225,35);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"move fire button\", 300, 280);\n  }\n\n  drawGamePadToggleButton() {\n    if(this.gamePadConnected) {\n      this.optsCanvas.ctx.clearRect(20,410,150,80);\n      this.optsCanvas.ctx.fillStyle = \"rgba(0, 0, 0, 0.8\";\n      this.optsCanvas.ctx.fillRect(20,410,150,80);\n      this.optsCanvas.ctx.fillStyle = \"white\";\n      this.optsCanvas.ctx.font = \"24px sf_alien_encountersitalic\";\n      if(this.gamePadToggle) this.optsCanvas.ctx.fillText(\"gamepad\", 33, 435);\n      else this.optsCanvas.ctx.fillText(\"keyboard\", 27, 435);\n      this.optsCanvas.ctx.font = \"12px sf_alien_encountersitalic\";\n      this.optsCanvas.ctx.fillText(\"click here to toggle\", 20, 460);\n      this.optsCanvas.ctx.fillText(\"gamepad input!\", 20, 480);\n    };\n  }\n\n  render()  {\n    this.undrawFGContext();\n    this.clearPCContext();\n    this.updatePlayerCharge()\n    this.drawPlayerRails('circle');\n    this.player.draw();\n    this.lvl1DemonPool.draw();\n    this.lvl2DemonPool.draw();\n    this.pcBulletPool.draw('player');\n    this.demonBulletPool.draw();\n  }\n\n  drawStatusBar() {\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(\n      0, 0, this.statsCanvas.width, this.statsCanvas.height\n    );\n\n    // Charge container\n    this.statsCanvas.ctx.strokeStyle = '#6816e0';\n    this.statsCanvas.ctx.strokeRect(352, 30, 97, 13);\n\n    // Player life\n    this.drawPlayerHearts();\n\n    this.statsCanvas.ctx.fillStyle = 'black';\n    this.statsCanvas.ctx.strokeStyle = 'black';\n\n    // Titles\n    this.statsCanvas.ctx.font = \"22px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"SCORE\", 49, 21);\n    this.statsCanvas.ctx.font = \"22px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"LIFE\", 204, 21);\n    this.statsCanvas.ctx.font = \"22px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"POWER\", 351, 21);\n\n    // Player score\n    this.statsCanvas.ctx.font = \"20px Courier\";\n    this.statsCanvas.ctx.fillText(\"0\", 50, 43);\n\n    // Mute / unmute button\n    this.statsCanvas.ctx.lineWidth = 2;\n    this.statsCanvas.ctx.strokeRect(530, 10, 100, 30);\n    this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"MUTE\", 550, 32);\n\n    // Pause button\n    this.statsCanvas.ctx.lineWidth = 2;\n    this.statsCanvas.ctx.strokeRect(650, 10, 100, 30);\n    this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"PAUSE\", 665, 32);\n  }\n\n  drawPlayerHearts() {\n    this.statsCanvas.ctx.clearRect(200, 20, 140, 40);\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(200, 20, 140, 40);\n    for(let i = 0; i < this.player.life; i++) {\n      this.heart.draw(205 + (i * 20), 30)\n    }\n  }\n\n  updatePlayerScore(demon) {\n    if(demon === 'mouthDemon' || demon === 'eyeDemon') this.playerScore += 100;\n    else if(demon === 'faceDemon') this.playerScore += 150;\n    this.statsCanvas.ctx.clearRect(45, 20, 150, 40);\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(45, 20, 150, 40);\n    this.statsCanvas.ctx.fillStyle = 'black';\n    this.statsCanvas.ctx.font = \"20px Courier\";\n    this.statsCanvas.ctx.fillText(`${this.playerScore}`, 50, 43);\n  }\n\n  updatePlayerCharge() {\n    if(this.player.fireCharge === 0) {\n      this.statsCanvas.ctx.clearRect(353, 31, 95, 11);\n      this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n      this.statsCanvas.ctx.fillRect(353, 31, 95, 11);\n    } else if(this.player.fireCharge < 20) {\n      this.statsCanvas.ctx.fillStyle = '#6816e0';\n      this.statsCanvas.ctx.fillRect(353, 31, this.player.fireCharge * 5, 11);\n    }\n  }\n\n  updateMuteButton(muted) {\n    this.statsCanvas.ctx.clearRect(532, 12, 96, 26);\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(532, 12, 96, 26);\n    if(muted === true) {\n      this.statsCanvas.ctx.fillStyle = 'black';\n      this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n      this.statsCanvas.ctx.fillText(\"UNMUTE\", 537, 32);\n    } else {\n      this.statsCanvas.ctx.fillStyle = 'black';\n      this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n      this.statsCanvas.ctx.fillText(\"MUTE\", 550, 32);\n    }\n  }\n\n  drawPlayerRails(shape) {\n    let xCenter = this.pcCanvas.width / 2;\n    let yCenter = this.pcCanvas.height / 2;\n    if(this.player.fireCharge < 20) {\n      this.pcCanvas.ctx.strokeStyle = \"white\";\n    } else {\n      this.pcCanvas.ctx.strokeStyle = \"#6816e0\";\n    }\n\n    switch (shape) {\n      case 'circle':\n      default:\n      this.pcCanvas.ctx.beginPath();\n      this.pcCanvas.ctx.arc(xCenter, yCenter, 60, 0, 2 * Math.PI, true);\n      this.pcCanvas.ctx.lineWidth = 2;\n      this.pcCanvas.ctx.stroke();\n    }\n  }\n\n  undrawFGContext() {\n    this.fgCanvas.ctx.fillStyle = \"rgba(0, 0, 0, 0.1\";\n    this.fgCanvas.ctx.fillRect(0,0,800,500);\n  }\n\n  clearFGContext() {\n    this.fgCanvas.ctx.clearRect(0,0,this.fgCanvas.width,this.fgCanvas.height);\n  }\n\n  clearStatsContext() {\n    this.statsCanvas.ctx.clearRect(\n      0,0,this.statsCanvas.width,this.statsCanvas.height\n    );\n  }\n\n  clearPCContext() {\n    this.pcCanvas.ctx.clearRect(0,0,this.pcCanvas.width,this.pcCanvas.height);\n  }\n\n  clearOptsContext() {\n    this.optsCanvas.ctx.clearRect(\n      0,\n      0,\n      this.optsCanvas.width,\n      this.optsCanvas.height\n    );\n  }\n\n  clearAllContexts() {\n    this.clearFGContext();\n    this.clearStatsContext();\n    this.clearPCContext();\n  }\n}\n\nexport default Field;\n","class Player {\n  constructor(pcCanvas, BulletPool) {\n    this.ctx = pcCanvas.ctx;\n    this.pcFieldWidth = pcCanvas.width;\n    this.pcFieldHeight = pcCanvas.height;\n    this.BulletPool = BulletPool;\n\n    this.velocity = 0;\n    this.acceleration = 0.015;\n    this.maxSpeed = 0.2;\n    this.radius = 50; // The 'track' the player moves along\n    this.fireCharge = 0;\n    this.fireCooldown = 25;\n    this.invincibilityFrames = 50;\n    this.life = 3;\n\n    this.portTheta = -1.23;\n    this.starboardTheta = 1.9106;\n    this.bowTheta = Math.PI / 2;\n    this.computeAllVerticies();\n\n    this.draw = this.draw.bind(this);\n    this.fire = this.fire.bind(this);\n  }\n\n  computeAllVerticies() {\n    this.portVertex = this.computePortVertex();\n    this.starboardVertex = this.computeStarboardVertex();\n    this.bowVertex = this.computeCenterPoints(-15);\n    this.hitboxCenter = this.computeCenterPoints(-35);\n  }\n\n  computeStarboardVertex() {\n    return ({\n      x: Math.cos(this.starboardTheta) * this.radius + this.pcFieldWidth / 2,\n      y: -Math.sin(this.starboardTheta) * this.radius + this.pcFieldHeight / 2\n    })\n  }\n\n  computePortVertex() {\n    return ({\n      x: Math.cos(this.portTheta) * this.radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.portTheta) * this.radius  + this.pcFieldHeight / 2\n    })\n  }\n\n  computeCenterPoints(radius) {\n    return ({\n      x: Math.cos(this.bowTheta) * radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.bowTheta) * radius  + this.pcFieldHeight / 2\n    })\n  }\n\n  move(keyStatus) {\n    this.fireCharge++; // increments once every frame\n    this.invincibilityFrames++; // increments once every frame\n    if(keyStatus.left) {\n      if(this.velocity <= this.maxSpeed) this.velocity += this.acceleration;\n      this.starboardTheta += this.velocity;\n      this.portTheta -= this.velocity;\n      this.bowTheta -= this.velocity;\n    } else if(keyStatus.right) {\n      if(this.velocity <= this.maxSpeed) this.velocity += this.acceleration;\n      this.starboardTheta -= this.velocity;\n      this.portTheta += this.velocity;\n      this.bowTheta += this.velocity;\n    } else {\n      this.velocity = 0;\n    }\n\n    if(keyStatus.fire && this.fireCharge >= this.fireCooldown) this.fire();\n  }\n\n  fire() {\n    this.fireCharge = 0;\n    let bulletData = {\n      theta: this.bowTheta,\n      startRadius: 12,\n      endRadius: -8,\n      speed: 6\n    }\n    this.BulletPool.get(bulletData);\n  }\n\n  draw() {\n    this.computeAllVerticies();\n    this.ctx.beginPath();\n\n    if(this.invincibilityFrames < 50) this.ctx.fillStyle = 'red';\n    else this.ctx.fillStyle = 'white';\n\n    this.ctx.moveTo(this.starboardVertex.x, this.starboardVertex.y);\n    this.ctx.lineTo(this.portVertex.x, this.portVertex.y);\n    this.ctx.lineTo(this.bowVertex.x, this.bowVertex.y);\n    this.ctx.fill();\n  }\n\n  isHit() {\n    this.life -= 1;\n    this.invincibilityFrames = 0;\n  }\n}\n\nexport default Player;\n","import { Sprite, ObjectPool } from './utilities';\n\nconst getRandNum = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) ) + min;\n};\n\nexport default class DemonPool extends ObjectPool {\n  constructor(demons, ctx, AssetStore, BulletPool) {\n    super(demons.length, ctx);\n    this.BulletPool = BulletPool;\n\n    for (let i = 0; i < demons.length; i++) {\n      let demon = new Demon(ctx, demons[i], AssetStore);\n      this.pool.push(demon);\n    }\n  }\n};\n\nclass Demon {\n  constructor(ctx, type, AssetStore) {\n    this.ctx = ctx;\n    this.type = type;\n\n    let storedAsset = AssetStore[type];\n    this.image = storedAsset.image;\n    this.width = storedAsset.width;\n    this.height = storedAsset.height;\n    this.sprite = new Sprite(\n      ctx,\n      storedAsset.image,\n      this.width,\n      this.height,\n      storedAsset.srcX,\n      storedAsset.srcY\n    );\n    this.setDefaultValues();\n  }\n\n  spawn() {\n    this.drawPoint = this.computeDrawPoint();\n    this.spawned = true;\n  }\n\n  draw(BulletPool) {\n      if(this.type === 'faceDemon') {\n        if(this.radius > this.endRadius) {\n          this.radius -= Math.abs(this.speed * 100);\n        } else {\n          this.speed = this.endSpeed;\n        }\n      };\n\n      this.invincibilityFrames++;\n      this.theta -= this.speed;\n      this.drawPoint = this.computeDrawPoint();\n\n      if(this.type === 'faceDemon' && this.invincibilityFrames < 50) {\n        this.hurtSprite.draw(this.drawPoint.x, this.drawPoint.y);\n      } else {\n        this.sprite.draw(this.drawPoint.x, this.drawPoint.y);\n      }\n\n      this.chanceToFire = Math.floor(Math.random() * 101)\n      if (this.chanceToFire/100 < this.fireThreshold) {\n        this.fire(BulletPool);\n      }\n  }\n\n  resetable() {\n    if(this.life <= 0) return true;\n    return false;\n  }\n\n  computeDrawPoint() {\n    return({\n      x: Math.cos(this.theta) * -this.radius  + 390,\n      y: Math.sin(this.theta) * -this.radius  + 232\n    })\n  }\n\n  clear() {\n    this.ctx.clearRect(\n      this.drawPoint.x - 5,\n      this.drawPoint.y - 5,\n      this.width + 10,\n      this.height + 10\n    );\n  }\n\n  fire(BulletPool) {\n    let bulletData = {\n      theta: this.theta,\n      startRadius: this.radius,\n      endRadius: this.radius - 20,\n      speed: 4,\n      startPoint: {\n        x: this.drawPoint.x + this.width / 2,\n        y: this.drawPoint.y + this.height / 2\n      }\n    };\n    BulletPool.get(bulletData);\n  }\n\n  isHit() {\n    this.life -= 1;\n    this.invincibilityFrames = 0;\n  }\n\n  setDefaultValues() {\n    let thetaMultiplier = Math.random() < 0.5 ? -1 : 1;\n    let speedMultiplier = Math.random() < 0.5 ? -1 : 1;\n\n    if(this.type === 'mouthDemon' || this.type === 'eyeDemon') {\n      this.theta = (Math.PI / 2) * thetaMultiplier;\n      this.speed = (getRandNum(4, 7) / 1000) * speedMultiplier;\n      this.radius = getRandNum(265, 380); // The 'track' the demon moves along\n      this.life = 1;\n      this.fireThreshold = 0.01;\n    } else if(this.type === 'faceDemon') {\n      this.theta = (Math.PI / 2) * thetaMultiplier;\n      this.speed = (getRandNum(6, 9) / 1000) * speedMultiplier;\n      this.endSpeed = this.speed * 2;\n      this.radius = 400;\n      this.endRadius = getRandNum(125, 225);\n      this.life = 2;\n      this.fireThreshold = 0.02;\n      this.hurtSprite = new Sprite(\n        this.ctx,\n        this.image,\n        this.width,\n        this.height,\n        31,\n        0\n      );\n      \n    } else if(this.type === 'bossDemon') {\n      this.speed = 0.4;\n    }\n    this.invincibilityFrames = 50;\n    this.chanceToFire = 0;\n    this.spawned = false;\n    this.drawPoint = {x: 400, y: 250};\n  }\n};\n\n// class MouthDemon extends Demon {\n//   constructor(ctx, type, AssetStore) {\n//     super(ctx, type, AssetStore);\n//   }\n// };\n","import { ObjectPool } from './utilities';\n\nexport default class BulletPool extends ObjectPool {\n  constructor(size, fgCanvas, type) {\n    super(size);\n\n    for(let i = 0; i < size; i++) {\n      let bullet = new Bullet(fgCanvas, type);\n      this.pool.push(bullet);\n    };\n  }\n};\n\nclass Bullet {\n  constructor(fgCanvas, type) {\n    this.ctx = fgCanvas.ctx;\n    this.ctxWidth = fgCanvas.width;\n    this.ctxHeight = fgCanvas.height;\n    this.resetX = fgCanvas.width + 5;\n    this.resetY = fgCanvas.height + 5;\n    this.setDefaultValues(type);\n  }\n\n  spawn(bulletData) {\n    this.pathAngle = bulletData.theta;\n    this.startRadius = bulletData.startRadius;\n    this.endRadius = bulletData.endRadius;\n    this.speed = bulletData.speed;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n    this.spawned = true;\n  }\n\n  draw() {\n    this.startRadius -= this.speed;\n    this.endRadius -= this.speed;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n\n    this.clear();\n  }\n\n  resetable() {\n    if(\n        (this.startPoint.y > -5 || this.endPoint.y > -5) &&\n        (this.startPoint.y < this.resetY || this.endPoint.y < this.resetY) &&\n        (this.startPoint.x > -5 || this.endPoint.x > -5) &&\n        (this.startPoint.x < this.resetX || this.endPoint.x < this.resetX)\n      ) {\n        return false;\n    } else {\n        return true;\n    };\n  }\n\n  clear() {\n    let startX;\n    let startY;\n\n    if(this.startPoint.x > this.endPoint.x) {\n      startX = this.endPoint.x;\n    } else {\n      startX = this.startPoint.x;\n    }\n    if(this.startPoint.y > this.endPoint.y) {\n      startY = this.endPoint.y;\n    } else {\n      startY = this.startPoint.y;\n    }\n\n    this.ctx.clearRect(startX, startY, 16, 16);\n  }\n\n  computePoint(radius) {\n    // create a computeOffset funciton that works on a half circle tilted 45degrees\n    // when pc is on top left of circle drawpoint needs to be in topleft;\n    // when pc is on bottom right of circle drawpoint needs to be in *topleft*\n    return ({\n      x: Math.cos(this.pathAngle) * -radius + this.xOffset - 5,\n      y: Math.sin(this.pathAngle) * -radius + this.yOffset - 5\n    })\n  }\n\n  setDefaultValues(type) {\n    this.xOffset = this.ctxWidth / 2;\n    this.yOffset = this.ctxHeight / 2;\n    this.pathAngle = 0;\n    this.startPoint = {x: 0, y: 0}\n    this.endPoint = {x: 0, y: 0}\n    this.speed = 0;\n    this.spawned = false;\n  }\n};\n","import Field from './field';\nimport Player from './player';\nimport { AssetStore, Sprite, Timer } from './utilities';\nimport DemonPool from './demon';\nimport BulletPool from './bullet';\n\nconst KEY_MAP = {\n  74: 'left',     // j\n  76: 'right',    // l\n  68: 'right',    // d\n  65: 'left',     // a\n  39: 'right',    // left arrow\n  37: 'left',     // right arrow\n  32: 'fire',     // space bar\n  13: 'start',    // enter\n  touchLeft: 'left',\n  touchRight: 'right',\n  touchFire: 'fire'\n};\n\nconst KEY_STATUS = {};\nfor (let code in KEY_MAP) {\n  KEY_STATUS[KEY_MAP[code]] = false;\n}\n\nclass Game {\n  constructor(fgCanvas, statsCanvas, pcCanvas, optsCanvas, mobileCanvas) {\n    this.fgCanvas = {\n      ctx: fgCanvas.getContext(\"2d\"),\n      width: 800,\n      height: 500\n    }\n    this.statsCanvas = {\n      ctx: statsCanvas.getContext(\"2d\"),\n      width: 800,\n      height: 50\n    }\n    this.pcCanvas = {\n      ctx: pcCanvas.getContext(\"2d\"),\n      width: 150,\n      height: 150\n    }\n    this.optsCanvas = {\n      canvas: optsCanvas,\n      ctx: optsCanvas.getContext(\"2d\"),\n      width: 800,\n      height: 500\n    }\n    if(mobileCanvas == null) {\n      this.isMobile = false;\n      this.firePosition = null;\n      this.mobileCanvas = { };\n      } else {\n      this.isMobile = true;\n      this.firePosition = 'standard';\n      this.mobileCanvas = {\n        canvas: mobileCanvas,\n        ctx: mobileCanvas.getContext(\"2d\"),\n        width: 800,\n        height: 500\n      }\n    };\n\n    this.play = this.play.bind(this);\n    this.startRound = this.startRound.bind(this);\n    this.optsCanvasCheckClick = this.optsCanvasCheckClick.bind(this);\n    this.statsCanvasCheckClick = this.statsCanvasCheckClick.bind(this);\n\n    this.AssetStore = new AssetStore(this);\n\n    this.gamePadConnected = false;\n    this.gamePadToggle = false;\n\n    this.lastCalledTime = null;\n\n    this.drawLoadingScreen();\n    this.setupEventListners(fgCanvas, statsCanvas, optsCanvas);\n    this.setupNewGame();\n    this.setupNewField();\n  }\n\n  drawLoadingScreen() {\n    this.optsCanvas.ctx.fillStyle = 'black';\n    this.optsCanvas.ctx.font = \"16px Courier\";\n    this.optsCanvas.ctx.fillText(\"Loading...\", 50,50);\n  }\n\n  setupEventListners(fgCanvas, statsCanvas, optsCanvas) {\n    document.addEventListener('keydown', this.keydown.bind(this));\n    document.addEventListener('keyup', this.keyup.bind(this));\n    optsCanvas.addEventListener('click', (e) => {\n      this.optsCanvasCheckClick(e, optsCanvas.getBoundingClientRect());\n    });\n    statsCanvas.addEventListener('click', (e) => {\n      this.statsCanvasCheckClick(e, statsCanvas.getBoundingClientRect());\n    });\n\n    fgCanvas.addEventListener(\"touchstart\", (e) => {\n      this.handleStart(e, fgCanvas.getBoundingClientRect());\n    }, false);\n    fgCanvas.addEventListener(\"touchend\", (e) => {\n      this.handleEnd(e, fgCanvas.getBoundingClientRect());\n    }, false);\n    fgCanvas.addEventListener(\"touchcancel\", this.handleCancel, false);\n    // fgCanvas.addEventListener(\"touchmove\", this.handleMove, false);\n    this.ongoingTouches = [];\n\n    window.addEventListener(\"gamepadconnected\", (e) => {\n      this.mapGamePadButtons(e);\n      this.gamePadConnected = true;\n    });\n    window.addEventListener(\"gamepaddisconnected\", (e) => {\n      this.gamePadConnected = false;\n      this.gamePadToggle = false;\n    });\n  }\n\n  setupNewGame() {\n    this.demonBulletPool = new BulletPool(3, this.fgCanvas, 'demonBullet');\n    this.pcBulletPool = new BulletPool(4, this.fgCanvas, 'player');\n    this.setupDemonPools();\n    this.player = new Player(this.pcCanvas, this.pcBulletPool);\n    this.movementDirection = 'standard';\n    this.muted = false;\n    this.paused = false;\n    this.gameStatus = 'unbegun';\n  }\n\n  setupDemonPools() {\n    let lvl1Demons = [\n      'mouthDemon', 'mouthDemon', 'mouthDemon',\n      'eyeDemon', 'eyeDemon', 'eyeDemon'\n    ];\n    this.lvl1DemonPool = new DemonPool(\n      lvl1Demons, this.fgCanvas.ctx, this.AssetStore, this.demonBulletPool\n    );\n\n    let lvl2Demons = ['faceDemon', 'faceDemon']\n    this.lvl2DemonPool = new DemonPool(\n      lvl2Demons, this.fgCanvas.ctx, this.AssetStore, this.demonBulletPool\n    );\n  }\n\n  setupNewField() {\n    this.field = new Field(\n      this.fgCanvas,\n      this.statsCanvas,\n      this.pcCanvas,\n      this.optsCanvas,\n      this.AssetStore,\n      this.demonBulletPool,\n      this.pcBulletPool,\n      this.lvl1DemonPool,\n      this.lvl2DemonPool,\n      this.player,\n      this.movementDirection,\n      this.gameStatus,\n      this.mobileCanvas,\n      this.firePosition\n    );\n  }\n\n  startGame() {\n    this.field.drawStatusBar();\n    this.drawStartScreen();\n  }\n\n  drawStartScreen() {\n    if(this.isMobile) this.field.drawMobileStartScreen();\n    else this.field.drawStandardStartScreen();\n  }\n\n  startRound() {\n    this.AssetStore.backgroundMusic.play();\n\n    this.lvl1Timer = new Timer(() => { this.spawnLvl1Demons() }, 5000);\n    this.lvl2Timer = new Timer(() => { this.spawnLvl2Demons() }, 15000);\n\n    this.field.clearOptsContext();\n    this.optsCanvas.canvas.classList.add('hidden');\n    this.gameStatus = 'playing';\n    this.field.updateGameStatus(this.gameStatus);\n    this.startTime = Date.now();\n    this.lastTime = Date.now();\n    this.play();\n  }\n\n  pauseSpawnTimers() {\n    this.lvl1Timer.pause();\n    this.lvl2Timer.pause();\n  }\n\n  resumeSpawnTimers() {\n    this.lvl1Timer.resume();\n    this.lvl2Timer.resume();\n  }\n\n  removeSpawnTimers() {\n    this.lvl1Timer.clear();\n    this.lvl2Timer.clear();\n  }\n\n  play() {\n    this.checkGameOver();\n    this.checkCollisions();\n    if(this.gamePadToggle) this.buttonDown();\n    this.player.move(KEY_STATUS);\n    if(this.gamePadToggle) this.buttonUp();\n\n    let now = Date.now();\n    let dt = (now - this.lastTime) / 1000.0;\n\n    // update(dt);\n    this.checkLevel1Demons();\n    this.field.render();\n\n    if(!this.paused) {\n      setTimeout(() => {\n        this.lastTime = now;\n        requestAnimationFrame(this.play);\n      }, 15);\n    }\n  }\n\n  checkLevel1Demons() {\n    let spawnedLvl1 = 0;\n    for(let i = 0; i < this.lvl1DemonPool.pool.length; i++) {\n      let demon = this.lvl1DemonPool.pool[i];\n      if(demon.type === 'mouthDemon' && demon.spawned) spawnedLvl1++;\n      else if(demon.type === 'eyeDemon' && demon.spawned) spawnedLvl1++;\n    }\n\n    if(spawnedLvl1 < 1) {\n      this.lvl1DemonPool.get('mouthDemon');\n      this.lvl1DemonPool.get('eyeDemon');\n    }\n\n    return spawnedLvl1;\n  }\n\n  spawnLvl1Demons() {\n    let maxDemons = this.getMaxDemons('lvl1');\n    if(this.checkLevel1Demons() < maxDemons) {\n      let toGet = Math.random() < 0.5 ? 'mouthDemon' : 'eyeDemon';\n      this.lvl1DemonPool.get(toGet);\n    };\n\n    this.lvl1Timer = new Timer(() => { this.spawnLvl1Demons() }, 5000);\n  }\n\n  spawnLvl2Demons() {\n    let spawnedLvl2 = 0;\n    for(let i = 0; i < this.lvl2DemonPool.pool.length; i++) {\n      let demon = this.lvl2DemonPool.pool[i];\n      if(demon.type === 'faceDemon' && demon.spawned) spawnedLvl2++;\n    };\n\n    let maxDemons = this.getMaxDemons('lvl2');\n    if(spawnedLvl2 < maxDemons) this.lvl2DemonPool.get('faceDemon');\n\n    this.lvl2Timer = new Timer(() => { this.spawnLvl2Demons() }, 15000);\n  }\n\n  getMaxDemons(level) {\n    if(this.lastTime - this.startTime < 40000) {\n      if(level === 'lvl1') return 4;\n      if(level === 'lvl2') return 1;\n    } else {\n      if(level === 'lvl1') return 6;\n      if(level === 'lvl2') return 2;\n    };\n  }\n\n  checkCollisions() {\n    let spawnedPCBullets = this.pcBulletPool.pool.filter(\n      (bullet) => bullet.spawned );\n    this.checkPlayerCollision(spawnedPCBullets);\n    this.checkDemonCollision(spawnedPCBullets);\n  }\n\n  checkPlayerCollision(spawnedPCBullets) {\n    let spawnedDemonBullets = this.demonBulletPool.pool.filter(\n      (bullet) => bullet.spawned );\n\n    let hitbox = {\n      x: this.player.hitboxCenter.x,\n      y: this.player.hitboxCenter.y,\n      radius: 12\n    }\n\n    for(let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n      let bullet = spawnedPCBullets[bullIdx];\n      if(\n        (this.bulletHitsPC(this.player, hitbox, bullet.startPoint) ||\n        this.bulletHitsPC(this.player, hitbox, bullet.endPoint)) &&\n        this.player.invincibilityFrames > 50\n      ) {\n        this.player.isHit();\n        this.field.drawPlayerHearts();\n      };\n    }\n\n    for(let bullIdx = 0; bullIdx < spawnedDemonBullets.length; bullIdx++) {\n      let bullet = spawnedDemonBullets[bullIdx];\n      if(\n        (this.bulletHitsPC(this.player, hitbox, bullet.startPoint) ||\n        this.bulletHitsPC(this.player, hitbox, bullet.endPoint)) &&\n        this.player.invincibilityFrames > 50\n      ) {\n        this.player.isHit();\n        this.field.drawPlayerHearts();\n      };\n    }\n  }\n\n  bulletHitsPC(player, hitbox, bullet) {\n    let newX = hitbox.x - player.pcFieldWidth / 2 + this.fgCanvas.width / 2;\n    let newY = hitbox.y - player.pcFieldHeight / 2 + this.fgCanvas.height / 2;\n    let distanceFromHitboxToBullet =\n      Math.sqrt(\n        Math.pow(newX - bullet.x, 2) + Math.pow(newY - bullet.y, 2)\n      );\n\n    return distanceFromHitboxToBullet <= hitbox.radius\n  }\n\n  checkDemonCollision(spawnedPCBullets) {\n    let spawnedlvl1Demons = this.lvl1DemonPool.pool.filter(\n      (demon) => demon.spawned );\n    let spawnedlvl2Demons = this.lvl2DemonPool.pool.filter(\n      (demon) => demon.spawned );\n\n    let spawnedDemons = spawnedlvl1Demons.concat(spawnedlvl2Demons);\n\n    for(let demonIdx = 0; demonIdx < spawnedDemons.length; demonIdx++) {\n      let demon = spawnedDemons[demonIdx];\n      for(let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n        let bullet = spawnedPCBullets[bullIdx];\n        let drawPoint = demon.drawPoint;\n        if(\n          (this.pcBulletHitsDemon(demon, drawPoint, bullet.startPoint) ||\n          this.pcBulletHitsDemon(demon, drawPoint, bullet.endPoint)) &&\n          demon.invincibilityFrames > 50\n        ) {\n          this.field.updatePlayerScore(demon.type);\n          demon.isHit();\n        };\n      };\n    };\n  }\n\n  pcBulletHitsDemon(demon, drawPoint, bullet) {\n    return (\n      (drawPoint.x <= bullet.x && bullet.x <= drawPoint.x + demon.width) &&\n      (drawPoint.y <= bullet.y && bullet.y <= drawPoint.y + demon.height)\n    )\n  }\n\n  checkGameOver() {\n    if(this.player.life <= 0) {\n      this.paused = true;\n      this.removeSpawnTimers();\n      this.gameStatus = 'over';\n      this.field.updateGameStatus(this.gameStatus);\n      this.drawStartScreen();\n    };\n  }\n\n  buttonDown() {\n    let gamepads = navigator.getGamepads ? navigator.getGamepads() :\n      (navigator.webkitGetGamepads ? navigator.webkitGetGamepads : []);\n\n    if(\n      navigator.getGamepads()[0].buttons[14].pressed ||\n      navigator.getGamepads()[0].axes[0] < -0.1\n    ) {\n      KEY_STATUS[KEY_MAP['controllerLeft']] = true;\n    }\n    if(\n      navigator.getGamepads()[0].buttons[15].pressed ||\n      navigator.getGamepads()[0].axes[0] > 0.1) {\n      KEY_STATUS[KEY_MAP['controllerRight']] = true;\n    };\n    if(\n      navigator.getGamepads()[0].buttons[0].pressed ||\n      navigator.getGamepads()[0].buttons[1].pressed ||\n      navigator.getGamepads()[0].buttons[2].pressed ||\n      navigator.getGamepads()[0].buttons[3].pressed ||\n      navigator.getGamepads()[0].buttons[4].pressed ||\n      navigator.getGamepads()[0].buttons[5].pressed\n\n    ) {\n      KEY_STATUS[KEY_MAP['controllerFire']] = true;\n    };\n  }\n\n  buttonUp() {\n    let gamepads = navigator.getGamepads ? navigator.getGamepads() :\n      (navigator.webkitGetGamepads ? navigator.webkitGetGamepads : []);\n\n    if(!navigator.getGamepads()[0].buttons[14].pressed) {\n      KEY_STATUS[KEY_MAP['controllerLeft']] = false;\n    }\n    if(!navigator.getGamepads()[0].buttons[15].pressed) {\n      KEY_STATUS[KEY_MAP['controllerRight']] = false;\n    };\n    if(\n      !navigator.getGamepads()[0].buttons[0].pressed &&\n      !navigator.getGamepads()[0].buttons[1].pressed &&\n      !navigator.getGamepads()[0].buttons[2].pressed &&\n      !navigator.getGamepads()[0].buttons[3].pressed &&\n      !navigator.getGamepads()[0].buttons[4].pressed &&\n      !navigator.getGamepads()[0].buttons[5].pressed\n    ) {\n      KEY_STATUS[KEY_MAP['controllerFire']] = false;\n    };\n  }\n\n  keydown(e) {\n    let keyCode = e.which || e.keyCode || 0;\n    if(keyCode === 13 && this.gameStatus !== 'playing') this.newGame();\n    if(keyCode === 77) this.clickMute();\n    if(keyCode === 80) this.clickPause();\n    if(KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = true;\n    }\n  }\n\n  keyup(e) {\n    let keyCode = e.which || e.keyCode || 0;\n    if(KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = false;\n    }\n  }\n\n  handleStart(e, boundingRect) {\n    e.preventDefault();\n    let touches = e.changedTouches;\n    for (let i = 0; i < touches.length; i++) {\n      let touch = touches[i];\n      let posX = touch.pageX - boundingRect.left;\n      let posY = touch.pageY - boundingRect.top;\n\n      if(\n        this.movementDirection === 'standard' && this.firePosition === 'standard'\n      ) {\n        if((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          console.log('here');\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      } else if(\n        this.movementDirection === 'inverted' && this.firePosition === 'standard'\n      ) {\n        if((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      } else if(\n        this.movementDirection === 'standard' && this.firePosition === 'inverted'\n      ) {\n        if((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      } else if(\n        this.movementDirection === 'inverted' && this.firePosition === 'inverted'\n      ) {\n        if((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      };\n\n      this.ongoingTouches.push(this.copyTouch(touches[i], posX, posY));\n    };\n  }\n\n  handleEnd(e, boundingRect) {\n    e.preventDefault();\n    let touches = e.changedTouches;\n    for (let i = 0; i < touches.length; i++) {\n      let touch = touches[i];\n      let posX = touch.pageX - boundingRect.left;\n      let posY = touch.pageY - boundingRect.top;\n\n      if(\n        this.movementDirection === 'standard' && this.firePosition === 'standard'\n      ) {\n        if((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      } else if(\n        this.movementDirection === 'inverted' && this.firePosition === 'standard'\n      ) {\n        if((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      } else if(\n        this.movementDirection === 'standard' && this.firePosition === 'inverted'\n      ) {\n        if((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      } else if(\n        this.movementDirection === 'inverted' && this.firePosition === 'inverted'\n      ) {\n        if((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      };\n\n      let touchIdx = this.ongoingTouchIndexById(touch.identifier);\n      this.ongoingTouches.splice(touchIdx, 1);\n    };\n  }\n\n  copyTouch(touch, posX, posY) {\n    return {\n      identifier: touch.identifier,\n      posX,\n      posY\n    };\n  }\n\n  ongoingTouchIndexById(idToFind) {\n    for(let i = 0; i < this.ongoingTouches.length; i++) {\n      let id = this.ongoingTouches[i].identifier;\n      if(id == idToFind) return i;\n    }\n    return -1;    // not found\n  }\n\n  statsCanvasCheckClick(e, boundingRect) {\n    e.preventDefault();\n    let clickPosX = e.clientX - boundingRect.left;\n    let clickPosY = e.clientY - boundingRect.top;\n\n    if(\n      (530 <= clickPosX && clickPosX <= 630) &&\n      (10 <= clickPosY && clickPosY <= 40)\n    ) {\n      this.clickMute();\n    } else if (\n      (650 <= clickPosX && clickPosX <= 750) &&\n      (10 <= clickPosY && clickPosY <= 40)\n    ) {\n      this.clickPause();\n    }\n  }\n\n  optsCanvasCheckClick(e, boundingRect) {\n    e.preventDefault();\n    let clickPosX = e.clientX - boundingRect.left;\n    let clickPosY = e.clientY - boundingRect.top;\n\n    if(\n      (240 <= clickPosX && clickPosX <= 560) &&\n      (165 <= clickPosY && clickPosY <= 200)\n    ) {\n      this.swapMovementDirection();\n    } else if(\n      (300 <= clickPosX && clickPosX <= 505) &&\n      (385 <= clickPosY && clickPosY <= 472)\n    ) {\n      if(this.gameStatus === 'unbegun') {\n        this.startRound();\n      } else if(this.gameStatus === 'playing') {\n        this.clickPause();\n      } else if(this.gameStatus === 'over') {\n        this.newGame();\n      }\n    } else if(\n      (20 <= clickPosX && clickPosX <= 170) &&\n      (410 <= clickPosY && clickPosY <= 490)\n    ) {\n      this.gamePadToggle = this.gamePadToggle ? false : true;\n      this.field.drawGamePadToggleButton();\n    } else if(\n      (290 <= clickPosX && clickPosX <= 515) &&\n      (255 <= clickPosY && clickPosY <= 290) &&\n      this.isMobile === true\n    ) {\n      this.moveFireButton();\n    }\n  }\n\n  clickMute() {\n    if(this.muted === true) {\n      this.muted = false;\n      this.AssetStore.backgroundMusic.volume = 0.25;\n    } else {\n      this.muted = true;\n      this.AssetStore.backgroundMusic.volume = 0;\n    }\n\n    this.field.updateMuteButton(this.muted);\n  }\n\n  clickPause() {\n    if(this.paused && this.gameStatus === 'playing') {\n      this.paused = false;\n      this.resumeSpawnTimers();\n      this.field.clearOptsContext();\n      this.optsCanvas.canvas.classList.add('hidden');\n      this.play();\n    } else if (!this.paused && this.gameStatus === 'playing') {\n      this.paused = true;\n      this.pauseSpawnTimers();\n      this.drawStartScreen();\n    };\n  }\n\n  newGame() {\n    this.field.clearAllContexts();\n    this.setupNewGame();\n    this.setupNewField();\n    this.field.drawStatusBar();\n    this.startRound();\n  }\n\n  swapMovementDirection() {\n    if(this.movementDirection === 'standard') {\n      this.movementDirection = 'inverted';\n      KEY_MAP[74] = 'right';\n      KEY_MAP[76] = 'left';\n      KEY_MAP[68] = 'left';\n      KEY_MAP[65] = 'right';\n      KEY_MAP[39] = 'left';\n      KEY_MAP[37] = 'right';\n    } else {\n      this.movementDirection = 'standard';\n      KEY_MAP[74] = 'left';\n      KEY_MAP[76] = 'right';\n      KEY_MAP[68] = 'right';\n      KEY_MAP[65] = 'left';\n      KEY_MAP[39] = 'right';\n      KEY_MAP[37] = 'left';\n    }\n\n    this.field.updateMovementDirection(this.movementDirection);\n    this.drawStartScreen()\n  }\n\n  moveFireButton() {\n    if(this.firePosition === 'standard') this.firePosition = 'inverted';\n    else this.firePosition = 'standard';\n    this.field.updateFirePosition(this.firePosition);\n    this.drawStartScreen()\n  }\n\n  mapGamePadButtons(e) {\n    KEY_MAP['controllerFire'] = 'fire';\n    KEY_MAP['controllerLeft'] = 'left';\n    KEY_MAP['controllerRight'] = 'right';\n    KEY_STATUS['controllerFire'] = false;\n    KEY_STATUS['controllerLeft'] = false;\n    KEY_STATUS['controllerRight'] = false;\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let foregroundCanvas = document.getElementById(\"foreground-canvas\");\n  let playerCanvas = document.getElementById(\"player-canvas\");\n  let statsCanvas = document.getElementById(\"stats-canvas\");\n  let optionsCanvas = document.getElementById(\"options-canvas\");\n  let mobileCanvas = null;\n\n  if(\n    (typeof window.orientation !== \"undefined\") ||\n    (navigator.userAgent.indexOf('IEMobile') !== -1)\n  ) {\n    mobileCanvas = document.createElement(\"canvas\");\n    mobileCanvas.id = \"mobile-canvas\";\n    mobileCanvas.width = \"800\";\n    mobileCanvas.height = \"500\";\n    document.getElementsByClassName(\"game-area\")[0].appendChild(mobileCanvas);\n  };\n\n  let game = new Game(\n    foregroundCanvas,\n    statsCanvas,\n    playerCanvas,\n    optionsCanvas,\n    mobileCanvas\n  );\n});\n"],"names":["ObjectPool","_createClass","size","_classCallCheck","this","pool","key","value","objectData","spawned","spawn","unshift","pop","type","i","draw","BulletPool","resetable","setDefaultValues","push","splice","Sprite","context","image","srcWidth","srcHeight","srcX","srcY","bind","drawPointX","drawPointY","drawImage","AssetStore","game","_this","backgroundMusic","Audio","loop","volume","load","checkReadyState","checkAudio","window","setInterval","mouthDemon","Image","width","height","eyeDemon","faceDemon","faceDemonHurt","bossDemon","heart","numAssets","numLoaded","onload","assetLoaded","src","readyState","clearInterval","startGame","Timer","callback","delay","timerId","start","remaining","pause","clearTimeout","Date","resume","setTimeout","clear","Field","fgCanvasObj","statsCanvasObj","pcCanvasObj","optsCanvasObj","demonBulletPool","pcBulletPool","lvl1DemonPool","lvl2DemonPool","player","movementDirection","gameStatus","mobileCanvasObj","firePosition","fgCanvas","statsCanvas","pcCanvas","optsCanvas","mobileCanvas","lastTime","now","playerScore","ctx","newDirection","newPosition","primaryText","secondaryText","setupStartScreen","text","x","y","drawStartScreenMessage","drawControls","drawMobileControls","canvas","classList","remove","clearOptsContext","fillStyle","fillRect","strokeStyle","strokeRect","font","fillText","concat","cw","ccw","desc1X","desc1Y","desc2X","desc2Y","circleX","circleY","drawSwapMovementButton","beginPath","arc","Math","PI","lineWidth","stroke","moveTo","abs","lineTo","drawGamePadToggleButton","firePos","descX","descY","drawSwapFireButton","gamePadConnected","clearRect","gamePadToggle","undrawFGContext","clearPCContext","updatePlayerCharge","drawPlayerRails","drawPlayerHearts","life","demon","fireCharge","muted","shape","xCenter","yCenter","clearFGContext","clearStatsContext","Player","pcFieldWidth","pcFieldHeight","velocity","acceleration","maxSpeed","radius","fireCooldown","invincibilityFrames","portTheta","starboardTheta","bowTheta","computeAllVerticies","fire","portVertex","computePortVertex","starboardVertex","computeStarboardVertex","bowVertex","computeCenterPoints","hitboxCenter","cos","sin","keyStatus","left","right","bulletData","theta","startRadius","endRadius","speed","get","fill","getRandNum","min","max","floor","random","DemonPool","_ObjectPool","demons","length","Demon","_inherits","storedAsset","sprite","drawPoint","computeDrawPoint","endSpeed","hurtSprite","chanceToFire","fireThreshold","startPoint","thetaMultiplier","speedMultiplier","bullet","Bullet","ctxWidth","ctxHeight","resetX","resetY","pathAngle","computePoint","endPoint","startX","startY","xOffset","yOffset","KEY_MAP","touchLeft","touchRight","touchFire","KEY_STATUS","code","Game","getContext","isMobile","play","startRound","optsCanvasCheckClick","statsCanvasCheckClick","lastCalledTime","drawLoadingScreen","setupEventListners","setupNewGame","setupNewField","document","addEventListener","keydown","keyup","e","getBoundingClientRect","handleStart","handleEnd","handleCancel","ongoingTouches","mapGamePadButtons","setupDemonPools","paused","field","drawStatusBar","drawStartScreen","drawMobileStartScreen","drawStandardStartScreen","_this2","lvl1Timer","spawnLvl1Demons","lvl2Timer","spawnLvl2Demons","add","updateGameStatus","startTime","_this3","checkGameOver","checkCollisions","buttonDown","move","buttonUp","checkLevel1Demons","render","requestAnimationFrame","spawnedLvl1","_this4","maxDemons","getMaxDemons","toGet","_this5","spawnedLvl2","level","spawnedPCBullets","filter","checkPlayerCollision","checkDemonCollision","spawnedDemonBullets","hitbox","bullIdx","bulletHitsPC","isHit","newX","newY","sqrt","pow","spawnedlvl1Demons","spawnedlvl2Demons","spawnedDemons","demonIdx","pcBulletHitsDemon","updatePlayerScore","removeSpawnTimers","navigator","getGamepads","webkitGetGamepads","buttons","pressed","axes","keyCode","which","newGame","clickMute","clickPause","preventDefault","boundingRect","touches","changedTouches","touch","posX","pageX","posY","pageY","top","console","log","copyTouch","touchIdx","ongoingTouchIndexById","identifier","idToFind","clickPosX","clientX","clickPosY","clientY","swapMovementDirection","moveFireButton","updateMuteButton","resumeSpawnTimers","pauseSpawnTimers","clearAllContexts","updateMovementDirection","updateFirePosition","foregroundCanvas","getElementById","playerCanvas","optionsCanvas","orientation","userAgent","indexOf","createElement","id","getElementsByClassName","appendChild"],"sourceRoot":""}