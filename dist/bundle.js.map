{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://neon_circles/./scripts/utilities.js","webpack://neon_circles/./scripts/bullet.js","webpack://neon_circles/./scripts/demon.js","webpack://neon_circles/./scripts/field.js","webpack://neon_circles/./scripts/pickups.js","webpack://neon_circles/./scripts/player.js","webpack://neon_circles/./scripts/game.js"],"sourcesContent":["export class ObjectPool {\n  constructor(size) {\n    this.size = size;\n    this.pool = [];\n  }\n\n  get(objectData) {\n    if (!this.pool[this.size - 1].spawned) {\n      this.pool[this.size - 1].spawn(objectData);\n      this.pool.unshift(this.pool.pop());\n    }\n  }\n\n  draw(type) {\n    for (let i = 0; i < this.size; i++) {\n      if (this.pool[i].spawned) {\n        this.pool[i].draw(this.BulletPool);\n        if (this.pool[i].resetable()) {\n          this.pool[i].setDefaultValues(type);\n          this.pool.push((this.pool.splice(i, 1))[0]);\n        }\n      } else {\n        break;\n      }\n    }\n  }\n};\n\nexport class Sprite {\n  constructor(context, image, srcWidth, srcHeight, srcX, srcY) {\n    this.context = context;\n    this.image = image;\n    this.srcWidth = srcWidth;\n    this.srcHeight = srcHeight;\n    this.srcX = srcX;\n    this.srcY = srcY;\n\n    this.draw = this.draw.bind(this);\n  }\n\n  draw(drawPointX, drawPointY) {\n    this.context.drawImage(\n      this.image,\n      this.srcX,\n      this.srcY,\n      this.srcWidth,\n      this.srcHeight,\n      drawPointX,\n      drawPointY,\n      this.srcWidth,  // drawn image width, same as src\n      this.srcHeight,  // drawn image height, same as src\n    );\n  }\n};\n\nexport class AssetStore {\n  constructor(game) {\n    this.game = game;\n\n    this.backgroundMusic = new Audio('assets/sounds/background_music.mp3');\n    this.backgroundMusic.loop = true;\n    this.backgroundMusic.volume = 0.25;\n    this.backgroundMusic.load();\n    this.checkReadyState = this.checkReadyState.bind(this);\n    this.checkAudio = window.setInterval(() => {this.checkReadyState()}, 1000);\n\n    this.mouthDemon = {\n      image: new Image(),\n      width: 30,\n      height: 30,\n      srcX: 0,\n      srcY: 0\n    };\n    this.eyeDemon = {\n      image: new Image(),\n      width: 30,\n      height: 30,\n      srcX: 0,\n      srcY: 0\n    };\n    this.faceDemon = {\n      image: new Image(),\n      width: 30,\n      height: 40,\n      srcX: 0,\n      srcY: 0\n    };\n    this.faceDemonHurt = {\n      image: new Image(),\n      width: 30,\n      height: 40,\n      srcX: 0,\n      srcY: 0\n    };\n    this.bossDemon = {\n      image: new Image(),\n      width: 50,\n      height: 54,\n      srcX: 0,\n      srcY: 0\n    };\n    this.heart = { image: new Image() };\n    this.hp = {\n      image: new Image(),\n      width: 25,\n      height: 25,\n      srcX: 0,\n      srcY: 0\n    };\n\n    this.numAssets = 8;\n    this.numLoaded = 0;\n\n    this.mouthDemon.image.onload = () => { this.assetLoaded(); }\n    this.eyeDemon.image.onload = () => { this.assetLoaded(); }\n    this.faceDemon.image.onload = () => { this.assetLoaded(); }\n    this.faceDemonHurt.image.onload = () => { this.assetLoaded(); }\n    this.bossDemon.image.onload = () => { this.assetLoaded(); }\n    this.heart.image.onload = () => { this.assetLoaded(); }\n    this.hp.image.onload = () => { this.assetLoaded(); }\n\n    this.mouthDemon.image.src = 'assets/sprites/mouth_demon.png';\n    this.eyeDemon.image.src = 'assets/sprites/eye_demon.png';\n    this.faceDemon.image.src = 'assets/sprites/face_demon.png';\n    this.faceDemonHurt.image.src = 'assets/sprites/face_demon_hurt.png';\n    this.bossDemon.image.src = 'assets/sprites/boss_demon.png';\n    this.heart.image.src = 'assets/sprites/heart.png';\n    this.hp.image.src = 'assets/sprites/hp.png';\n  }\n\n  checkReadyState() {\n    if (this.backgroundMusic.readyState === 4) {\n      window.clearInterval(this.checkAudio);\n      this.assetLoaded();\n    }\n  }\n\n  assetLoaded() {\n    this.numLoaded++;\n    if (this.numLoaded === this.numAssets) {\n      this.game.startGame();\n    };\n  }\n};\n\nexport function Timer(callback, delay) {\n  var timerId, start, remaining = delay;\n\n  this.pause = () => {\n    window.clearTimeout(timerId);\n    remaining -= new Date() - start;\n  };\n\n  this.resume = () => {\n    start = new Date();\n    window.clearTimeout(timerId);\n    timerId = window.setTimeout(callback, remaining);\n  };\n\n  this.clear = () => {\n    window.clearTimeout(timerId);\n  };\n\n  this.resume();\n}\n\nexport const getRandNum = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) ) + min;\n};\n","import { ObjectPool } from './utilities';\n\nexport default class BulletPool extends ObjectPool {\n  constructor(size, fgCanvas, type) {\n    super(size);\n\n    for (let i = 0; i < size; i++) {\n      let bullet = new Bullet(fgCanvas, type);\n      this.pool.push(bullet);\n    }\n  }\n};\n\nclass Bullet {\n  constructor(fgCanvas, type) {\n    this.ctx = fgCanvas.ctx;\n    this.ctxWidth = fgCanvas.width;\n    this.ctxHeight = fgCanvas.height;\n    this.resetX = fgCanvas.width + 5;\n    this.resetY = fgCanvas.height + 5;\n    this.setDefaultValues(type);\n  }\n\n  spawn(bulletData) {\n    this.pathAngle = bulletData.theta;\n    this.startRadius = bulletData.startRadius;\n    this.endRadius = bulletData.endRadius;\n    this.speed = bulletData.speed;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n    this.spawned = true;\n  }\n\n  draw() {\n    this.startRadius -= this.speed;\n    this.endRadius -= this.speed;\n    this.startPoint = this.computePoint(this.startRadius);\n    this.endPoint = this.computePoint(this.endRadius);\n\n    this.clear();\n  }\n\n  resetable() {\n    if (\n      (this.startPoint.y > -5 || this.endPoint.y > -5)\n      && (this.startPoint.y < this.resetY || this.endPoint.y < this.resetY)\n      && (this.startPoint.x > -5 || this.endPoint.x > -5)\n      && (this.startPoint.x < this.resetX || this.endPoint.x < this.resetX)\n    ) {\n      return false;\n    } else {\n      return true;\n    };\n  }\n\n  clear() {\n    let startX;\n    let startY;\n\n    if (this.startPoint.x > this.endPoint.x) {\n      startX = this.endPoint.x;\n    } else {\n      startX = this.startPoint.x;\n    }\n    if (this.startPoint.y > this.endPoint.y) {\n      startY = this.endPoint.y;\n    } else {\n      startY = this.startPoint.y;\n    }\n\n    this.ctx.clearRect(startX, startY, 16, 16);\n  }\n\n  computePoint(radius) {\n    // create a computeOffset funciton that works on a half circle tilted 45degrees\n    // when pc is on top left of circle drawpoint needs to be in topleft;\n    // when pc is on bottom right of circle drawpoint needs to be in *topleft*\n    return ({\n      x: Math.cos(this.pathAngle) * -radius + this.xOffset - 5,\n      y: Math.sin(this.pathAngle) * -radius + this.yOffset - 5,\n    });\n  }\n\n  setDefaultValues(type) {\n    this.xOffset = this.ctxWidth / 2;\n    this.yOffset = this.ctxHeight / 2;\n    this.pathAngle = 0;\n    this.startPoint = {x: 0, y: 0}\n    this.endPoint = {x: 0, y: 0}\n    this.speed = 0;\n    this.spawned = false;\n  }\n};\n","import { Sprite, ObjectPool } from './utilities';\n\nconst getRandNum = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) ) + min;\n};\n\nexport default class DemonPool extends ObjectPool {\n  constructor(demons, ctx, AssetStore, BulletPool) {\n    super(demons.length, ctx);\n    this.BulletPool = BulletPool;\n\n    for (let i = 0; i < demons.length; i++) {\n      const demon = new Demon(ctx, demons[i], AssetStore);\n      this.pool.push(demon);\n    }\n  }\n};\n\nclass Demon {\n  constructor(ctx, type, AssetStore) {\n    this.ctx = ctx;\n    this.type = type;\n\n    const storedAsset = AssetStore[type];\n    this.image = storedAsset.image;\n    this.width = storedAsset.width;\n    this.height = storedAsset.height;\n    this.sprite = new Sprite(\n      ctx,\n      storedAsset.image,\n      this.width,\n      this.height,\n      storedAsset.srcX,\n      storedAsset.srcY,\n    );\n    this.setDefaultValues();\n  }\n\n  spawn() {\n    this.drawPoint = this.computeDrawPoint();\n    this.spawned = true;\n  }\n\n  draw(BulletPool) {\n    if (this.type === 'faceDemon') {\n      if (this.radius > this.endRadius) {\n        this.radius -= Math.abs(this.speed * 100);\n      } else {\n        this.speed = this.endSpeed;\n      }\n    };\n\n    this.invincibilityFrames++;\n    this.theta -= this.speed;\n    this.drawPoint = this.computeDrawPoint();\n\n    if (this.type === 'faceDemon' && this.invincibilityFrames < 50) {\n      this.hurtSprite.draw(this.drawPoint.x, this.drawPoint.y);\n    } else {\n      this.sprite.draw(this.drawPoint.x, this.drawPoint.y);\n    }\n\n    this.chanceToFire = Math.floor(Math.random() * 101)\n    if (this.chanceToFire/100 < this.fireThreshold) {\n      this.fire(BulletPool);\n    }\n  }\n\n  resetable() {\n    if (this.life <= 0) {\n      return true;\n    }\n    return false;\n  }\n\n  computeDrawPoint() {\n    return({\n      x: Math.cos(this.theta) * -this.radius  + 390,\n      y: Math.sin(this.theta) * -this.radius  + 232,\n    });\n  }\n\n  clear() {\n    this.ctx.clearRect(\n      this.drawPoint.x - 5,\n      this.drawPoint.y - 5,\n      this.width + 10,\n      this.height + 10,\n    );\n  }\n\n  fire(BulletPool) {\n    const bulletData = {\n      theta: this.theta,\n      startRadius: this.radius,\n      endRadius: this.radius - 20,\n      speed: 4,\n      startPoint: {\n        x: this.drawPoint.x + this.width / 2,\n        y: this.drawPoint.y + this.height / 2,\n      },\n    };\n    BulletPool.get(bulletData);\n  }\n\n  isHit() {\n    this.life -= 1;\n    this.invincibilityFrames = 0;\n  }\n\n  setDefaultValues() {\n    const thetaMultiplier = Math.random() < 0.5 ? -1 : 1;\n    const speedMultiplier = Math.random() < 0.5 ? -1 : 1;\n\n    if (this.type === 'mouthDemon' || this.type === 'eyeDemon') {\n      this.theta = (Math.PI / 2) * thetaMultiplier;\n      this.speed = (getRandNum(4, 7) / 1000) * speedMultiplier;\n      this.radius = getRandNum(265, 380); // The 'track' the demon moves along\n      this.life = 1;\n      this.fireThreshold = 0.01;\n    } else if (this.type === 'faceDemon') {\n      this.theta = (Math.PI / 2) * thetaMultiplier;\n      this.speed = (getRandNum(6, 9) / 1000) * speedMultiplier;\n      this.endSpeed = this.speed * 2;\n      this.radius = 400;\n      this.endRadius = getRandNum(125, 225);\n      this.life = 2;\n      this.fireThreshold = 0.02;\n      this.hurtSprite = new Sprite(\n        this.ctx,\n        this.image,\n        this.width,\n        this.height,\n        31,\n        0,\n      );\n    } else if (this.type === 'bossDemon') {\n      this.speed = 0.4;\n    }\n    this.invincibilityFrames = 50;\n    this.chanceToFire = 0;\n    this.spawned = false;\n    this.drawPoint = { x: 400, y: 250 };\n  }\n};\n","import { Sprite } from './utilities';\n\nclass Field {\n  constructor(\n    fgCanvasObj,\n    statsCanvasObj,\n    pcCanvasObj,\n    optsCanvasObj,\n    AssetStore,\n    demonBulletPool,\n    pcBulletPool,\n    lvl1DemonPool,\n    lvl2DemonPool,\n    pickupsPool,\n    player,\n    movementDirection,\n    gameStatus,\n    mobileCanvasObj,\n    firePosition,\n  ) {\n    this.fgCanvas = fgCanvasObj;\n    this.statsCanvas = statsCanvasObj;\n    this.pcCanvas = pcCanvasObj;\n    this.optsCanvas = optsCanvasObj;\n    this.mobileCanvas = mobileCanvasObj;\n\n    this.AssetStore = AssetStore;\n    this.demonBulletPool = demonBulletPool;\n    this.pcBulletPool = pcBulletPool;\n    this.lvl1DemonPool = lvl1DemonPool;\n    this.lvl2DemonPool = lvl2DemonPool;\n    this.pickupsPool = pickupsPool;\n\n    this.player = player;\n    this.movementDirection = movementDirection;\n    this.firePosition = firePosition;\n    this.gameStatus = gameStatus;\n\n    this.lastTime = Date.now;\n    this.playerScore = 0;\n    this.heart = new Sprite(\n      this.statsCanvas.ctx,\n      this.AssetStore.heart.image,\n      13, 13, 0, 0,\n    );\n  }\n\n  updateMovementDirection(newDirection) {\n    this.movementDirection = newDirection;\n  }\n\n  updateFirePosition(newPosition) {\n    this.firePosition = newPosition;\n  }\n\n  updateGameStatus(gameStatus) {\n    this.gameStatus = gameStatus;\n  }\n\n  drawStandardStartScreen() {\n    this.setupStartScreen();\n\n    let primaryText;      // clockwise\n    let secondaryText;    // counterclockwise\n    if (this.gameStatus === 'over') {\n      primaryText = {\n        text: \"GAME OVER\", size: \"36px\", x: 285, y: 70,\n      };\n      secondaryText = {\n        text: \"fight! fight! don't let demons win!\", size: \"22px\", x: 176, y: 105,\n      };\n    } else {\n      primaryText = {\n        text: \"SHOOT ALL DEMONS!\", size: \"36px\", x: 207, y: 70,\n      };\n      secondaryText = {\n        text: \"careful! demon power is strong!\", size: \"22px\", x: 182, y: 105,\n      };\n    };\n    this.drawStartScreenMessage(primaryText, secondaryText);\n\n    this.drawControls();\n\n    // for checking centeredness of start screen items\n    // this.optsCanvas.ctx.beginPath();\n    // this.optsCanvas.ctx.moveTo(20,410);\n    // this.optsCanvas.ctx.lineTo(20,490);\n    // this.optsCanvas.ctx.stroke();\n    // this.optsCanvas.ctx.beginPath();\n    // this.optsCanvas.ctx.moveTo(170,410);\n    // this.optsCanvas.ctx.lineTo(170,490);\n    // this.optsCanvas.ctx.stroke();\n  }\n\n  drawMobileStartScreen() {\n    this.setupStartScreen();\n\n    let primaryText;\n    let secondaryText;\n    if (this.gameStatus === 'over') {\n      primaryText = {\n        text: \"GAME OVER\", size: \"36px\", x: 285, y: 70,\n      };\n      secondaryText = {\n        text: \"fight! fight! don't let demons win!\", size: \"19px\", x: 204, y: 105,\n      };\n    } else {\n      primaryText = {\n        text: \"SHOOT ALL DEMONS!\", size: \"34px\", x: 212, y: 70,\n      };\n      secondaryText = {\n        text: \"careful! demon power is strong!\", size: \"20px\", x: 202, y: 105,\n      };\n    };\n    this.drawStartScreenMessage(primaryText, secondaryText);\n\n    this.drawMobileControls();\n  }\n\n  setupStartScreen() {\n    this.optsCanvas.canvas.classList.remove('hidden');\n    this.clearOptsContext();\n    this.optsCanvas.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n    this.optsCanvas.ctx.fillRect(0, 0, 800, 500);\n\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n    this.optsCanvas.ctx.strokeRect(300, 385, 205, 87);\n    this.optsCanvas.ctx.font = \"60px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"PLAY\", 320, 450);\n  }\n\n  drawStartScreenMessage(primaryText, secondaryText) {\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.font = `${primaryText.size} sf_alien_encountersitalic`;\n    this.optsCanvas.ctx.fillText(\n      primaryText.text, primaryText.x, primaryText.y,\n    );\n    this.optsCanvas.ctx.font = `${secondaryText.size} sf_alien_encountersitalic`;\n    this.optsCanvas.ctx.fillText(\n      secondaryText.text, secondaryText.x, secondaryText.y,\n    );\n  }\n\n  drawControls() {\n    let cw;     // clockwise\n    let ccw;    // counterclockwise\n    if (this.movementDirection === 'standard') {\n      ccw = {\n        desc1X: 70, desc1Y: 250,\n        desc2X: 90, desc2Y: 280,\n        circleX: 160, circleY: 190,\n      };\n      cw = {\n        desc1X: 590, desc1Y: 250,\n        desc2X: 566, desc2Y: 280,\n        circleX: -640, circleY: 190,\n      };\n    } else {\n      ccw = {\n        desc1X: 545, desc1Y: 250,\n        desc2X: 90, desc2Y: 280,\n        circleX: 640, circleY: 190,\n      };\n      cw = {\n        desc1X: 109, desc1Y: 250,\n        desc2X: 566, desc2Y: 280,\n        circleX: -160, circleY: 190,\n      };\n    };\n\n    this.drawSwapMovementButton();\n\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"counterclockwise\", ccw.desc1X, ccw.desc1Y);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"a   j   left\", ccw.desc2X, ccw.desc2Y);\n\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(\n      ccw.circleX,\n      ccw.circleY,\n      30,\n      Math.PI / 2,\n      Math.PI,\n      true,\n    );\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo(Math.abs(ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(ccw.circleX - 20), (ccw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo(Math.abs(ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(ccw.circleX - 35), (ccw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"clockwise\", cw.desc1X, cw.desc1Y);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"d   l   right\", cw.desc2X, cw.desc2Y);\n\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(\n      Math.abs(cw.circleX), cw.circleY, 30,Math.PI/2, 0, false\n    );\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo(Math.abs(cw.circleX - 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(cw.circleX - 20), (cw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo(Math.abs(cw.circleX - 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo(Math.abs(cw.circleX - 35), (cw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n\n    this.optsCanvas.ctx.font = \"16px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\n      \"HP EVERY 1000 Pts!\", 310, 280,\n    );\n\n    this.optsCanvas.ctx.font = \"24px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\n      \"SPACE TO FIRE WHEN POWER IS FULL\", 148, 340,\n    );\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo(145, 347);\n    this.optsCanvas.ctx.lineTo(635, 347);\n    this.optsCanvas.ctx.stroke();\n\n    this.drawGamePadToggleButton();\n\n    this.optsCanvas.ctx.font = \"12px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"m to mute!\", 705, 440);\n    this.optsCanvas.ctx.fillText(\"p to pause!\", 700, 460);\n    if (this.gameStatus !== 'playing') {\n      this.optsCanvas.ctx.fillText(\"enter to start!\", 670, 480);\n    }\n  }\n\n  drawMobileControls() {\n    let cw;     // clockwise\n    let ccw;    // counterclockwise\n    let firePos;\n    if (\n      this.movementDirection === 'standard' && this.firePosition === 'standard'\n    ) {\n      ccw = { descX: 5, descY: 185, circleX: 100, circleY: 125 };\n      cw = { descX: 45, descY: 405, circleX: 100, circleY: 345 };\n      firePos = { x: 650, y: 265 };\n      this.optsCanvas.ctx.strokeStyle = \"white\";\n      this.optsCanvas.ctx.strokeRect(2,2,196,246);\n      this.optsCanvas.ctx.strokeRect(2,252,196,246);\n      this.optsCanvas.ctx.strokeRect(602,2,196,496);\n    } else if (\n      this.movementDirection === 'inverted' && this.firePosition === 'standard'\n    ) {\n      ccw = { descX: 5, descY: 405, circleX: 100, circleY: 345 };\n      cw = { descX: 45, descY: 185, circleX: 100, circleY: 125 };\n      firePos = { x: 650, y: 265 };\n      this.optsCanvas.ctx.strokeStyle = \"white\";\n      this.optsCanvas.ctx.strokeRect(2,2,196,246);\n      this.optsCanvas.ctx.strokeRect(2,252,196,246);\n      this.optsCanvas.ctx.strokeRect(602,2,196,496);\n    } else if (\n      this.movementDirection === 'standard' && this.firePosition === 'inverted'\n    ) {\n      ccw = { descX: 605, descY: 185, circleX: 700, circleY: 125 };\n      cw = { descX: 645, descY: 405, circleX: 700, circleY: 345 };\n      firePos = { x: 43, y: 265 };\n      this.optsCanvas.ctx.strokeStyle = \"white\";\n      this.optsCanvas.ctx.strokeRect(602,2,196,246);\n      this.optsCanvas.ctx.strokeRect(602,252,196,246);\n      this.optsCanvas.ctx.strokeRect(2,2,196,496);\n    } else if (\n      this.movementDirection === 'inverted' && this.firePosition === 'inverted'\n    ) {\n      ccw = { descX: 605, descY: 405, circleX: 700, circleY: 345 };\n      cw = { descX: 645, descY: 185, circleX: 700, circleY: 125 };\n      firePos = { x: 43, y: 265 };\n      this.optsCanvas.ctx.strokeRect(602,2,196,246);\n      this.optsCanvas.ctx.strokeRect(602,252,196,246);\n      this.optsCanvas.ctx.strokeRect(2,2,196,496);\n    };\n\n    this.drawSwapMovementButton();\n    this.drawSwapFireButton();\n\n    this.optsCanvas.ctx.fillStyle = 'white';\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n\n    // counterclockwise description titles\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"counterclockwise\", ccw.descX, ccw.descY);\n\n    // fire description titles\n    this.optsCanvas.ctx.font = \"42px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"FIRE!\", firePos.x, firePos.y);\n\n    // clockwise description titles\n    this.optsCanvas.ctx.font = \"18px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"clockwise\", cw.descX, cw.descY);\n\n    // counterclockwise circles\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(ccw.circleX, ccw.circleY, 30, Math.PI / 2, Math.PI, true);\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo((ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo((ccw.circleX - 20), (ccw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo((ccw.circleX - 30), ccw.circleY);\n    this.optsCanvas.ctx.lineTo((ccw.circleX - 35), (ccw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n\n    // clockwise circles\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.arc(cw.circleX, cw.circleY, 30, Math.PI / 2, 0, false);\n    this.optsCanvas.ctx.lineWidth = 2;\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.beginPath();\n    this.optsCanvas.ctx.moveTo((cw.circleX + 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo((cw.circleX + 20), (cw.circleY - 10));\n    this.optsCanvas.ctx.stroke();\n    this.optsCanvas.ctx.moveTo((cw.circleX + 30), cw.circleY);\n    this.optsCanvas.ctx.lineTo((cw.circleX + 35), (cw.circleY - 15));\n    this.optsCanvas.ctx.stroke();\n  }\n\n  drawSwapMovementButton() {\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n    this.optsCanvas.ctx.strokeRect(240,165,320,35);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"swap movement direction\", 250, 190);\n  }\n\n  drawSwapFireButton() {\n    this.optsCanvas.ctx.strokeStyle = \"white\";\n    this.optsCanvas.ctx.strokeRect(290,255,225,35);\n    this.optsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.optsCanvas.ctx.fillText(\"move fire button\", 300, 280);\n  }\n\n  drawGamePadToggleButton() {\n    if (this.gamePadConnected) {\n      this.optsCanvas.ctx.clearRect(20,410,150,80);\n      this.optsCanvas.ctx.fillStyle = \"rgba(0, 0, 0, 0.8\";\n      this.optsCanvas.ctx.fillRect(20,410,150,80);\n      this.optsCanvas.ctx.fillStyle = \"white\";\n      this.optsCanvas.ctx.font = \"24px sf_alien_encountersitalic\";\n      if (this.gamePadToggle) {\n        this.optsCanvas.ctx.fillText(\"gamepad\", 33, 435);\n      } else {\n        this.optsCanvas.ctx.fillText(\"keyboard\", 27, 435);\n      }\n      this.optsCanvas.ctx.font = \"12px sf_alien_encountersitalic\";\n      this.optsCanvas.ctx.fillText(\"click here to toggle\", 20, 460);\n      this.optsCanvas.ctx.fillText(\"gamepad input!\", 20, 480);\n    };\n  }\n\n  render()  {\n    this.undrawFGContext();\n    this.clearPCContext();\n    this.updatePlayerCharge()\n    this.drawPlayerRails('circle');\n    this.player.draw();\n    this.lvl1DemonPool.draw();\n    this.lvl2DemonPool.draw();\n    this.pickupsPool.draw();\n    this.pcBulletPool.draw('player');\n    this.demonBulletPool.draw();\n  }\n\n  drawStatusBar() {\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(\n      0,\n      0,\n      this.statsCanvas.width,\n      this.statsCanvas.height,\n    );\n\n    // Charge container\n    this.statsCanvas.ctx.strokeStyle = '#6816e0';\n    this.statsCanvas.ctx.strokeRect(352, 30, 97, 13);\n\n    // Player life\n    this.drawPlayerHearts();\n\n    this.statsCanvas.ctx.fillStyle = 'black';\n    this.statsCanvas.ctx.strokeStyle = 'black';\n\n    // Titles\n    this.statsCanvas.ctx.font = \"22px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"SCORE\", 49, 21);\n    this.statsCanvas.ctx.font = \"22px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"LIFE\", 204, 21);\n    this.statsCanvas.ctx.font = \"22px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"POWER\", 351, 21);\n\n    // Player score\n    this.statsCanvas.ctx.font = \"20px Courier\";\n    this.statsCanvas.ctx.fillText(\"0\", 50, 43);\n\n    // Mute / unmute button\n    this.statsCanvas.ctx.lineWidth = 2;\n    this.statsCanvas.ctx.strokeRect(530, 10, 100, 30);\n    this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"MUTE\", 550, 32);\n\n    // Pause button\n    this.statsCanvas.ctx.lineWidth = 2;\n    this.statsCanvas.ctx.strokeRect(650, 10, 100, 30);\n    this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n    this.statsCanvas.ctx.fillText(\"PAUSE\", 665, 32);\n  }\n\n  drawPlayerHearts() {\n    this.statsCanvas.ctx.clearRect(200, 20, 140, 40);\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(200, 20, 140, 40);\n    for (let i = 0; i < this.player.life; i++) {\n      this.heart.draw(205 + (i * 20), 30)\n    }\n  }\n\n  updatePlayerScore(demon) {\n    if (demon === 'mouthDemon' || demon === 'eyeDemon') {\n      this.playerScore += 100;\n    } else if (demon === 'faceDemon') {\n      this.playerScore += 150;\n    }\n    this.statsCanvas.ctx.clearRect(45, 20, 150, 40);\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(45, 20, 150, 40);\n    this.statsCanvas.ctx.fillStyle = 'black';\n    this.statsCanvas.ctx.font = \"20px Courier\";\n    this.statsCanvas.ctx.fillText(`${this.playerScore}`, 50, 43);\n  }\n\n  updatePlayerCharge() {\n    if (this.player.fireCharge === 0) {\n      this.statsCanvas.ctx.clearRect(353, 31, 95, 11);\n      this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n      this.statsCanvas.ctx.fillRect(353, 31, 95, 11);\n    } else if (this.player.fireCharge < 20) {\n      this.statsCanvas.ctx.fillStyle = '#6816e0';\n      this.statsCanvas.ctx.fillRect(353, 31, this.player.fireCharge * 5, 11);\n    }\n  }\n\n  updateMuteButton(muted) {\n    this.statsCanvas.ctx.clearRect(532, 12, 96, 26);\n    this.statsCanvas.ctx.fillStyle = \"rgba(255, 255, 255, 0.8\";\n    this.statsCanvas.ctx.fillRect(532, 12, 96, 26);\n    if (muted === true) {\n      this.statsCanvas.ctx.fillStyle = 'black';\n      this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n      this.statsCanvas.ctx.fillText(\"UNMUTE\", 537, 32);\n    } else {\n      this.statsCanvas.ctx.fillStyle = 'black';\n      this.statsCanvas.ctx.font = \"20px sf_alien_encountersitalic\";\n      this.statsCanvas.ctx.fillText(\"MUTE\", 550, 32);\n    }\n  }\n\n  drawPlayerRails(shape) {\n    const xCenter = this.pcCanvas.width / 2;\n    const yCenter = this.pcCanvas.height / 2;\n    if (this.player.fireCharge < 20) {\n      this.pcCanvas.ctx.strokeStyle = \"white\";\n    } else {\n      this.pcCanvas.ctx.strokeStyle = \"#6816e0\";\n    }\n\n    switch (shape) {\n      case 'circle':\n      default:\n      this.pcCanvas.ctx.beginPath();\n      this.pcCanvas.ctx.arc(xCenter, yCenter, 60, 0, 2 * Math.PI, true);\n      this.pcCanvas.ctx.lineWidth = 2;\n      this.pcCanvas.ctx.stroke();\n    }\n  }\n\n  undrawFGContext() {\n    this.fgCanvas.ctx.fillStyle = \"rgba(0, 0, 0, 0.1\";\n    this.fgCanvas.ctx.fillRect(0, 0, 800, 500);\n  }\n\n  clearFGContext() {\n    this.fgCanvas.ctx.clearRect(0,0,this.fgCanvas.width,this.fgCanvas.height);\n  }\n\n  clearStatsContext() {\n    this.statsCanvas.ctx.clearRect(\n      0,\n      0,\n      this.statsCanvas.width,\n      this.statsCanvas.height,\n    );\n  }\n\n  clearPCContext() {\n    this.pcCanvas.ctx.clearRect(0,0,this.pcCanvas.width,this.pcCanvas.height);\n  }\n\n  clearOptsContext() {\n    this.optsCanvas.ctx.clearRect(\n      0,\n      0,\n      this.optsCanvas.width,\n      this.optsCanvas.height,\n    );\n  }\n\n  clearAllContexts() {\n    this.clearFGContext();\n    this.clearStatsContext();\n    this.clearPCContext();\n  }\n}\n\nexport default Field;\n","import { getRandNum, ObjectPool, Sprite } from './utilities';\n\nconst pickups = ['hp'];\n\nexport default class PickupsPool extends ObjectPool {\n  constructor(ctx, AssetStore) {\n    super(pickups.length, ctx);\n\n    for (let i = 0; i < pickups.length; i++) {\n      let pickup = null;\n      switch (pickups[i]) {\n        case 'hp':\n        default:\n          pickup = new Pickup(ctx, 'hp', AssetStore);\n          break;\n      }\n      this.pool.push(pickup);\n    }\n  }\n};\n\nclass Pickup {\n  constructor(ctx, type, AssetStore) {\n    this.ctx = ctx;\n    this.type = type;\n\n    const storedAsset = AssetStore[type];\n    this.image = storedAsset.image;\n    this.width = storedAsset.width;\n    this.height = storedAsset.height;\n    this.sprite = new Sprite(\n      ctx,\n      storedAsset.image,\n      this.width,\n      this.height,\n      storedAsset.srcX,\n      storedAsset.srcY,\n    );\n    this.setDefaultValues();\n  }\n\n  spawn() {\n    this.drawPoint = this.computeDrawPoint();\n    this.spawned = true;\n  }\n\n  draw() {\n    this.invincibilityFrames++;\n    this.theta -= this.speed;\n    this.drawPoint = this.computeDrawPoint();\n    this.sprite.draw(this.drawPoint.x, this.drawPoint.y);\n  }\n\n  resetable() {\n    if (this.life <= 0) {\n      return true\n    };\n    return false;\n  }\n\n  computeDrawPoint() {\n    return({\n      x: Math.cos(this.theta) * -this.radius  + 390,\n      y: Math.sin(this.theta) * -this.radius  + 232,\n    });\n  }\n\n  clear() {\n    this.ctx.clearRect(\n      this.drawPoint.x - 5,\n      this.drawPoint.y - 5,\n      this.width + 10,\n      this.height + 10,\n    );\n  }\n\n  isHit() {\n    this.life -= 1;\n    this.invincibilityFrames = 0;\n  }\n\n  setDefaultValues() {\n    let thetaMultiplier = Math.random() < 0.5 ? -1 : 1;\n    let speedMultiplier = Math.random() < 0.5 ? -1 : 1;\n\n    this.theta = (Math.PI / 2) * thetaMultiplier;\n    this.speed = (getRandNum(4, 7) / 1000) * speedMultiplier;\n    this.radius = getRandNum(200, 400); // The 'track' the pickup moves along\n    this.life = 1;\n    this.invincibilityFrames = 50;\n    this.spawned = false;\n    this.drawPoint = { x: 400, y: 250 };\n  }\n};\n","class Player {\n  constructor(pcCanvas, BulletPool) {\n    this.ctx = pcCanvas.ctx;\n    this.pcFieldWidth = pcCanvas.width;\n    this.pcFieldHeight = pcCanvas.height;\n    this.BulletPool = BulletPool;\n\n    this.velocity = 0;\n    this.acceleration = 0.015;\n    this.maxSpeed = 0.2;\n    this.radius = 50; // The 'track' the player moves along\n    this.fireCharge = 0;\n    this.fireCooldown = 25;\n    this.invincibilityFrames = 50;\n    this.invincibilityColor = 'white';\n    this.life = 3;\n\n    this.portTheta = -1.23;\n    this.starboardTheta = 1.9106;\n    this.bowTheta = Math.PI / 2;\n    this.computeAllVerticies();\n\n    this.draw = this.draw.bind(this);\n    this.fire = this.fire.bind(this);\n  }\n\n  computeAllVerticies() {\n    this.portVertex = this.computePortVertex();\n    this.starboardVertex = this.computeStarboardVertex();\n    this.bowVertex = this.computeCenterPoints(-15);\n    this.hitboxCenter = this.computeCenterPoints(-35);\n  }\n\n  computeStarboardVertex() {\n    return ({\n      x: Math.cos(this.starboardTheta) * this.radius + this.pcFieldWidth / 2,\n      y: -Math.sin(this.starboardTheta) * this.radius + this.pcFieldHeight / 2,\n    });\n  }\n\n  computePortVertex() {\n    return ({\n      x: Math.cos(this.portTheta) * this.radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.portTheta) * this.radius  + this.pcFieldHeight / 2,\n    });\n  }\n\n  computeCenterPoints(radius) {\n    return ({\n      x: Math.cos(this.bowTheta) * radius  + this.pcFieldWidth / 2,\n      y: Math.sin(this.bowTheta) * radius  + this.pcFieldHeight / 2,\n    });\n  }\n\n  move(keyStatus) {\n    this.fireCharge++; // increments once every frame\n    this.invincibilityFrames++; // increments once every frame\n    if (keyStatus.left) {\n      if (this.velocity <= this.maxSpeed) {\n        this.velocity += this.acceleration;\n      }\n      this.starboardTheta += this.velocity;\n      this.portTheta -= this.velocity;\n      this.bowTheta -= this.velocity;\n    } else if (keyStatus.right) {\n      if (this.velocity <= this.maxSpeed) {\n        this.velocity += this.acceleration;\n      }\n      this.starboardTheta -= this.velocity;\n      this.portTheta += this.velocity;\n      this.bowTheta += this.velocity;\n    } else {\n      this.velocity = 0;\n    }\n\n    if (keyStatus.fire && this.fireCharge >= this.fireCooldown) {\n      this.fire();\n    }\n  }\n\n  fire() {\n    this.fireCharge = 0;\n    const bulletData = {\n      theta: this.bowTheta,\n      startRadius: 12,\n      endRadius: -8,\n      speed: 6,\n    };\n    this.BulletPool.get(bulletData);\n  }\n\n  draw() {\n    this.computeAllVerticies();\n    this.ctx.beginPath();\n\n    if (this.invincibilityFrames < 50) {\n      this.ctx.fillStyle = this.invincibilityColor;\n    }\n    else this.ctx.fillStyle = 'white';\n\n    this.ctx.moveTo(this.starboardVertex.x, this.starboardVertex.y);\n    this.ctx.lineTo(this.portVertex.x, this.portVertex.y);\n    this.ctx.lineTo(this.bowVertex.x, this.bowVertex.y);\n    this.ctx.fill();\n  }\n\n  isHit() {\n    this.life -= 1;\n    this.invincibilityFrames = 0;\n    this.invincibilityColor = 'red';\n  }\n\n  isHealed() {\n    if (this.life < 3) {\n      this.life += 1;\n      this.invincibilityFrames = 0;\n      this.invincibilityColor = 'lawngreen';\n    }\n  }\n}\n\nexport default Player;\n","import BulletPool from './bullet';\nimport DemonPool from './demon';\nimport Field from './field';\nimport PickupsPool from './pickups';\nimport Player from './player';\nimport { AssetStore, Timer } from './utilities';\n\nconst KEY_MAP = {\n  74: 'left',     // j\n  76: 'right',    // l\n  68: 'right',    // d\n  65: 'left',     // a\n  39: 'right',    // left arrow\n  37: 'left',     // right arrow\n  32: 'fire',     // space bar\n  13: 'start',    // enter\n  touchLeft: 'left',\n  touchRight: 'right',\n  touchFire: 'fire',\n};\n\nconst KEY_STATUS = {};\nfor (let code in KEY_MAP) {\n  KEY_STATUS[KEY_MAP[code]] = false;\n}\n\nclass Game {\n  constructor(fgCanvas, statsCanvas, pcCanvas, optsCanvas, mobileCanvas) {\n    this.fgCanvas = {\n      ctx: fgCanvas.getContext('2d'),\n      width: 800,\n      height: 500\n    };\n    this.statsCanvas = {\n      ctx: statsCanvas.getContext('2d'),\n      width: 800,\n      height: 50\n    };\n    this.pcCanvas = {\n      ctx: pcCanvas.getContext('2d'),\n      width: 150,\n      height: 150\n    };\n    this.optsCanvas = {\n      canvas: optsCanvas,\n      ctx: optsCanvas.getContext('2d'),\n      width: 800,\n      height: 500\n    };\n    if (mobileCanvas === null) {\n      this.isMobile = false;\n      this.firePosition = null;\n      this.mobileCanvas = { };\n    } else {\n      this.isMobile = true;\n      this.firePosition = 'standard';\n      this.mobileCanvas = {\n        canvas: mobileCanvas,\n        ctx: mobileCanvas.getContext(\"2d\"),\n        width: 800,\n        height: 500,\n      };\n    };\n\n    this.play = this.play.bind(this);\n    this.startRound = this.startRound.bind(this);\n    this.optsCanvasCheckClick = this.optsCanvasCheckClick.bind(this);\n    this.statsCanvasCheckClick = this.statsCanvasCheckClick.bind(this);\n\n    this.AssetStore = new AssetStore(this);\n\n    this.gamePadConnected = false;\n    this.gamePadToggle = false;\n    this.nextHpSpawnScore = 500;\n\n    this.drawLoadingScreen();\n    this.setupEventListners(fgCanvas, statsCanvas, optsCanvas);\n    this.setupNewGame();\n    this.setupNewField();\n  }\n\n  drawLoadingScreen() {\n    this.optsCanvas.ctx.fillStyle = 'black';\n    this.optsCanvas.ctx.font = \"16px Courier\";\n    this.optsCanvas.ctx.fillText(\"Loading...\", 50,50);\n  }\n\n  setupEventListners(fgCanvas, statsCanvas, optsCanvas) {\n    document.addEventListener('keydown', this.keydown.bind(this));\n    document.addEventListener('keyup', this.keyup.bind(this));\n    optsCanvas.addEventListener('click', (e) => {\n      this.optsCanvasCheckClick(e, optsCanvas.getBoundingClientRect());\n    });\n    statsCanvas.addEventListener('click', (e) => {\n      this.statsCanvasCheckClick(e, statsCanvas.getBoundingClientRect());\n    });\n\n    fgCanvas.addEventListener(\"touchstart\", (e) => {\n      this.handleStart(e, fgCanvas.getBoundingClientRect());\n    }, false);\n    fgCanvas.addEventListener(\"touchend\", (e) => {\n      this.handleEnd(e, fgCanvas.getBoundingClientRect());\n    }, false);\n    fgCanvas.addEventListener(\"touchcancel\", this.handleCancel, false);\n    this.ongoingTouches = [];\n\n    window.addEventListener(\"gamepadconnected\", (e) => {\n      this.mapGamePadButtons(e);\n      this.gamePadConnected = true;\n    });\n    window.addEventListener(\"gamepaddisconnected\", (e) => {\n      this.gamePadConnected = false;\n      this.gamePadToggle = false;\n    });\n  }\n\n  setupNewGame() {\n    this.demonBulletPool = new BulletPool(3, this.fgCanvas, 'demonBullet');\n    this.pcBulletPool = new BulletPool(4, this.fgCanvas, 'player');\n    this.setupDemonPools();\n    this.pickupsPool = new PickupsPool(this.fgCanvas.ctx, this.AssetStore);\n    this.player = new Player(this.pcCanvas, this.pcBulletPool);\n    this.movementDirection = 'standard';\n    this.muted = false;\n    this.paused = false;\n    this.gameStatus = 'unbegun';\n  }\n\n  setupDemonPools() {\n    const lvl1Demons = [\n      'mouthDemon', 'mouthDemon', 'mouthDemon',\n      'eyeDemon', 'eyeDemon', 'eyeDemon',\n    ];\n    this.lvl1DemonPool = new DemonPool(\n      lvl1Demons, this.fgCanvas.ctx, this.AssetStore, this.demonBulletPool,\n    );\n\n    const lvl2Demons = ['faceDemon', 'faceDemon'];\n    this.lvl2DemonPool = new DemonPool(\n      lvl2Demons, this.fgCanvas.ctx, this.AssetStore, this.demonBulletPool,\n    );\n  }\n\n  setupNewField() {\n    this.field = new Field(\n      this.fgCanvas,\n      this.statsCanvas,\n      this.pcCanvas,\n      this.optsCanvas,\n      this.AssetStore,\n      this.demonBulletPool,\n      this.pcBulletPool,\n      this.lvl1DemonPool,\n      this.lvl2DemonPool,\n      this.pickupsPool,\n      this.player,\n      this.movementDirection,\n      this.gameStatus,\n      this.mobileCanvas,\n      this.firePosition,\n    );\n  }\n\n  startGame() {\n    this.field.drawStatusBar();\n    this.drawStartScreen();\n  }\n\n  drawStartScreen() {\n    if (this.isMobile) {\n      this.field.drawMobileStartScreen();\n    } else {\n      this.field.drawStandardStartScreen();\n    }\n  }\n\n  startRound() {\n    this.AssetStore.backgroundMusic.play();\n\n    this.lvl1Timer = new Timer(() => { this.spawnLvl1Demons() }, 5000);\n    this.lvl2Timer = new Timer(() => { this.spawnLvl2Demons() }, 15000);\n\n    this.field.clearOptsContext();\n    this.optsCanvas.canvas.classList.add('hidden');\n    this.gameStatus = 'playing';\n    this.field.updateGameStatus(this.gameStatus);\n    this.startTime = Date.now();\n    this.lastTime = Date.now();\n    this.play();\n  }\n\n  pauseSpawnTimers() {\n    this.lvl1Timer.pause();\n    this.lvl2Timer.pause();\n  }\n\n  resumeSpawnTimers() {\n    this.lvl1Timer.resume();\n    this.lvl2Timer.resume();\n  }\n\n  removeSpawnTimers() {\n    this.lvl1Timer.clear();\n    this.lvl2Timer.clear();\n  }\n\n  play() {\n    this.checkGameOver();\n    this.checkCollisions();\n    if (this.gamePadToggle) {\n      this.buttonDown();\n    }\n    this.player.move(KEY_STATUS);\n    if (this.gamePadToggle) {\n      this.buttonUp();\n    }\n\n    const now = Date.now();\n\n    this.checkLevel1Demons();\n    this.field.render();\n    this.spawnHp();\n\n    if (!this.paused) {\n      setTimeout(() => {\n        this.lastTime = now;\n        requestAnimationFrame(this.play);\n      }, 15); // caps fps at ~60\n    }\n  }\n\n  checkLevel1Demons() {\n    let spawnedLvl1 = 0;\n    for (let i = 0; i < this.lvl1DemonPool.pool.length; i++) {\n      const demon = this.lvl1DemonPool.pool[i];\n      if (demon.type === 'mouthDemon' && demon.spawned) {\n        spawnedLvl1++;\n      } else if (demon.type === 'eyeDemon' && demon.spawned) {\n        spawnedLvl1++;\n      }\n    }\n\n    if (spawnedLvl1 < 1) {\n      this.lvl1DemonPool.get('mouthDemon');\n      this.lvl1DemonPool.get('eyeDemon');\n    }\n\n    return spawnedLvl1;\n  }\n\n  spawnLvl1Demons() {\n    const maxDemons = this.getMaxDemons('lvl1');\n    if (this.checkLevel1Demons() < maxDemons) {\n      const toGet = Math.random() < 0.5 ? 'mouthDemon' : 'eyeDemon';\n      this.lvl1DemonPool.get(toGet);\n    };\n\n    this.lvl1Timer = new Timer(() => { this.spawnLvl1Demons() }, 5000);\n  }\n\n  spawnLvl2Demons() {\n    let spawnedLvl2 = 0;\n    for (let i = 0; i < this.lvl2DemonPool.pool.length; i++) {\n      const demon = this.lvl2DemonPool.pool[i];\n      if (demon.type === 'faceDemon' && demon.spawned) {\n        spawnedLvl2++\n      };\n    };\n\n    const maxDemons = this.getMaxDemons('lvl2');\n    if (spawnedLvl2 < maxDemons) {\n      this.lvl2DemonPool.get('faceDemon');\n    }\n\n    this.lvl2Timer = new Timer(() => { this.spawnLvl2Demons() }, 15000);\n  }\n\n  checkNumHpPickups() {\n    let spawnedHp = 0;\n    for (let i = 0; i < this.pickupsPool.pool.length; i++) {\n      const pickup = this.pickupsPool.pool[i];\n      if (pickup.type === 'hp' && pickup.spawned) {\n        spawnedHp++;\n      };\n    }\n    return spawnedHp;\n  }\n\n  spawnHp() {\n    if (this.field.playerScore > this.nextHpSpawnScore && this.checkNumHpPickups() < 1) {\n      this.pickupsPool.get('hp');\n      this.nextHpSpawnScore += 1000;\n    }\n  }\n\n  getMaxDemons(level) {\n    if (this.lastTime - this.startTime < 40000) {\n      if (level === 'lvl1') { return 4 };\n      if (level === 'lvl2') { return 1 };\n    } else {\n      if (level === 'lvl1') { return 6 };\n      if (level === 'lvl2') { return 2 };\n    };\n  }\n\n  checkCollisions() {\n    const spawnedPCBullets = this.pcBulletPool.pool.filter((bullet) => bullet.spawned);\n    this.checkPlayerCollision(spawnedPCBullets);\n    this.checkDemonCollision(spawnedPCBullets);\n    this.checkHpCollision(spawnedPCBullets);\n  }\n\n  checkPlayerCollision(spawnedPCBullets) {\n    const spawnedDemonBullets = this.demonBulletPool.pool.filter((bullet) => bullet.spawned);\n    const hitbox = {\n      x: this.player.hitboxCenter.x,\n      y: this.player.hitboxCenter.y,\n      radius: 12\n    }\n\n    for (let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n      const bullet = spawnedPCBullets[bullIdx];\n      if (\n        (\n          this.bulletHitsPC(this.player, hitbox, bullet.startPoint)\n          || this.bulletHitsPC(this.player, hitbox, bullet.endPoint)\n        ) && this.player.invincibilityFrames > 50\n      ) {\n        this.player.isHit();\n        this.field.drawPlayerHearts();\n      };\n    }\n\n    for (let bullIdx = 0; bullIdx < spawnedDemonBullets.length; bullIdx++) {\n      const bullet = spawnedDemonBullets[bullIdx];\n      if (\n        (\n          this.bulletHitsPC(this.player, hitbox, bullet.startPoint)\n          || this.bulletHitsPC(this.player, hitbox, bullet.endPoint)\n        ) && this.player.invincibilityFrames > 50\n      ) {\n        this.player.isHit();\n        this.field.drawPlayerHearts();\n      };\n    }\n  }\n\n  bulletHitsPC(player, hitbox, bullet) {\n    const newX = hitbox.x - player.pcFieldWidth / 2 + this.fgCanvas.width / 2;\n    const newY = hitbox.y - player.pcFieldHeight / 2 + this.fgCanvas.height / 2;\n    const distanceFromHitboxToBullet = Math.sqrt(\n      Math.pow(newX - bullet.x, 2) + Math.pow(newY - bullet.y, 2)\n    );\n\n    return distanceFromHitboxToBullet <= hitbox.radius;\n  }\n\n  checkDemonCollision(spawnedPCBullets) {\n    const spawnedlvl1Demons = this.lvl1DemonPool.pool.filter((demon) => demon.spawned);\n    const spawnedlvl2Demons = this.lvl2DemonPool.pool.filter((demon) => demon.spawned);\n    const spawnedDemons = spawnedlvl1Demons.concat(spawnedlvl2Demons);\n\n    for (let demonIdx = 0; demonIdx < spawnedDemons.length; demonIdx++) {\n      const demon = spawnedDemons[demonIdx];\n      for (let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n        const bullet = spawnedPCBullets[bullIdx];\n        const drawPoint = demon.drawPoint;\n        if (\n          (\n            this.pcBulletHitsObject(demon, drawPoint, bullet.startPoint)\n            || this.pcBulletHitsObject(demon, drawPoint, bullet.endPoint)\n          ) && demon.invincibilityFrames > 50\n        ) {\n          this.field.updatePlayerScore(demon.type);\n          demon.isHit();\n        };\n      }\n    }\n  }\n\n  checkHpCollision(spawnedPCBullets) {\n    const spawnedHp = this.pickupsPool.pool.filter((pickup) => (\n      pickup.type === 'hp' && pickup.spawned\n    ));\n\n    for (let hpIdx = 0; hpIdx < spawnedHp.length; hpIdx++) {\n      const hp = spawnedHp[hpIdx];\n      for (let bullIdx = 0; bullIdx < spawnedPCBullets.length; bullIdx++) {\n        const bullet = spawnedPCBullets[bullIdx];\n        const drawPoint = hp.drawPoint;\n        if (\n          (\n            this.pcBulletHitsObject(hp, drawPoint, bullet.startPoint)\n            || this.pcBulletHitsObject(hp, drawPoint, bullet.endPoint)\n          ) && hp.invincibilityFrames > 50\n        ) {\n          if (this.player.life < 3) {\n            this.player.isHealed();\n            hp.isHit();\n            this.field.drawPlayerHearts();\n          }\n        };\n      }\n    }\n  }\n\n  pcBulletHitsObject(object, drawPoint, bullet) {\n    return (\n      (drawPoint.x <= bullet.x && bullet.x <= drawPoint.x + object.width)\n      && (drawPoint.y <= bullet.y && bullet.y <= drawPoint.y + object.height)\n    )\n  }\n\n  checkGameOver() {\n    if (this.player.life <= 0) {\n      this.paused = true;\n      this.removeSpawnTimers();\n      this.gameStatus = 'over';\n      this.field.updateGameStatus(this.gameStatus);\n      this.drawStartScreen();\n    };\n  }\n\n  buttonDown() {\n    // let gamepads = navigator.getGamepads ? navigator.getGamepads() :\n    //   (navigator.webkitGetGamepads ? navigator.webkitGetGamepads : []);\n\n    if (\n      navigator.getGamepads()[0].buttons[14].pressed\n      || navigator.getGamepads()[0].axes[0] < -0.1\n    ) {\n      KEY_STATUS[KEY_MAP['controllerLeft']] = true;\n    }\n    if (\n      navigator.getGamepads()[0].buttons[15].pressed\n      || navigator.getGamepads()[0].axes[0] > 0.1\n    ) {\n      KEY_STATUS[KEY_MAP['controllerRight']] = true;\n    };\n    if (\n      navigator.getGamepads()[0].buttons[0].pressed\n      || navigator.getGamepads()[0].buttons[1].pressed\n      || navigator.getGamepads()[0].buttons[2].pressed\n      || navigator.getGamepads()[0].buttons[3].pressed\n      || navigator.getGamepads()[0].buttons[4].pressed\n      || navigator.getGamepads()[0].buttons[5].pressed\n    ) {\n      KEY_STATUS[KEY_MAP['controllerFire']] = true;\n    };\n  }\n\n  buttonUp() {\n    // let gamepads = navigator.getGamepads ? navigator.getGamepads() :\n    //   (navigator.webkitGetGamepads ? navigator.webkitGetGamepads : []);\n\n    if (!navigator.getGamepads()[0].buttons[14].pressed) {\n      KEY_STATUS[KEY_MAP['controllerLeft']] = false;\n    }\n    if (!navigator.getGamepads()[0].buttons[15].pressed) {\n      KEY_STATUS[KEY_MAP['controllerRight']] = false;\n    };\n    if (\n      !navigator.getGamepads()[0].buttons[0].pressed\n      && !navigator.getGamepads()[0].buttons[1].pressed\n      && !navigator.getGamepads()[0].buttons[2].pressed\n      && !navigator.getGamepads()[0].buttons[3].pressed\n      && !navigator.getGamepads()[0].buttons[4].pressed\n      && !navigator.getGamepads()[0].buttons[5].pressed\n    ) {\n      KEY_STATUS[KEY_MAP['controllerFire']] = false;\n    };\n  }\n\n  keydown(e) {\n    const keyCode = e.which || e.keyCode || 0;\n    if (keyCode === 13 && this.gameStatus !== 'playing') {\n      this.newGame();\n    }\n    if (keyCode === 77) {\n      this.clickMute();\n    }\n    if (keyCode === 80) {\n      this.clickPause();\n    }\n    if (KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = true;\n    }\n  }\n\n  keyup(e) {\n    const keyCode = e.which || e.keyCode || 0;\n    if (KEY_MAP[keyCode]) {\n      e.preventDefault();\n      KEY_STATUS[KEY_MAP[keyCode]] = false;\n    }\n  }\n\n  handleStart(e, boundingRect) {\n    e.preventDefault();\n    const touches = e.changedTouches;\n    for (let i = 0; i < touches.length; i++) {\n      const touch = touches[i];\n      const posX = touch.pageX - boundingRect.left;\n      const posY = touch.pageY - boundingRect.top;\n\n      if (\n        this.movementDirection === 'standard' && this.firePosition === 'standard'\n      ) {\n        if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if ((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      } else if (\n        this.movementDirection === 'inverted' && this.firePosition === 'standard'\n      ) {\n        if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if ((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      } else if (\n        this.movementDirection === 'standard' && this.firePosition === 'inverted'\n      ) {\n        if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if ((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      } else if (\n        this.movementDirection === 'inverted' && this.firePosition === 'inverted'\n      ) {\n        if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = true;\n        } else if ((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = true;\n        } else if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = true;\n        };\n      };\n\n      this.ongoingTouches.push(this.copyTouch(touches[i], posX, posY));\n    };\n  }\n\n  handleEnd(e, boundingRect) {\n    e.preventDefault();\n    const touches = e.changedTouches;\n    for (let i = 0; i < touches.length; i++) {\n      const touch = touches[i];\n      const posX = touch.pageX - boundingRect.left;\n      const posY = touch.pageY - boundingRect.top;\n\n      if (\n        this.movementDirection === 'standard' && this.firePosition === 'standard'\n      ) {\n        if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if ((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      } else if (\n        this.movementDirection === 'inverted' && this.firePosition === 'standard'\n      ) {\n        if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if ((0 <= posX && posX <= 200) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      } else if (\n        this.movementDirection === 'standard' && this.firePosition === 'inverted'\n      ) {\n        if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if ((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      } else if (\n        this.movementDirection === 'inverted' && this.firePosition === 'inverted'\n      ) {\n        if ((600 <= posX && posX <= 800) && (0 <= posY && posY <= 299)) {\n          KEY_STATUS[KEY_MAP['touchLeft']] = false;\n        } else if ((600 <= posX && posX <= 800) && (300 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchRight']] = false;\n        } else if ((0 <= posX && posX <= 200) && (0 <= posY && posY <= 500)) {\n          KEY_STATUS[KEY_MAP['touchFire']] = false;\n        };\n      };\n\n      const touchIdx = this.ongoingTouchIndexById(touch.identifier);\n      this.ongoingTouches.splice(touchIdx, 1);\n    };\n  }\n\n  copyTouch(touch, posX, posY) {\n    return {\n      identifier: touch.identifier,\n      posX,\n      posY,\n    };\n  }\n\n  ongoingTouchIndexById(idToFind) {\n    for (let i = 0; i < this.ongoingTouches.length; i++) {\n      const id = this.ongoingTouches[i].identifier;\n      if (id == idToFind) {\n        return i\n      };\n    }\n    return -1; // not found\n  }\n\n  statsCanvasCheckClick(e, boundingRect) {\n    e.preventDefault();\n    const clickPosX = e.clientX - boundingRect.left;\n    const clickPosY = e.clientY - boundingRect.top;\n\n    if (\n      (530 <= clickPosX && clickPosX <= 630)\n      && (10 <= clickPosY && clickPosY <= 40)\n    ) {\n      this.clickMute();\n    } else if (\n      (650 <= clickPosX && clickPosX <= 750)\n      && (10 <= clickPosY && clickPosY <= 40)\n    ) {\n      this.clickPause();\n    }\n  }\n\n  optsCanvasCheckClick(e, boundingRect) {\n    e.preventDefault();\n    const clickPosX = e.clientX - boundingRect.left;\n    const clickPosY = e.clientY - boundingRect.top;\n\n    if (\n      (240 <= clickPosX && clickPosX <= 560)\n      && (165 <= clickPosY && clickPosY <= 200)\n    ) {\n      this.swapMovementDirection();\n    } else if (\n      (300 <= clickPosX && clickPosX <= 505)\n      && (385 <= clickPosY && clickPosY <= 472)\n    ) {\n      if (this.gameStatus === 'unbegun') {\n        this.startRound();\n      } else if (this.gameStatus === 'playing') {\n        this.clickPause();\n      } else if (this.gameStatus === 'over') {\n        this.newGame();\n      }\n    } else if (\n      (20 <= clickPosX && clickPosX <= 170)\n      && (410 <= clickPosY && clickPosY <= 490)\n    ) {\n      this.gamePadToggle = this.gamePadToggle ? false : true;\n      this.field.drawGamePadToggleButton();\n    } else if (\n      (290 <= clickPosX && clickPosX <= 515)\n      && (255 <= clickPosY && clickPosY <= 290)\n      && this.isMobile === true\n    ) {\n      this.moveFireButton();\n    }\n  }\n\n  clickMute() {\n    if (this.muted === true) {\n      this.muted = false;\n      this.AssetStore.backgroundMusic.volume = 0.25;\n    } else {\n      this.muted = true;\n      this.AssetStore.backgroundMusic.volume = 0;\n    }\n\n    this.field.updateMuteButton(this.muted);\n  }\n\n  clickPause() {\n    if (this.paused && this.gameStatus === 'playing') {\n      this.paused = false;\n      this.resumeSpawnTimers();\n      this.field.clearOptsContext();\n      this.optsCanvas.canvas.classList.add('hidden');\n      this.play();\n    } else if (!this.paused && this.gameStatus === 'playing') {\n      this.paused = true;\n      this.pauseSpawnTimers();\n      this.drawStartScreen();\n    };\n  }\n\n  newGame() {\n    this.field.clearAllContexts();\n    this.setupNewGame();\n    this.setupNewField();\n    this.field.drawStatusBar();\n    this.startRound();\n  }\n\n  swapMovementDirection() {\n    if (this.movementDirection === 'standard') {\n      this.movementDirection = 'inverted';\n      KEY_MAP[74] = 'right';\n      KEY_MAP[76] = 'left';\n      KEY_MAP[68] = 'left';\n      KEY_MAP[65] = 'right';\n      KEY_MAP[39] = 'left';\n      KEY_MAP[37] = 'right';\n    } else {\n      this.movementDirection = 'standard';\n      KEY_MAP[74] = 'left';\n      KEY_MAP[76] = 'right';\n      KEY_MAP[68] = 'right';\n      KEY_MAP[65] = 'left';\n      KEY_MAP[39] = 'right';\n      KEY_MAP[37] = 'left';\n    }\n\n    this.field.updateMovementDirection(this.movementDirection);\n    this.drawStartScreen();\n  }\n\n  moveFireButton() {\n    if (this.firePosition === 'standard') {\n      this.firePosition = 'inverted';\n    } else {\n      this.firePosition = 'standard';\n    }\n    this.field.updateFirePosition(this.firePosition);\n    this.drawStartScreen();\n  }\n\n  mapGamePadButtons(e) {\n    KEY_MAP['controllerFire'] = 'fire';\n    KEY_MAP['controllerLeft'] = 'left';\n    KEY_MAP['controllerRight'] = 'right';\n    KEY_STATUS['controllerFire'] = false;\n    KEY_STATUS['controllerLeft'] = false;\n    KEY_STATUS['controllerRight'] = false;\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const foregroundCanvas = document.getElementById(\"foreground-canvas\");\n  const playerCanvas = document.getElementById(\"player-canvas\");\n  const statsCanvas = document.getElementById(\"stats-canvas\");\n  const optionsCanvas = document.getElementById(\"options-canvas\");\n  const mobileCanvas = null;\n\n  if (\n    (typeof window.orientation !== \"undefined\")\n    || (navigator.userAgent.indexOf('IEMobile') !== -1)\n  ) {\n    mobileCanvas = document.createElement(\"canvas\");\n    mobileCanvas.id = \"mobile-canvas\";\n    mobileCanvas.width = \"800\";\n    mobileCanvas.height = \"500\";\n    document.getElementsByClassName(\"game-area\")[0].appendChild(mobileCanvas);\n  };\n\n  new Game(\n    foregroundCanvas,\n    statsCanvas,\n    playerCanvas,\n    optionsCanvas,\n    mobileCanvas,\n  );\n});\n"],"names":["ObjectPool","_createClass","size","_classCallCheck","this","pool","key","value","objectData","spawned","spawn","unshift","pop","type","i","draw","BulletPool","resetable","setDefaultValues","push","splice","Sprite","context","image","srcWidth","srcHeight","srcX","srcY","bind","drawPointX","drawPointY","drawImage","AssetStore","game","_this","backgroundMusic","Audio","loop","volume","load","checkReadyState","checkAudio","window","setInterval","mouthDemon","Image","width","height","eyeDemon","faceDemon","faceDemonHurt","bossDemon","heart","hp","numAssets","numLoaded","onload","assetLoaded","src","readyState","clearInterval","startGame","Timer","callback","delay","timerId","start","remaining","pause","clearTimeout","Date","resume","setTimeout","clear","getRandNum","min","max","Math","floor","random","_ObjectPool","fgCanvas","bullet","Bullet","_inherits","ctx","ctxWidth","ctxHeight","resetX","resetY","bulletData","pathAngle","theta","startRadius","endRadius","speed","startPoint","computePoint","endPoint","y","x","startX","startY","clearRect","radius","cos","xOffset","sin","yOffset","DemonPool","demons","length","demon","Demon","storedAsset","sprite","drawPoint","computeDrawPoint","abs","endSpeed","invincibilityFrames","hurtSprite","chanceToFire","fireThreshold","fire","life","get","thetaMultiplier","speedMultiplier","PI","Field","fgCanvasObj","statsCanvasObj","pcCanvasObj","optsCanvasObj","demonBulletPool","pcBulletPool","lvl1DemonPool","lvl2DemonPool","pickupsPool","player","movementDirection","gameStatus","mobileCanvasObj","firePosition","statsCanvas","pcCanvas","optsCanvas","mobileCanvas","lastTime","now","playerScore","newDirection","newPosition","primaryText","secondaryText","setupStartScreen","text","drawStartScreenMessage","drawControls","drawMobileControls","canvas","classList","remove","clearOptsContext","fillStyle","fillRect","strokeStyle","strokeRect","font","fillText","concat","cw","ccw","desc1X","desc1Y","desc2X","desc2Y","circleX","circleY","drawSwapMovementButton","beginPath","arc","lineWidth","stroke","moveTo","lineTo","drawGamePadToggleButton","firePos","descX","descY","drawSwapFireButton","gamePadConnected","gamePadToggle","undrawFGContext","clearPCContext","updatePlayerCharge","drawPlayerRails","drawPlayerHearts","fireCharge","muted","shape","xCenter","yCenter","clearFGContext","clearStatsContext","pickups","PickupsPool","pickup","Pickup","Player","pcFieldWidth","pcFieldHeight","velocity","acceleration","maxSpeed","fireCooldown","invincibilityColor","portTheta","starboardTheta","bowTheta","computeAllVerticies","portVertex","computePortVertex","starboardVertex","computeStarboardVertex","bowVertex","computeCenterPoints","hitboxCenter","keyStatus","left","right","fill","KEY_MAP","touchLeft","touchRight","touchFire","KEY_STATUS","code","Game","getContext","isMobile","play","startRound","optsCanvasCheckClick","statsCanvasCheckClick","nextHpSpawnScore","drawLoadingScreen","setupEventListners","setupNewGame","setupNewField","document","addEventListener","keydown","keyup","e","getBoundingClientRect","handleStart","handleEnd","handleCancel","ongoingTouches","mapGamePadButtons","setupDemonPools","paused","field","drawStatusBar","drawStartScreen","drawMobileStartScreen","drawStandardStartScreen","_this2","lvl1Timer","spawnLvl1Demons","lvl2Timer","spawnLvl2Demons","add","updateGameStatus","startTime","_this3","checkGameOver","checkCollisions","buttonDown","move","buttonUp","checkLevel1Demons","render","spawnHp","requestAnimationFrame","spawnedLvl1","_this4","maxDemons","getMaxDemons","toGet","_this5","spawnedLvl2","spawnedHp","checkNumHpPickups","level","spawnedPCBullets","filter","checkPlayerCollision","checkDemonCollision","checkHpCollision","spawnedDemonBullets","hitbox","bullIdx","bulletHitsPC","isHit","newX","newY","sqrt","pow","spawnedlvl1Demons","spawnedlvl2Demons","spawnedDemons","demonIdx","pcBulletHitsObject","updatePlayerScore","hpIdx","isHealed","object","removeSpawnTimers","navigator","getGamepads","buttons","pressed","axes","keyCode","which","newGame","clickMute","clickPause","preventDefault","boundingRect","touches","changedTouches","touch","posX","pageX","posY","pageY","top","copyTouch","touchIdx","ongoingTouchIndexById","identifier","idToFind","clickPosX","clientX","clickPosY","clientY","swapMovementDirection","moveFireButton","updateMuteButton","resumeSpawnTimers","pauseSpawnTimers","clearAllContexts","updateMovementDirection","updateFirePosition","foregroundCanvas","getElementById","playerCanvas","optionsCanvas","orientation","userAgent","indexOf","createElement","_readOnlyError","id","getElementsByClassName","appendChild"],"sourceRoot":""}